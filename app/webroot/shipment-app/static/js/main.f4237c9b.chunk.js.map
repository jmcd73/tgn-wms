{"version":3,"sources":["Wrap.js","WrapCheckbox.js","AlertMessage.js","App.js","serviceWorker.js","index.js"],"names":["Wrap","props","react_default","a","createElement","Fragment","children","popoverText","CustomPopover","placement","console","log","Popover_default","Object","assign","id","concat","title","WrapCheckbox","disabled","childKey","OverlayTrigger_default","trigger","rootClose","overlay","WrapCheckbox_CustomPopover","style","padding","margin","key","AlertMessage","bsStyle","strongText","normalText","onDismiss","options","success","icon","faCheckCircle","warning","faExclamation","info","faInfoCircle","danger","faExclamationTriangle","CSSTransition","in","show","timeout","classNames","unmountOnExit","Alert_default","index_es","App","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","defaults","isExpanded","products","shipmentTypeDisabled","labelLists","loading","redirect","labelCounts","showAlert","errors","shipment","operation","shipment_type","shipped","shipper","destination","product_type_id","labelIds","isLoading","productType","productTypeName","activeKey","loadedData","productTypes","baseUrl","state","_objectSpread","setProductType","bind","assertThisInitialized","updateActiveKey","getLabelList","addRemoveLabel","toggleIsExpanded","buildLabelString","getLabelObject","toggleShipped","toggleAlert","setShipmentDetail","submitData","value","setState","defineProperty","n","_this2","suffix","filter","x","url","join","fetch","headers","Accept","X-Requested-With","then","resp","json","d","codeDescs","createCodeDescriptions","shipment_labels","toConsumableArray","fill","type","thisShipment","_d$thisShipment$Shipm","Shipment","Label","map","location","Location","catch","e","labelObject","item","description","_this$state","codeDesc","buildCodeDescString","itemId","item_id","updateSingleLabelCount","getSingleItemLabelCount","indexOf","productArray","index","length","itemString","count","_this3","arguments","undefined","ctr","reduce","accum","current","push","productTitle","labelList","idx","newLabelList","b","_this4","newAlertState","setTimeout","_this5","_this$state2","_this$state$shipment","postObject","cur","shipment_id","method","mode","cache","credentials","Content-Type","body","JSON","stringify","response","error","keys","fieldName","isAdd","labelId","updateCodeDescriptions","target","_this$parseRouterArgs","parseRouterArgs","fetchData","_this$props$match$par","match","params","typeOrId","isNaN","_this$parseRouterArgs2","getProductType","_this6","ProductType","name","best_before","pl_ref","qty","_this7","_this$state3","shipperError","shippedError","destinationError","selectedCount","labelsOnShipment","classes","spinner","Row_default","Col_default","lg","className","PulseLoader_default","size","color","Checkbox_default","bsClass","checked","onChange","window","src_Wrap","src_AlertMessage_0","textTransform","Form_default","onSubmit","preventDefault","FormGroup_default","validationState","getValidationState","bsSize","controlId","ControlLabel_default","FormControl_default","placeholder","_this7$state$errors","newState","objectWithoutProperties","required","Feedback","HelpBlock_default","lib","selected","onInputChange","onSearch","query","labelKey","Button_default","onClick","PanelGroup_default","onSelect","product","Panel_default","eventKey","expanded","onToggle","Heading","Title","toggle","Badge_default","Body","collapsible","checkboxClasses","slice","Glyphicon_default","glyph","pointerEvents","src_WrapCheckbox","componentClass","React","Component","exported","withRouter","Boolean","hostname","root","document","getElementById","getAttribute","ReactDOM","render","react_router_dom","react_router","path","exact","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f4237c9b.chunk.js","sourcesContent":["import React from \"react\";\n/* wrap in div if dev and nothing if production */\nconst Wrap = (props) => {\n\tlet renderThis = null\n\n\tif(process.env.NODE_ENV === 'development') {\n\t\trenderThis = ( <div className=\"container\">\n\t\t\t\t\t\t\t{props.children}\n\t\t</div> )\n\t} else {\n\t\trenderThis = (\n\t\t\t<>\n\t\t\t\t{props.children}\n\t\t\t</>\n\t\t);\n\t}\n\treturn renderThis;\n}\n\nexport default Wrap;\n","import React from \"react\";\nimport OverlayTrigger from \"react-bootstrap/lib/OverlayTrigger\";\nimport Popover from \"react-bootstrap/lib/Popover\";\n\nconst popoverText = (\n\t<>\n\t\t<p>\n\t\t\tThis pallet doesn&apos;t have enough days product life left before it expires to allow\n\t\t\tit to ship.\n\t\t</p>\n\t\t<p>\n\t\t\tYou won&apos;t be able to add this pallet to a shipper until you mark it\n\t\t\tas being allowed to ship.\n\t\t</p>\n\t\t\t<ol>\n\t\t\t\t<li>Leave this screen and go to Warehouse => View Stock.</li>\n\t\t\t\t<li>Find the pallet and click it&apos;s \"Edit\" link</li>\n\t\t\t\t<li>If a login screen appears login with your username and password</li>\n\t\t\t\t<li>Tick the &quot;Ship low dated&quot; checkbox</li>\n\t\t\t\t<li>click Submit</li>\n\t\t\t</ol>\n\n\t</>\n);\n\nconst CustomPopover = props => {\n\tconst { placement } = props;\n\tconsole.log(props);\n\n\treturn (\n\t\t<Popover\n\t\t\t{...props}\n\t\t\tid={`popover-positioned-${placement}`}\n\t\t\ttitle={`Low Dated Stock`}\n\t\t>\n\t\t\t{popoverText}\n\t\t</Popover>\n\t);\n};\nconst WrapCheckbox = props => {\n\tconst { disabled, children, childKey } = props;\n\tif (disabled) {\n\t\treturn (\n\t\t\t<OverlayTrigger\n\t\t\t\tplacement=\"bottom\"\n\t\t\t\ttrigger=\"click\"\n\t\t\t\trootClose={true}\n\t\t\t\t//container={document}\n\t\t\t\toverlay={<CustomPopover />}\n\t\t\t>\n\t\t\t\t<span style={{padding: 0, margin: 0}} key={childKey}>\n\t\t\t\t\t{children}\n\t\t\t\t</span>\n\t\t\t</OverlayTrigger>\n\t\t);\n\t} else {\n\t\treturn children;\n\t}\n};\n\nexport default WrapCheckbox;\n","import React from \"react\";\nimport Alert from \"react-bootstrap/lib/Alert\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n\tfaCheckCircle,\n\tfaExclamation,\n\tfaInfoCircle,\n\tfaExclamationTriangle\n} from \"@fortawesome/free-solid-svg-icons\";\nimport './AlertMessage.css';\nimport { CSSTransition } from \"react-transition-group\";\nconst AlertMessage = props => {\n\tconst { bsStyle, strongText, normalText, onDismiss } = props;\n\tconst options = {\n\t\tsuccess: { icon: faCheckCircle },\n\t\twarning: { icon: faExclamation },\n\t\tinfo: { icon: faInfoCircle },\n\t\tdanger: { icon: faExclamationTriangle }\n\t};\n\n\treturn (\n\t\t<CSSTransition\n\t\t\tin={props.show}\n\t\t\ttimeout={300}\n\t\t\tclassNames=\"toggen\"\n\t\t\tunmountOnExit\n\t\t>\n\t\t\t<Alert onDismiss={onDismiss} bsStyle={bsStyle}>\n\t\t\t\t<strong>\n\t\t\t\t\t<FontAwesomeIcon icon={options[bsStyle].icon} /> {strongText}{\" \"}\n\t\t\t\t</strong>{\" \"}\n\t\t\t\t{normalText}\n\t\t\t</Alert>\n\t\t</CSSTransition>\n\t);\n};\n\nexport default AlertMessage;\n","import React from \"react\";\nimport \"./App.css\";\nimport PanelGroup from \"react-bootstrap/lib/PanelGroup\";\nimport Panel from \"react-bootstrap/lib/Panel\";\nimport FormControl from \"react-bootstrap/lib/FormControl\";\nimport FormGroup from \"react-bootstrap/lib/FormGroup\";\nimport ControlLabel from \"react-bootstrap/lib/ControlLabel\";\nimport Col from \"react-bootstrap/lib/Col\";\nimport Row from \"react-bootstrap/lib/Row\";\nimport Checkbox from \"react-bootstrap/lib/Checkbox\";\nimport Badge from \"react-bootstrap/lib/Badge\";\nimport Button from \"react-bootstrap/lib/Button\";\nimport Glyphicon from \"react-bootstrap/lib/Glyphicon\";\nimport { withRouter } from \"react-router\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\nimport HelpBlock from \"react-bootstrap/lib/HelpBlock\";\nimport Wrap from \"./Wrap\";\nimport WrapCheckbox from \"./WrapCheckbox\";\nimport AlertMessage from \"./AlertMessage\";\nimport Form from \"react-bootstrap/lib/Form\";\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\n\n// import queryString from \"query-string\";\n\nimport { AsyncTypeahead } from \"react-bootstrap-typeahead\"; // ES2015\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.defaults = {\n\t\t\tisExpanded: [],\n\t\t\tproducts: [],\n\t\t\tshipmentTypeDisabled: false,\n\t\t\tlabelLists: {},\n\t\t\tloading: false,\n\t\t\tredirect: false,\n\t\t\tlabelCounts: {},\n\t\t\tshowAlert: false,\n\t\t\terrors: {},\n\t\t\tshipment: {\n\t\t\t\toperation: \"\",\n\t\t\t\tid: \"\",\n\t\t\t\tshipment_type: \"\",\n\t\t\t\tshipped: false,\n\t\t\t\tshipper: \"\",\n\t\t\t\tdestination: \"\",\n\t\t\t\tproduct_type_id: '',\n\t\t\t\tlabelIds: []\n\t\t\t},\n\t\t\tisLoading: false,\n\t\t\tproductType: 0,\n\t\t\tproductTypeName: '',\n\t\t\tactiveKey: 99999,\n\t\t\tloadedData: [],\n\t\t\toptions: [],\n\t\t\tproductTypes: [],\n\t\t\tbaseUrl: this.props.baseUrl\n\t\t};\n\t\tthis.state = {\n\t\t\t...this.defaults\n\t\t};\n\n\t\tthis.setProductType = this.setProductType.bind(this);\n\t\tthis.updateActiveKey = this.updateActiveKey.bind(this);\n\t\tthis.getLabelList = this.getLabelList.bind(this);\n\t\tthis.addRemoveLabel = this.addRemoveLabel.bind(this);\n\t\tthis.toggleIsExpanded = this.toggleIsExpanded.bind(this);\n\t\tthis.buildLabelString = this.buildLabelString.bind(this);\n\t\tthis.getLabelObject = this.getLabelObject.bind(this);\n\t\tthis.toggleShipped = this.toggleShipped.bind(this);\n\t\tthis.toggleAlert = this.toggleAlert.bind(this);\n\t\tthis.setShipmentDetail = this.setShipmentDetail.bind(this);\n\t\tthis.submitData = this.submitData.bind(this);\n\t}\n\n\tsetShipmentDetail(key, value) {\n\t\tthis.setState({\n\t\t\tshipment: { ...this.state.shipment, [key]: value }\n\t\t});\n\t}\n\n\tupdateActiveKey(n) {\n\t\tthis.setState({ activeKey: n });\n\t}\n\n\tfetchData(operation, productType, id) {\n\t\tthis.setState({\n\t\t\t...this.defaults,\n\t\t\tloading: true,\n\t\t\tproductType: productType || \"\"\n\n\t\t});\n\n\t\tconst suffix = [operation, productType, id].filter(x => x);\n\t\tconst url = this.state.baseUrl + \"Shipments/\" + suffix.join(\"/\");\n\n\t\tfetch(url, {\n\t\t\theaders: {\n\t\t\t\tAccept: \"application/json\",\n\t\t\t\t\"X-Requested-With\": \"XMLHttpRequest\"\n\t\t\t}\n\t\t})\n\t\t\t.then(resp => {\n\t\t\t\treturn resp.json();\n\t\t\t})\n\t\t\t.then(d => {\n\t\t\t\tconst codeDescs = this.createCodeDescriptions(d.shipment_labels);\n\t\t\t\tconsole.log(d);\n\t\t\t\tthis.setState({\n\t\t\t\t\tloadedData: d.shipment_labels,\n\t\t\t\t\tisExpanded: [...codeDescs].fill(false),\n\t\t\t\t\tproducts: codeDescs,\n\t\t\t\t\tshipment: { ...this.state.shipment, operation: operation },\n\t\t\t\t\tloading: false\n\t\t\t\t});\n\t\t\t\tif (d.type) {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tproductType: d.type\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif (d.thisShipment) {\n\t\t\t\t\tconst {\n\t\t\t\t\t\tshipper,\n\t\t\t\t\t\tdestination,\n\t\t\t\t\t\tshipped,\n\t\t\t\t\t\tshipment_type,\n\t\t\t\t\t\tproduct_type_id,\n\t\t\t\t\t\tid\n\t\t\t\t\t} = d.thisShipment.Shipment;\n\t\t\t\t\tconst { Label } = d.thisShipment;\n\t\t\t\t\tconst loadedData = Label.map(value => {\n\t\t\t\t\t\tconst location = { ...value.Location };\n\t\t\t\t\t\tdelete value.Location;\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tLabel: value,\n\t\t\t\t\t\t\tLocation: location\n\t\t\t\t\t\t};\n\t\t\t\t\t});\n\t\t\t\t\tconst labelIds = Label.map(value => {\n\t\t\t\t\t\treturn value.id;\n\t\t\t\t\t});\n\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tloadedData: loadedData.concat(d.shipment_labels),\n\t\t\t\t\t\tshipmentTypeDisabled: true,\n\t\t\t\t\t\tproductType: product_type_id,\n\t\t\t\t\t\tshipment: {\n\t\t\t\t\t\t\t...this.state.shipment,\n\t\t\t\t\t\t\tshipment_type,\n\t\t\t\t\t\t\tshipped,\n\t\t\t\t\t\t\tid,\n\t\t\t\t\t\t\tshipper,\n\t\t\t\t\t\t\tproduct_type_id,\n\t\t\t\t\t\t\tdestination,\n\t\t\t\t\t\t\tlabelIds\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(e => console.log(e));\n\t}\n\n\tbuildCodeDescString(labelObject) {\n\t\treturn labelObject.Label.item + \" \" + labelObject.Label.description;\n\t}\n\t/**\n\t *\n\t * @param {*} labelObject\n\t */\n\tupdateCodeDescriptions(labelObject) {\n\t\tlet { products, loadedData } = this.state;\n\n\t\tconst codeDesc = this.buildCodeDescString(labelObject);\n\t\tconst { item_id: itemId } = labelObject.Label;\n\t\tthis.updateSingleLabelCount(\n\t\t\tcodeDesc,\n\t\t\tthis.getSingleItemLabelCount(loadedData, itemId)\n\t\t);\n\n\t\tif (products.indexOf(codeDesc) === -1) {\n\t\t\tthis.setState({\n\t\t\t\tproducts: [codeDesc, ...products]\n\t\t\t});\n\t\t}\n\t}\n\n\tgetSingleItemLabelCount(productArray, itemId) {\n\t\treturn productArray.filter((value, index) => {\n\t\t\treturn value.Label.item_id === itemId;\n\t\t}).length;\n\t}\n\tupdateSingleLabelCount(itemString, count) {\n\t\tlet labelCounts = { ...this.state.labelCounts };\n\n\t\tthis.setState({\n\t\t\tlabelCounts: {...labelCounts, [itemString]: count}\n\t\t});\n\t}\n\tcreateCodeDescriptions(productArray = []) {\n\t\tlet ctr = 0;\n\t\tlet labelCounts = {};\n\n\t\tconst codeDesc = productArray.reduce((accum, current) => {\n\t\t\tconst codeDesc = this.buildCodeDescString(current);\n\t\t\tif (accum.indexOf(codeDesc) === -1) {\n\t\t\t\taccum.push(codeDesc);\n\t\t\t\tctr = 1;\n\t\t\t}\n\n\t\t\tlabelCounts[codeDesc] = ctr++;\n\n\t\t\treturn accum;\n\t\t}, []);\n\t\tthis.setState({\n\t\t\tlabelCounts: { ...this.state.labelCounts, ...labelCounts }\n\t\t});\n\t\treturn codeDesc;\n\t}\n\tgetLabelList(productTitle) {\n\t\tconst loadedData = this.state.loadedData;\n\n\t\tconst labelList = loadedData.reduce((accum, current, idx) => {\n\t\t\tconst codeDesc = current.Label.item + \" \" + current.Label.description;\n\t\t\tif (codeDesc === productTitle) {\n\t\t\t\taccum.push(current);\n\t\t\t}\n\t\t\treturn accum;\n\t\t}, []);\n\t\tlet currentLabelList = this.state.labelLists;\n\t\tlet newLabelList = { ...currentLabelList, [productTitle]: labelList };\n\t\tthis.setState({ labelLists: newLabelList });\n\t}\n\ttoggleIsExpanded(b, idx) {\n\t\tlet isExpanded = [...this.state.isExpanded];\n\t\tisExpanded[idx] = b;\n\t\tthis.setState({ isExpanded: isExpanded });\n\t}\n\n\ttoggleAlert() {\n\t\tconst newAlertState = !this.state.showAlert;\n\t\tthis.setState({ showAlert: newAlertState });\n\t\tif (newAlertState) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.setState({ showAlert: !newAlertState });\n\t\t\t}, 4000);\n\t\t}\n\t}\n\n\tsubmitData() {\n\t\tthis.setState({\n\t\t\terrors: {},\n\t\t\tloading: true\n\t\t});\n\t\tconst { baseUrl, productType } = this.state;\n\n\t\tconst {\n\t\t\toperation,\n\t\t\tshipper,\n\t\t\tshipped,\n\t\t\tid,\n\t\t\tdestination,\n\t\t\tlabelIds\n\t\t} = this.state.shipment;\n\n\t\tconst parts = [operation, id].filter(x => x);\n\n\t\tconst url = baseUrl + \"Shipments/\" + parts.join(\"/\");\n\n\t\tlet postObject = {\n\t\t\tShipment: {\n\t\t\t\tshipper: shipper,\n\t\t\t\tdestination: destination,\n\t\t\t\tshipped: shipped,\n\t\t\t\tproduct_type_id: productType\n\t\t\t},\n\t\t\tLabel: labelIds\n\t\t};\n\n\t\tswitch (operation) {\n\t\t\tcase \"add\":\n\t\t\t\tbreak;\n\t\t\tcase \"edit\":\n\t\t\t\tpostObject.Shipment.id = id;\n\t\t\t\tconst labels = labelIds.map((cur) => {\n\t\t\t\t\treturn { shipment_id: id, id: cur }\n\t\t\t\t})\n\t\t\t\tpostObject = { ...postObject, Label: labels }\n\t\t\t\tconsole.log('postObject', postObject)\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tconsole.log(\"it broken\");\n\t\t}\n\n\t\tfetch(url, {\n\t\t\tmethod: \"POST\", // *GET, POST, PUT, DELETE, etc.\n\t\t\tmode: \"cors\", // no-cors, cors, *same-origin\n\t\t\tcache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n\t\t\tcredentials: \"same-origin\", // include, *same-origin, omit\n\t\t\theaders: {\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\tAccept: \"application/json\",\n\t\t\t\t\"X-Requested-With\": \"XMLHttpRequest\"\n\t\t\t},\n\t\t\tredirect: \"error\", // manual, *follow, error\n\t\t\t//referrer: \"no-referrer\", // no-referrer, *client\n\t\t\tbody: JSON.stringify(postObject) // body data type must match \"Content-Type\" header\n\t\t})\n\t\t\t.then(response => response.json())\n\t\t\t.then(d => {\n\t\t\t\t/**\n                 *  \"error\": {\n        \"shipper\": [\n            \"Shipment number must be unique\"\n        ]\n    },\n                 */\n\t\t\t\tif (d.error) {\n\t\t\t\t\t// eslint-disable-next-line array-callback-return\n\t\t\t\t\tObject.keys(d.error).map(fieldName => {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\terrors: {\n\t\t\t\t\t\t\t\t...this.state.errors,\n\t\t\t\t\t\t\t\t[fieldName]: d.error[fieldName].join(\", \")\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.setState({\n\t\t\t\t\t\tredirect: true\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tthis.setState({ loading: false });\n\t\t\t});\n\t}\n\n\ttoggleShipped() {\n\t\tthis.setState({\n\t\t\tshipment: {\n\t\t\t\t...this.state.shipment,\n\t\t\t\tshipped: !this.state.shipment.shipped\n\t\t\t}\n\t\t});\n\t}\n\n\taddRemoveLabel(isAdd, labelId) {\n\t\tlet { shipment } = this.state;\n\t\tlet labelIds = [...shipment.labelIds];\n\n\t\tthis.updateCodeDescriptions(this.getLabelObject(labelId)[0]);\n\n\t\tif (isAdd && labelIds.indexOf(labelId) === -1) {\n\t\t\tlabelIds.push(labelId);\n\t\t}\n\t\tif (!isAdd) {\n\t\t\tlabelIds = labelIds.filter(value => {\n\t\t\t\treturn value !== labelId;\n\t\t\t});\n\t\t}\n\n\t\tthis.setState({\n\t\t\tshipment: { ...shipment, labelIds: labelIds }\n\t\t});\n\t}\n\tsetProductType(e) {\n\t\tconst productType = e.target.value;\n\n\t\tif (productType === \"\") {\n\t\t\tthis.setState({ products: [] });\n\t\t\treturn;\n\t\t}\n\t\tif (this.state.productType !== productType) {\n\t\t\tthis.setState({ productType: productType });\n\t\t\tconst { operation, id } = this.parseRouterArgs();\n\t\t\tthis.fetchData(operation, productType, id);\n\t\t}\n\t}\n\n\tparseRouterArgs() {\n\t\t// gotta fix this it's ugggggly move it out of here\n\t\tlet { operation, typeOrId } = this.props.match.params;\n\t\tlet productType = null;\n\t\tlet id = null;\n\n\t\tswitch (operation) {\n\t\t\tcase \"add\": {\n\t\t\t\tif (!typeOrId) {\n\t\t\t\t\tproductType = this.state.productType;\n\t\t\t\t} else {\n\t\t\t\t\tproductType = typeOrId;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase \"edit\": {\n\t\t\t\tif (!isNaN(typeOrId)) {\n\t\t\t\t\tconsole.log(\"typeOrId isInteger\");\n\t\t\t\t\tid = typeOrId;\n\t\t\t\t}\n\t\t\t\tthis.setState({\n\t\t\t\t\tshipmentTypeDisabled: true\n\t\t\t\t});\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdefault:\n\t\t\t\toperation = \"add\";\n\t\t\t\tproductType = this.state.productType;\n\t\t}\n\n\t\treturn { operation: operation, productType: productType, id: id };\n\t}\n\n\tgetValidationState(fieldName) {\n\t\tif (this.state.errors[fieldName] !== undefined) {\n\t\t\treturn \"error\";\n\t\t}\n\t\treturn null;\n\t}\n\n\tcomponentDidMount() {\n\t\tconst { operation, productType, id } = this.parseRouterArgs();\n\n\t\tthis.setState({\n\t\t\tbaseUrl: this.props.baseUrl\n\n\t\t});\n\t\tthis.fetchData(operation, productType, id);\n\n\t\tthis.getProductType(productType);\n\t}\n\n\tgetProductType(productType){\n\t\tconst url = this.state.baseUrl + `ProductTypes/view/${productType}`;\n\t\tconsole.log('pt', productType);\n\t\tif(productType) {\n\t\t\tfetch(url, {\n\t\t\t\theaders: {\n\t\t\t\t\tAccept: \"application/json\",\n\t\t\t\t\t\"X-Requested-With\": \"XMLHttpRequest\"\n\t\t\t\t}\n\t\t\t})\n\t\t\t\t.then(resp => {\n\t\t\t\t\treturn resp.json();\n\t\t\t\t})\n\t\t\t\t.then(d => {\n\n\t\t\t\t\tif(d.productType.ProductType){\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tproductTypeName: d.productType.ProductType.name\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t\tconsole.log('pt', d)})\n\t\t\t\t.catch(e => {\n\t\t\t\t\tthrow e\n\t\t\t\t});\n\t}\n}\n\n\tgetLabelObject(id) {\n\t\tconst { loadedData } = this.state;\n\t\tconst ret = loadedData.filter((current, idx) => {\n\t\t\treturn current.Label.id === id;\n\t\t});\n\t\treturn ret;\n\t}\n\tbuildLabelString(labelObject) {\n\t\tconst { Location, Label } = labelObject;\n\t\tconst { location } = Location;\n\t\tconst { item, best_before, pl_ref, qty, description } = Label;\n\n\t\tconst stringValues = [\n\t\t\tlocation,\n\t\t\titem,\n\t\t\tbest_before,\n\t\t\tpl_ref,\n\t\t\tqty,\n\t\t\tdescription\n\t\t];\n\t\treturn stringValues.join(\", \");\n\t}\n\trender() {\n\t\tconst {\n\t\t\tproducts,\n\t\t\tlabelLists,\n\t\t\tshowAlert,\n\t\t\tlabelCounts,\n\t\t\tisExpanded,\n\t\t\tshipment,\n\t\t\tproductTypeName,\n\t\t\tloading,\n\t\t\terrors,\n\t\t\tbaseUrl\n\t\t} = this.state;\n\n\t\tconst shipperError = errors[\"shipper\"] || \"\";\n\t\tconst shippedError = errors[\"shipped\"] || \"\";\n\t\tconst destinationError = errors[\"destination\"] || \"\";\n\t\tconst { labelIds, shipper, shipped, operation } = shipment;\n\t\tconst selectedCount = labelIds.length;\n\t\tlet labelsOnShipment = null;\n\t\tlet classes = [\"checkbox\", \"fixed\", \"pallet-list\"];\n\t\tlet spinner = null;\n\t\tif (loading) {\n\t\t\tspinner = (\n\t\t\t\t<Row>\n\t\t\t\t\t<Col lg={12}>\n\t\t\t\t\t\t<div className=\"text-center\">\n\t\t\t\t\t\t\t<PulseLoader loading={loading} size={14} color={\"#ddd\"} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t);\n\t\t}\n\n\t\tif (labelIds) {\n\t\t\tlabelsOnShipment = labelIds.map((id, idx) => {\n\t\t\t\tconst labelObject = this.getLabelObject(id)[0];\n\t\t\t\treturn (\n\t\t\t\t\t<Checkbox\n\t\t\t\t\t\tbsClass={classes.join(\" \")}\n\t\t\t\t\t\tkey={labelObject.Label.pl_ref}\n\t\t\t\t\t\tchecked\n\t\t\t\t\t\tonChange={e =>\n\t\t\t\t\t\t\tthis.addRemoveLabel(e.target.checked, labelObject.Label.id)\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t{this.buildLabelString(labelObject)}\n\t\t\t\t\t</Checkbox>\n\t\t\t\t);\n\t\t\t});\n\t\t}\n\n\t\tif (this.state.redirect && process.env.NODE_ENV === \"production\") {\n\t\t\twindow.location = baseUrl + \"Shipments/\";\n\t\t}\n\n\t\treturn (\n\t\t\t<Wrap>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col lg={12}>\n\t\t\t\t\t\t<AlertMessage\n\t\t\t\t\t\t\tstrongText=\"bold this\"\n\t\t\t\t\t\t\tnormalText=\"Message that\"\n\t\t\t\t\t\t\tbsStyle=\"info\"\n\t\t\t\t\t\t\tshow={showAlert}\n\t\t\t\t\t\t\tonDismiss={this.toggleAlert}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<h3\n\t\t\t\t\t\t\tstyle={{ textTransform: \"capitalize\" }}\n\t\t\t\t\t\t>{`${operation} ${productTypeName} Shipment`}</h3>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t<Row className=\"bpad\">\n\t\t\t\t\t<Col lg={12}>\n\t\t\t\t\t\t<Form onSubmit={e => e.preventDefault()}>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Col lg={3}>\n\t\t\t\t\t\t\t\t\t<FormGroup\n\t\t\t\t\t\t\t\t\t\tvalidationState={this.getValidationState(\"shipper\")}\n\t\t\t\t\t\t\t\t\t\tbsSize=\"sm\"\n\t\t\t\t\t\t\t\t\t\tcontrolId=\"shipper\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<ControlLabel>Shipment</ControlLabel>{\" \"}\n\t\t\t\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={shipper}\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Shipment\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={e => {\n\t\t\t\t\t\t\t\t\t\t\t\tconst { shipper, ...newState } = this.state.errors;\n\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\t\t\terrors: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t...newState\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t\t\t\t\tthis.setShipmentDetail(e.target.id, e.target.value);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\trequired=\"required\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<FormControl.Feedback />\n\t\t\t\t\t\t\t\t\t\t<HelpBlock>{shipperError}</HelpBlock>\n\t\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col lg={3}>\n\t\t\t\t\t\t\t\t\t<FormGroup\n\t\t\t\t\t\t\t\t\t\tcontrolId=\"destination\"\n\t\t\t\t\t\t\t\t\t\tbsSize={\"sm\"}\n\t\t\t\t\t\t\t\t\t\tvalidationState={this.getValidationState(\"destination\")}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<ControlLabel>Destination</ControlLabel>\n\t\t\t\t\t\t\t\t\t\t<AsyncTypeahead\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"Destination\"\n\t\t\t\t\t\t\t\t\t\t\tisLoading={this.state.isLoading}\n\t\t\t\t\t\t\t\t\t\t\tid=\"destination\"\n\t\t\t\t\t\t\t\t\t\t\tname=\"destination\"\n\t\t\t\t\t\t\t\t\t\t\tselected={[this.state.shipment.destination]}\n\t\t\t\t\t\t\t\t\t\t\tonChange={selected => {\n\t\t\t\t\t\t\t\t\t\t\t\tif (selected.length > 0) {\n\t\t\t\t\t\t\t\t\t\t\t\t\tlet destination = selected[0].value;\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setShipmentDetail(\"destination\", destination);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tonInputChange={destination => {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.setShipmentDetail(\"destination\", destination);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tonSearch={query => {\n\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({ isLoading: true });\n\t\t\t\t\t\t\t\t\t\t\t\tfetch(\n\t\t\t\t\t\t\t\t\t\t\t\t\t`${\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.state.baseUrl\n\t\t\t\t\t\t\t\t\t\t\t\t\t}Shipments/destinationLookup?term=${query}`,\n\t\t\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tAccept: \"application/json\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t.then(resp => resp.json())\n\t\t\t\t\t\t\t\t\t\t\t\t\t.then(json => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(json);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisLoading: false,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\toptions: json\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\tlabelKey=\"value\"\n\t\t\t\t\t\t\t\t\t\t\toptions={this.state.options}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<HelpBlock>{destinationError}</HelpBlock>\n\t\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col lg={4}>\n\t\t\t\t\t\t\t\t\t<FormGroup\n\t\t\t\t\t\t\t\t\t\tclassName=\"cb-shipped\"\n\t\t\t\t\t\t\t\t\t\tvalidationState={this.getValidationState(\"shipped\")}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\t\tvalidationState={this.getValidationState(\"shipped\")}\n\t\t\t\t\t\t\t\t\t\t\tchecked={shipped}\n\t\t\t\t\t\t\t\t\t\t\tonChange={this.toggleShipped}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\tShipped\n\t\t\t\t\t\t\t\t\t\t</Checkbox>\n\t\t\t\t\t\t\t\t\t\t<HelpBlock>{shippedError}</HelpBlock>\n\t\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Col lg={6}>\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tbsStyle=\"primary\"\n\t\t\t\t\t\t\t\t\t\tbsSize=\"sm\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"my-btn\"\n\t\t\t\t\t\t\t\t\t\tonClick={this.submitData}\n\t\t\t\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col lg={6}>{spinner}</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t</Form>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\n\t\t\t\t<Row>\n\t\t\t\t\t<Col lg={6}>\n\t\t\t\t\t\t<div className=\"pre-scrollable\">\n\t\t\t\t\t\t\t<PanelGroup\n\t\t\t\t\t\t\t\tid=\"accordion-controlled-example\"\n\t\t\t\t\t\t\t\tactiveKey={this.state.activeKey}\n\t\t\t\t\t\t\t\tonSelect={this.updateActiveKey}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{products &&\n\t\t\t\t\t\t\t\t\tproducts.map((product, idx) => {\n\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t<Panel\n\t\t\t\t\t\t\t\t\t\t\t\tkey={`panel-${idx}`}\n\t\t\t\t\t\t\t\t\t\t\t\teventKey={`panel-${idx}`}\n\t\t\t\t\t\t\t\t\t\t\t\texpanded={isExpanded[idx]}\n\t\t\t\t\t\t\t\t\t\t\t\tonToggle={b => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.toggleIsExpanded(b, idx);\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t<Panel.Heading>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Panel.Title\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.getLabelList(product)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttoggle\n\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{product}{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{labelCounts[product] && (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Badge>{labelCounts[product]}</Badge>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Panel.Title>\n\t\t\t\t\t\t\t\t\t\t\t\t</Panel.Heading>\n\t\t\t\t\t\t\t\t\t\t\t\t<Panel.Body collapsible>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{labelLists[product] &&\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlabelLists[product].map((value, idx) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet icon = null;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet checkboxClasses = classes.slice();\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tconst checked =\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.state.shipment.labelIds.indexOf(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue.Label.id\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t) > -1;\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlet style = {};\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif (!!+value.Label.disabled) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcheckboxClasses.push(\"bg-danger\");\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ticon = (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Glyphicon glyph=\"ban-circle\" />{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle = { pointerEvents: \"none\" };\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<WrapCheckbox\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={value.Label.pl_ref}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchildKey={value.Label.pl_ref}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={value.Label.disabled}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tbsClass={checkboxClasses.join(\" \")}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdisabled={value.Label.disabled}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tchecked={checked}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tstyle={style}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey={value.Label.pl_ref}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={e =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.addRemoveLabel(\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\te.target.checked,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue.Label.id\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{icon}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{this.buildLabelString(value)}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Checkbox>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</WrapCheckbox>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t\t\t\t\t</Panel.Body>\n\t\t\t\t\t\t\t\t\t\t\t</Panel>\n\t\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</PanelGroup>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</Col>\n\t\t\t\t\t<Col lg={6}>\n\t\t\t\t\t\t<Panel>\n\t\t\t\t\t\t\t<Panel.Heading>\n\t\t\t\t\t\t\t\t<Panel.Title componentClass=\"h3\">\n\t\t\t\t\t\t\t\t\tCurrently On Shipment <Badge>{selectedCount}</Badge>\n\t\t\t\t\t\t\t\t</Panel.Title>\n\t\t\t\t\t\t\t</Panel.Heading>\n\t\t\t\t\t\t\t<Panel.Body>{labelsOnShipment}</Panel.Body>\n\t\t\t\t\t\t</Panel>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Wrap>\n\t\t);\n\t}\n}\n\nconst exported = withRouter(App);\n\nexport default exported;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport {Switch} from 'react-router';\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst root = document.getElementById(\"root\");\n\nconst baseUrl = root.getAttribute(\"data-baseurl\");\n\nReactDOM.render(\n\t<BrowserRouter>\n\t\t<Switch>\n\t\t<Route path=\"/\" exact\n\t\t\trender={(props) => <App {...props} baseUrl={baseUrl} />} />\n\t\t<Route path='/:operation(add|edit)/:typeOrId?'\n\t\t\trender={(props) => <App {...props} baseUrl={baseUrl} />} />\n\t\t<Route path={`${baseUrl}Shipments/addApp/:operation(add|edit)/:typeOrId?`}\n\t\t\trender={(props) => <App {...props} baseUrl={baseUrl} />} />\n\t\t</Switch>\n\t</BrowserRouter>,\n\troot\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}