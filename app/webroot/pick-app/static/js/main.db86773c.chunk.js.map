{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","state","allPicked","selectMessage","shipments","shipment","message","showAlert","selectOnChange","bind","fetchShipperPallets","handleDismiss","this","setState","id","isChecked","pickAll","postPickedEditUrl","baseUrl","labels","JSON","parse","stringify","Pallet","ids","pickedState","map","obj","idx","picked","filter","x","allArePicked","every","newState","fetch","method","headers","Accept","body","then","r","ok","json","Error","status","statusText","d","messageResult","result","setTimeout","catch","e","fetchShipperPalletsUrl","label","parseInt","target","value","openShipmentsUrl","length","console","log","pallets","palletsCount","palletsPicked","pickedClass","sort","a","b","Location","location","className","controlId","onChange","componentClass","placeholder","key","shipper","Shipment","destination","onDismiss","bsStyle","as","active","style","float","checked","togglePicked","isPicked","isPickedClass","pl_ref","item","description","Component","Boolean","window","hostname","match","root","document","getElementById","getAttribute","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.db86773c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Alert from \"react-bootstrap/lib/Alert\";\nimport ListGroup from \"react-bootstrap/lib/ListGroup\";\nimport ListGroupItem from \"react-bootstrap/lib/ListGroupItem\";\nimport FormGroup from \"react-bootstrap/lib/FormGroup\";\nimport ControlLabel from \"react-bootstrap/lib/ControlLabel\";\nimport FormControl from \"react-bootstrap/lib/FormControl\";\nimport Checkbox from 'react-bootstrap/lib/Checkbox';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tallPicked: false,\n\t\t\tselectMessage: 'Select a shipper',\n\t\t\tshipments: [], shipment: {}, message: \"\", showAlert: false };\n\t\tthis.selectOnChange = this.selectOnChange.bind(this);\n\t\tthis.fetchShipperPallets = this.fetchShipperPallets.bind(this);\n\t\tthis.handleDismiss = this.handleDismiss.bind(this);\n\t}\n\n\thandleDismiss() {\n\t\tthis.setState({ showAlert: !this.state.showAlert });\n\t}\n\n\ttogglePicked(id, isChecked, pickAll = false) {\n\t\tconst postPickedEditUrl = this.props.baseUrl + \"Labels/multiEdit/\";\n\n\t\tlet labels =  JSON.parse(JSON.stringify(this.state.shipment.Pallet));\n\t\tlet ids = [];\n\t\tlet pickedState = {};\n\n\t\tif(pickAll) {\n\t\t\tids = labels.map((obj, idx) => {\n\t\t\t\t\tlabels[idx].picked = isChecked;\n\t\t\t\t\treturn { id: obj.id, picked: isChecked };\n\t\t\t});\n\n\t\t\tpickedState = { allPicked : isChecked }\n\n\n\t\t} else {\n\n\n\t\t ids = labels.map((obj, idx) => {\n\t\t\tif (labels[idx].id === id) {\n\t\t\t\tlabels[idx].picked = isChecked;\n\t\t\t\treturn  { id: obj.id, picked: isChecked };\n\t\t\t}\n\t\t\treturn null;\n\t\t\t}).filter(x=>x);\n\n\t\t\tconst allArePicked = labels.every((obj, idx) => {\n\t\t\t\treturn obj.picked;\n\t\t\t})\n\t\t\tpickedState = { allPicked : allArePicked }\n\t\t}\n\n\t\tlet newState = {\n\t\t\t...this.state,\n\t\t\tshipment: {\n\t\t\t\t...this.state.shipment,\n\t\t\t\tPallet: [\n\t\t\t\t\t...labels\n\t\t\t\t]\n\n\t\t\t},\n\t\t\t...pickedState\n\n\t\t};\n\n\t\tthis.setState(newState);\n\n\t\tfetch(postPickedEditUrl, {\n\t\t\tmethod: \"POST\",\n\t\t\t//'redirect': 'manual',\n\t\t\theaders: {\n\t\t\t\tAccept: \"application/json\",\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\"X-Requested-With\": \"XMLHttpRequest\"\n\t\t\t},\n\t\t\tbody: JSON.stringify(ids)\n\t\t})\n\t\t\t.then(r => {\n\t\t\t\tif (r.ok) {\n\t\t\t\t\treturn r.json();\n\t\t\t\t}\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\"Failed to POST to \" +\n\t\t\t\t\t\tpostPickedEditUrl +\n\t\t\t\t\t\t\": \" +\n\t\t\t\t\t\tr.status +\n\t\t\t\t\t\t\" \" +\n\t\t\t\t\t\tr.statusText\n\t\t\t\t);\n\t\t\t})\n\t\t\t.then(d => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tmessage: d.message,\n\t\t\t\t\tmessageResult: d.result,\n\t\t\t\t\tshowAlert: true\n\t\t\t\t}, () => {\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tthis.setState({showAlert: false})\n\t\t\t\t\t}, 3000)\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(e => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tmessage: e.message || \"error updating picked status\",\n\t\t\t\t\tmessageResult: \"danger\",\n\t\t\t\t\tshowAlert: true\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tfetchShipperPallets(id) {\n\t\tconst fetchShipperPalletsUrl = this.props.baseUrl + \"Shipments/view/\";\n\t\tfetch(fetchShipperPalletsUrl + id, {\n\t\t\tmethod: \"GET\",\n\t\t\theaders: {\n\t\t\t\tAccept: \"application/json\"\n\t\t\t}\n\t\t})\n\t\t\t.then(r => {\n\t\t\t\tif (r.ok) {\n\t\t\t\t\treturn r.json();\n\t\t\t\t}\n\t\t\t\tthrow new Error(\"failed to request \" + fetchShipperPalletsUrl);\n\t\t\t})\n\t\t\t.then(d => {\n\n\n\t\t\t\tthis.setState(d);\n\t\t\t\tconst allArePicked = d.shipment.Pallet.every( (label) => { return label.picked });\n\t\t\t\tthis.setState({ allPicked: allArePicked });\n\t\t\t})\n\t\t\t.catch(e => {});\n\t}\n\n\tselectOnChange(e) {\n\t\tconst selectValue = parseInt(e.target.value);\n\t\tif (selectValue !== 0) {\n\t\t\tthis.fetchShipperPallets(e.target.value);\n\t\t} else {\n\t\t\tthis.setState({ shipment: {} });\n\t\t}\n\t}\n\tcomponentDidMount() {\n\t\tconst openShipmentsUrl = this.props.baseUrl + \"Shipments/openShipments\";\n\t\tfetch(openShipmentsUrl, {\n\t\t\tmethod: \"GET\",\n\t\t\theaders: {\n\t\t\t\tAccept: \"application/json\"\n\t\t\t}\n\t\t})\n\t\t\t.then(r => {\n\t\t\t\tif (r.ok) {\n\t\t\t\t\treturn r.json();\n\t\t\t\t}\n\t\t\t\tthrow new Error(\"failed to request \" + openShipmentsUrl + ' ' + r.status +  ' ' + r.statusText);\n\t\t\t})\n\t\t\t.then(d => {\n\t\t\t\tif ( d.shipments.length === 0 ){\n\t\t\t\t\tthis.setState({ selectMessage: 'Reload the page to check for new shippers'})\n\t\t\t\t} else {\n\t\t\t\t\tthis.setState(d);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.log(e);\n\t\t\t\tthis.setState({\n\t\t\t\t\tmessage:  e.message,\n\t\t\t\t\tmessageResult: \"danger\",\n\t\t\t\t\tshowAlert: true\n\t\t\t\t});\n\t\t\t});\n\t}\n\trender() {\n\t\tconst { shipments, shipment } = this.state;\n\t\tlet { Pallet: pallets } = shipment;\n\t\tlet palletsCount = 0;\n\t\tlet palletsPicked = 0;\n\t\tconst defaultPickedClass = 'label-warning';\n\t\tlet pickedClass = defaultPickedClass;\n\t\tlet allPicked = false;\n\n\n\t\tif (pallets) {\n\t\t\tpallets.sort(function(a, b) {\n\t\t\t\tif (a.Location.location < b.Location.location) return -1;\n\t\t\t\tif (a.Location.location > b.Location.location) return 1;\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t\tpalletsCount = pallets.length;\n\t\t\tpalletsPicked = pallets.filter((x)=> {\n\t\t\t\t//console.log(x);\n\t\t\t\treturn x.picked === true;\n\n\n\t\t\t}).length\n\n\n\t\t\tif( palletsCount === palletsPicked ) {\n\t\t\t\tallPicked = true;\n\t\t\t\tpickedClass = 'label-success';\n\t\t\t}\n\n\t\t}\n\n\n\t\treturn (\n\t\t\t<div className=\"col-lg-offset-3 col-lg-6 col-md-offset-3 col-md-6 col-sm-offset-2 col-sm-8 col-xs-12\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-lg-12 col-md-12 col-sm-12\">\n\t\t\t\t\t\t<FormGroup controlId=\"formControlsSelect\">\n\t\t\t\t\t\t\t<ControlLabel>Select a shipper</ControlLabel>\n\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\tonChange={this.selectOnChange}\n\t\t\t\t\t\t\t\tcomponentClass=\"select\"\n\t\t\t\t\t\t\t\tplaceholder=\"select\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<option key={1} value={0}>\n\t\t\t\t\t\t\t\t\t{this.state.selectMessage}\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t{shipments.map((value, idx) => {\n\t\t\t\t\t\t\t\t\tlet { Shipment: shipper } = value;\n\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<option key={shipper.id} value={shipper.id}>\n\t\t\t\t\t\t\t\t\t\t\t{shipper.shipper} {shipper.destination}\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-lg-12 col-md-12 col-sm-12\">\n\t\t\t\t\t\t{this.state.showAlert && (\n\t\t\t\t\t\t\t<Alert\n\t\t\t\t\t\t\t\tonDismiss={this.handleDismiss}\n\t\t\t\t\t\t\t\tbsStyle={this.state.messageResult}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{this.state.message}\n\t\t\t\t\t\t\t</Alert>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-lg-12 col-md-12 col-sm-12\">\n\t\t\t\t\t\t{pallets && (\n\t\t\t\t\t\t\t<ListGroup as=\"ul\">\n\t\t\t\t\t\t\t\t<ListGroupItem key={0} as=\"li\" active>\n\n\t\t\t\t\t\t\t\t\t<h3 className=\"list-group-item-heading\">\n\t\t\t\t\t\t\t\t\t\t{shipment.Shipment.shipper}\n\t\t\t\t\t\t\t\t\t\t<span style={{ float: 'right'}} className={`label ${pickedClass}`}>{palletsPicked}/{palletsCount}</span>\n\t\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t\t<p className=\"list-group-item-text\">\n\t\t\t\t\t\t\t\t\t\t{shipment.Shipment.destination}\n\t\t\t\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\tchecked={this.state.allPicked}\n\t\t\t\t\t\t\t\t\t\tonChange={(e)=> this.togglePicked(null, !this.state.allPicked, true)}>\n\t\t\t\t\t\t\t\t\t\tMark all as picked\n\t\t\t\t\t\t\t\t\t</Checkbox>\n\n\t\t\t\t\t\t\t\t</ListGroupItem>\n\n\t\t\t\t\t\t\t\t{pallets.map((value, idx) => {\n\t\t\t\t\t\t\t\t\tconst isPicked = value.picked;\n\t\t\t\t\t\t\t\t\tlet isPickedClass = \"list-group-item\";\n\n\t\t\t\t\t\t\t\t\tif (isPicked && !allPicked) {\n\t\t\t\t\t\t\t\t\t\tisPickedClass += \" list-group-item-info\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (allPicked) {\n\t\t\t\t\t\t\t\t\t\tisPickedClass += \" list-group-item-success\";\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<ListGroupItem\n\t\t\t\t\t\t\t\t\t\t\tas=\"li\"\n\t\t\t\t\t\t\t\t\t\t\tclassName={isPickedClass}\n\t\t\t\t\t\t\t\t\t\t\tkey={value.id}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<h4 className=\"list-group-item-heading\">\n\t\t\t\t\t\t\t\t\t\t\t\t{value.Location.location}\n\t\t\t\t\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"list-group-item-text\">{value.pl_ref}</p>\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"list-group-item-text\">\n\t\t\t\t\t\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t\t{value.item} {value.description}\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\t\t\tchecked={isPicked}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.togglePicked(value.id, e.target.checked);\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t>Picked</Checkbox>\n\n\t\t\t\t\t\t\t\t\t\t</ListGroupItem>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</ListGroup>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'react-app-polyfill/ie11';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst root = document.getElementById('root');\n\nconst baseUrl = root.getAttribute('data-baseurl');\n\nReactDOM.render(<App baseUrl={baseUrl} />, root );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}