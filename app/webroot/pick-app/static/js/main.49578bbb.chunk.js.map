{"version":3,"sources":["../../../../100pbc/wms/app/pick-app/src/App.js","../../../../100pbc/wms/app/pick-app/src/serviceWorker.js","../../../../100pbc/wms/app/pick-app/src/index.js"],"names":["App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","allPicked","selectMessage","shipments","shipment","message","showAlert","selectOnChange","bind","assertThisInitialized","fetchShipperPallets","handleDismiss","setState","id","isChecked","_this2","pickAll","arguments","length","undefined","postPickedEditUrl","baseUrl","labels","JSON","parse","stringify","Label","ids","pickedState","map","obj","idx","picked","filter","x","every","newState","objectSpread","toConsumableArray","fetch","method","headers","Accept","Content-Type","X-Requested-With","body","then","r","ok","json","Error","status","statusText","d","messageResult","result","setTimeout","catch","e","_this3","fetchShipperPalletsUrl","allArePicked","label","parseInt","target","value","_this4","openShipmentsUrl","console","log","_this5","_this$state","pallets","palletsCount","palletsPicked","pickedClass","sort","a","b","Location","location","react_default","createElement","className","FormGroup_default","controlId","ControlLabel_default","FormControl_default","onChange","componentClass","placeholder","key","shipper","Shipment","destination","Alert_default","onDismiss","bsStyle","ListGroup_default","as","ListGroupItem_default","active","style","float","concat","Checkbox_default","checked","togglePicked","isPicked","isPickedClass","pl_ref","item","description","Component","Boolean","window","hostname","match","root","document","getElementById","getAttribute","ReactDOM","render","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.49578bbb.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport Alert from \"react-bootstrap/lib/Alert\";\nimport ListGroup from \"react-bootstrap/lib/ListGroup\";\nimport ListGroupItem from \"react-bootstrap/lib/ListGroupItem\";\nimport FormGroup from \"react-bootstrap/lib/FormGroup\";\nimport ControlLabel from \"react-bootstrap/lib/ControlLabel\";\nimport FormControl from \"react-bootstrap/lib/FormControl\";\nimport Checkbox from 'react-bootstrap/lib/Checkbox';\n\nclass App extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tallPicked: false,\n\t\t\tselectMessage: 'Select a shipper',\n\t\t\tshipments: [], shipment: {}, message: \"\", showAlert: false };\n\t\tthis.selectOnChange = this.selectOnChange.bind(this);\n\t\tthis.fetchShipperPallets = this.fetchShipperPallets.bind(this);\n\t\tthis.handleDismiss = this.handleDismiss.bind(this);\n\t}\n\n\thandleDismiss() {\n\t\tthis.setState({ showAlert: !this.state.showAlert });\n\t}\n\n\ttogglePicked(id, isChecked, pickAll = false) {\n\t\tconst postPickedEditUrl = this.props.baseUrl + \"Labels/multiEdit/\";\n\n\t\tlet labels =  JSON.parse(JSON.stringify(this.state.shipment.Label));\n\t\tlet ids = [];\n\t\tlet pickedState = {};\n\n\t\tif(pickAll) {\n\t\t\tids = labels.map((obj, idx) => {\n\t\t\t\t\tlabels[idx].picked = isChecked;\n\t\t\t\t\treturn { id: obj.id, picked: isChecked };\n\t\t\t});\n\n\t\t\tpickedState = { allPicked : isChecked }\n\n\n\t\t} else {\n\n\n\t\t ids = labels.map((obj, idx) => {\n\t\t\tif (labels[idx].id === id) {\n\t\t\t\tlabels[idx].picked = isChecked;\n\t\t\t\treturn  { id: obj.id, picked: isChecked };\n\t\t\t}\n\t\t\treturn null;\n\t\t\t}).filter(x=>x);\n\n\t\t\tconst allArePicked = labels.every((obj, idx) => {\n\t\t\t\treturn obj.picked;\n\t\t\t})\n\t\t\tpickedState = { allPicked : allArePicked }\n\t\t}\n\n\t\tlet newState = {\n\t\t\t...this.state,\n\t\t\tshipment: {\n\t\t\t\t...this.state.shipment,\n\t\t\t\tLabel: [\n\t\t\t\t\t...labels\n\t\t\t\t]\n\n\t\t\t},\n\t\t\t...pickedState\n\n\t\t};\n\n\t\tthis.setState(newState);\n\n\t\tfetch(postPickedEditUrl, {\n\t\t\tmethod: \"POST\",\n\t\t\t//'redirect': 'manual',\n\t\t\theaders: {\n\t\t\t\tAccept: \"application/json\",\n\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\"X-Requested-With\": \"XMLHttpRequest\"\n\t\t\t},\n\t\t\tbody: JSON.stringify(ids)\n\t\t})\n\t\t\t.then(r => {\n\t\t\t\tif (r.ok) {\n\t\t\t\t\treturn r.json();\n\t\t\t\t}\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\"Failed to POST to \" +\n\t\t\t\t\t\tpostPickedEditUrl +\n\t\t\t\t\t\t\": \" +\n\t\t\t\t\t\tr.status +\n\t\t\t\t\t\t\" \" +\n\t\t\t\t\t\tr.statusText\n\t\t\t\t);\n\t\t\t})\n\t\t\t.then(d => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tmessage: d.message,\n\t\t\t\t\tmessageResult: d.result,\n\t\t\t\t\tshowAlert: true\n\t\t\t\t}, () => {\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tthis.setState({showAlert: false})\n\t\t\t\t\t}, 3000)\n\t\t\t\t});\n\t\t\t})\n\t\t\t.catch(e => {\n\t\t\t\tthis.setState({\n\t\t\t\t\tmessage: e.message || \"error updating picked status\",\n\t\t\t\t\tmessageResult: \"danger\",\n\t\t\t\t\tshowAlert: true\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tfetchShipperPallets(id) {\n\t\tconst fetchShipperPalletsUrl = this.props.baseUrl + \"Shipments/view/\";\n\t\tfetch(fetchShipperPalletsUrl + id, {\n\t\t\tmethod: \"GET\",\n\t\t\theaders: {\n\t\t\t\tAccept: \"application/json\"\n\t\t\t}\n\t\t})\n\t\t\t.then(r => {\n\t\t\t\tif (r.ok) {\n\t\t\t\t\treturn r.json();\n\t\t\t\t}\n\t\t\t\tthrow new Error(\"failed to request \" + fetchShipperPalletsUrl);\n\t\t\t})\n\t\t\t.then(d => {\n\n\n\t\t\t\tthis.setState(d);\n\t\t\t\tconst allArePicked = d.shipment.Label.every( (label) => { return label.picked });\n\t\t\t\tthis.setState({ allPicked: allArePicked });\n\t\t\t})\n\t\t\t.catch(e => {});\n\t}\n\n\tselectOnChange(e) {\n\t\tconst selectValue = parseInt(e.target.value);\n\t\tif (selectValue !== 0) {\n\t\t\tthis.fetchShipperPallets(e.target.value);\n\t\t} else {\n\t\t\tthis.setState({ shipment: {} });\n\t\t}\n\t}\n\tcomponentDidMount() {\n\t\tconst openShipmentsUrl = this.props.baseUrl + \"Shipments/openShipments\";\n\t\tfetch(openShipmentsUrl, {\n\t\t\tmethod: \"GET\",\n\t\t\theaders: {\n\t\t\t\tAccept: \"application/json\"\n\t\t\t}\n\t\t})\n\t\t\t.then(r => {\n\t\t\t\tif (r.ok) {\n\t\t\t\t\treturn r.json();\n\t\t\t\t}\n\t\t\t\tthrow new Error(\"failed to request \" + openShipmentsUrl + ' ' + r.status +  ' ' + r.statusText);\n\t\t\t})\n\t\t\t.then(d => {\n\t\t\t\tif ( d.shipments.length === 0 ){\n\t\t\t\t\tthis.setState({ selectMessage: 'Reload the page to check for new shippers'})\n\t\t\t\t} else {\n\t\t\t\t\tthis.setState(d);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tconsole.log(e);\n\t\t\t\tthis.setState({\n\t\t\t\t\tmessage:  e.message,\n\t\t\t\t\tmessageResult: \"danger\",\n\t\t\t\t\tshowAlert: true\n\t\t\t\t});\n\t\t\t});\n\t}\n\trender() {\n\t\tconst { shipments, shipment } = this.state;\n\t\tlet { Label: pallets } = shipment;\n\t\tlet palletsCount = 0;\n\t\tlet palletsPicked = 0;\n\t\tconst defaultPickedClass = 'label-warning';\n\t\tlet pickedClass = defaultPickedClass;\n\t\tlet allPicked = false;\n\n\n\t\tif (pallets) {\n\t\t\tpallets.sort(function(a, b) {\n\t\t\t\tif (a.Location.location < b.Location.location) return -1;\n\t\t\t\tif (a.Location.location > b.Location.location) return 1;\n\t\t\t\treturn 0;\n\t\t\t});\n\t\t\tpalletsCount = pallets.length;\n\t\t\tpalletsPicked = pallets.filter((x)=> {\n\t\t\t\t//console.log(x);\n\t\t\t\treturn x.picked === true;\n\n\n\t\t\t}).length\n\n\n\t\t\tif( palletsCount === palletsPicked ) {\n\t\t\t\tallPicked = true;\n\t\t\t\tpickedClass = 'label-success';\n\t\t\t}\n\n\t\t}\n\n\n\t\treturn (\n\t\t\t<div className=\"col-lg-offset-3 col-lg-6 col-md-offset-3 col-md-6 col-sm-offset-2 col-sm-8 col-xs-12\">\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-lg-12 col-md-12 col-sm-12\">\n\t\t\t\t\t\t<FormGroup controlId=\"formControlsSelect\">\n\t\t\t\t\t\t\t<ControlLabel>Select a shipper</ControlLabel>\n\t\t\t\t\t\t\t<FormControl\n\t\t\t\t\t\t\t\tonChange={this.selectOnChange}\n\t\t\t\t\t\t\t\tcomponentClass=\"select\"\n\t\t\t\t\t\t\t\tplaceholder=\"select\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<option key={1} value={0}>\n\t\t\t\t\t\t\t\t\t{this.state.selectMessage}\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t{shipments.map((value, idx) => {\n\t\t\t\t\t\t\t\t\tlet { Shipment: shipper } = value;\n\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<option key={shipper.id} value={shipper.id}>\n\t\t\t\t\t\t\t\t\t\t\t{shipper.shipper} {shipper.destination}\n\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-lg-12 col-md-12 col-sm-12\">\n\t\t\t\t\t\t{this.state.showAlert && (\n\t\t\t\t\t\t\t<Alert\n\t\t\t\t\t\t\t\tonDismiss={this.handleDismiss}\n\t\t\t\t\t\t\t\tbsStyle={this.state.messageResult}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{this.state.message}\n\t\t\t\t\t\t\t</Alert>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"row\">\n\t\t\t\t\t<div className=\"col-lg-12 col-md-12 col-sm-12\">\n\t\t\t\t\t\t{pallets && (\n\t\t\t\t\t\t\t<ListGroup as=\"ul\">\n\t\t\t\t\t\t\t\t<ListGroupItem key={0} as=\"li\" active>\n\n\t\t\t\t\t\t\t\t\t<h3 className=\"list-group-item-heading\">\n\t\t\t\t\t\t\t\t\t\t{shipment.Shipment.shipper}\n\t\t\t\t\t\t\t\t\t\t<span style={{ float: 'right'}} className={`label ${pickedClass}`}>{palletsPicked}/{palletsCount}</span>\n\t\t\t\t\t\t\t\t\t</h3>\n\t\t\t\t\t\t\t\t\t<p className=\"list-group-item-text\">\n\t\t\t\t\t\t\t\t\t\t{shipment.Shipment.destination}\n\t\t\t\t\t\t\t\t\t</p>\n\n\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\tchecked={this.state.allPicked}\n\t\t\t\t\t\t\t\t\t\tonChange={(e)=> this.togglePicked(null, !this.state.allPicked, true)}>\n\t\t\t\t\t\t\t\t\t\tMark all as picked\n\t\t\t\t\t\t\t\t\t</Checkbox>\n\n\t\t\t\t\t\t\t\t</ListGroupItem>\n\n\t\t\t\t\t\t\t\t{pallets.map((value, idx) => {\n\t\t\t\t\t\t\t\t\tconst isPicked = value.picked;\n\t\t\t\t\t\t\t\t\tlet isPickedClass = \"list-group-item\";\n\n\t\t\t\t\t\t\t\t\tif (isPicked && !allPicked) {\n\t\t\t\t\t\t\t\t\t\tisPickedClass += \" list-group-item-info\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\tif (allPicked) {\n\t\t\t\t\t\t\t\t\t\tisPickedClass += \" list-group-item-success\";\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<ListGroupItem\n\t\t\t\t\t\t\t\t\t\t\tas=\"li\"\n\t\t\t\t\t\t\t\t\t\t\tclassName={isPickedClass}\n\t\t\t\t\t\t\t\t\t\t\tkey={value.id}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<h4 className=\"list-group-item-heading\">\n\t\t\t\t\t\t\t\t\t\t\t\t{value.Location.location}\n\t\t\t\t\t\t\t\t\t\t\t</h4>\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"list-group-item-text\">{value.pl_ref}</p>\n\t\t\t\t\t\t\t\t\t\t\t<p className=\"list-group-item-text\">\n\t\t\t\t\t\t\t\t\t\t\t\t{\" \"}\n\t\t\t\t\t\t\t\t\t\t\t\t{value.item} {value.description}\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t<Checkbox\n\t\t\t\t\t\t\t\t\t\t\t\tchecked={isPicked}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\t\tthis.togglePicked(value.id, e.target.checked);\n\t\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\t\t>Picked</Checkbox>\n\n\t\t\t\t\t\t\t\t\t\t</ListGroupItem>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</ListGroup>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'react-app-polyfill/ie11';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst root = document.getElementById('root');\n\nconst baseUrl = root.getAttribute('data-baseurl');\n\nReactDOM.render(<App baseUrl={baseUrl} />, root );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}