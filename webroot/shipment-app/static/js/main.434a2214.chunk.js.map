{"version":3,"sources":["Utils/fetchFunctions.js","Components/Spinner.js","Components/Wrap.js","Components/AlertMessage.js","Components/CardOnShipment.js","Components/WrapCheckbox.js","Components/CardAvailableItems.js","Components/ButtonSubmit.js","Components/CheckboxesOnShipments.js","Utils/defaultState.js","Utils/functions.js","Components/CheckboxShipped.js","Components/FormRow.js","Components/App.js","index.js"],"names":["fetchData","operation","productTypeOrId","this","setState","defaults","loading","suffix","filter","x","url","state","baseUrl","join","fetch","headers","Accept","then","resp","json","d","allPallets","operationName","productTypeId","productType","shipment","shipmentPallets","concat","shipment_labels","labelIds","map","pallet","id","fetchProductType","loadProductsAndDescriptions","catch","e","console","log","submitData","errors","shipper","shipped","destination","postObject","product_type_id","pallets","urlArg","labels","cur","shipment_id","fetchOptions","method","mode","cache","credentials","window","csrfToken","redirect","body","JSON","stringify","response","errorObject","error","Object","keys","length","traverse","o","fn","i","apply","k","v","forEach","fieldName","productTypeName","name","getSearchTerm","query","isTypeAheadLoading","options","Spinner","props","Row","Col","lg","className","size","color","Wrap","children","AlertMessage","variant","strongText","normalText","onDismiss","CSSTransition","in","show","timeout","classNames","unmountOnExit","Alert","onClose","dismissible","CardOnShipment","selectedCount","Card","Header","as","Badge","Body","popoverText","CustomPopover","placement","Popover","Title","Content","WrapCheckbox","disabled","childKey","OverlayTrigger","trigger","rootClose","overlay","key","CardAvailableItems","labelCounts","newProducts","getLabelList","toggleIsExpanded","newIsExpanded","labelLists","addRemoveLabel","newProductDescriptions","buildLabelString","classes","cardContents","productId","idx","onClick","value","icon","formCheckClasses","slice","checked","indexOf","style","push","faBan","pointerEvents","labelText","pl_ref","Form","Check","Input","isInvalid","type","onChange","target","Label","click","Button","getLabelObject","palletObject","FormCheck","label","isExpanded","products","productDescriptions","shipmentTypeDisabled","showAlert","shipment_type","productTypes","alertTextBold","alertText","alertVariant","setShipmentDetail","pl","item_id","code_desc","updateSingleItemLabelCount","reduce","prev","curr","updateCodeDescriptions","labelId","itemId","plObj","parseInt","productArray","count","index","createCodeDescriptions","ctr","codeDesc","accum","current","labelList","currentLabelList","newLabelList","toggleAlert","txt","bold","newAlertState","setTimeout","toggleShipped","isAdd","parseRouterArgs","match","params","getValidationState","undefined","formatErrors","obj","location","item","bb_date","qty","description","Date","toLocaleDateString","shippedError","FormGroup","isValid","Control","Feedback","shipperError","destinationError","onSubmit","preventDefault","controlId","FormLabel","FormControl","placeholder","newState","required","FormText","isLoading","selected","onInputChange","onSearch","labelKey","App","defaultState","funcs","bind","async","FormRow","CheckboxShipped","ButtonSubmit","CheckboxesOnShipments","React","Component","exported","withRouter","root","document","getElementById","getAttribute","ReactDOM","render","path","exact"],"mappings":"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","file":"static/js/main.434a2214.chunk.js","sourcesContent":["var traverse = function (o, fn) {\n  for (var i in o) {\n    fn.apply(this, [i, o[i]]);\n    if (o[i] !== null && typeof o[i] == \"object\") {\n      traverse(o[i], fn);\n    }\n  }\n};\n\nexport default {\n  fetchData: function (operation, productTypeOrId) {\n    this.setState({\n      ...this.defaults,\n      loading: true,\n    });\n    const suffix = [operation, productTypeOrId].filter((x) => x);\n\n    const url = this.state.baseUrl + \"Shipments/\" + suffix.join(\"/\");\n\n    fetch(url, {\n      headers: {\n        Accept: \"application/json\",\n        \"X-Requested-With\": \"XMLHttpRequest\",\n      },\n    })\n      .then((resp) => {\n        return resp.json();\n      })\n      .then((d) => {\n        let allPallets = [];\n        let operationName = \"\";\n        let productTypeId = productTypeOrId;\n        switch (operation) {\n          case \"add-shipment\":\n            operationName = \"Add\";\n            allPallets = d[\"shipment_labels\"];\n            this.setState({\n              operationName,\n              productType: productTypeId,\n              allPallets: allPallets,\n              shipment: {\n                ...this.state.shipment,\n                operation,\n              },\n            });\n            break;\n          case \"edit-shipment\":\n            operationName = \"Edit\";\n            const shipmentPallets = d[\"shipment\"][\"pallets\"];\n            allPallets = shipmentPallets.concat(d.shipment_labels);\n            this.setState({\n              operationName,\n              allPallets: allPallets,\n            });\n            const labelIds = shipmentPallets.map((pallet) => {\n              return pallet.id;\n            });\n            productTypeId = d[\"shipment\"][\"product_type_id\"];\n            this.setState({\n              productType: productTypeId,\n              shipment: {\n                ...this.state.shipment,\n                ...d.shipment,\n                operation,\n                labelIds: labelIds,\n              },\n            });\n            break;\n          default:\n            break;\n        }\n        this.fetchProductType(productTypeId);\n        this.loadProductsAndDescriptions(allPallets);\n        /* allPallets.forEach((pl) => {\n          this.updateCodeDescriptions(pl);\n        });*/\n\n        this.setState({\n          loading: false,\n        });\n      })\n      .catch((e) => console.log(e));\n  },\n\n  submitData: function () {\n    this.setState({\n      errors: {},\n      loading: true,\n    });\n    const { baseUrl, productType } = this.state;\n\n    const {\n      operation,\n      shipper,\n      shipped,\n      id,\n      destination,\n      labelIds,\n    } = this.state.shipment;\n\n    let postObject = {\n      shipper: shipper,\n      destination: destination,\n      shipped: shipped,\n      product_type_id: productType,\n      pallets: labelIds,\n    };\n    let urlArg = \"\";\n    switch (operation) {\n      case \"add-shipment\":\n        urlArg = productType;\n        break;\n      case \"edit-shipment\":\n        urlArg = id;\n        postObject.id = id;\n        const labels = labelIds.map((cur) => {\n          return { shipment_id: id, id: cur };\n        });\n        postObject = { ...postObject, pallets: labels };\n        break;\n      default:\n        console.log(\"it broken\");\n    }\n\n    const parts = [operation, urlArg].filter((x) => x);\n\n    const url = baseUrl + \"Shipments/\" + parts.join(\"/\");\n\n    let fetchOptions = {\n      method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n      mode: \"cors\", // no-cors, cors, *same-origin\n      cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n      credentials: \"same-origin\", // include, *same-origin, omit\n      headers: {\n        \"X-CSRF-Token\": window.csrfToken,\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        \"X-Requested-With\": \"XMLHttpRequest\",\n      },\n      redirect: \"error\",\n      body: JSON.stringify(postObject),\n    };\n\n    fetch(url, fetchOptions)\n      .then((response) => response.json())\n      .then((d) => {\n        let redirect = true;\n\n        let errorObject = d.error || {};\n\n        if (Object.keys(errorObject).length > 0) {\n          // eslint-disable-next-line array-callback-return\n\n          if (errorObject.pallets) {\n            errorObject = errorObject.pallets;\n\n            traverse(errorObject, function (k, v) {\n              if (k === \"shipped\") {\n                errorObject = { [k]: v };\n              }\n            });\n          }\n          Object.keys(errorObject).forEach((fieldName) => {\n            this.setState({\n              errors: {\n                ...this.state.errors,\n                [fieldName]: errorObject[fieldName],\n              },\n            });\n          });\n\n          redirect = false;\n        }\n        this.setState({\n          loading: false,\n          redirect: redirect,\n        });\n      });\n  },\n\n  fetchProductType: function (productType) {\n    const url = this.state.baseUrl + `ProductTypes/view/${productType}`;\n\n    if (!productType) return;\n\n    fetch(url, {\n      headers: {\n        Accept: \"application/json\",\n        \"X-Requested-With\": \"XMLHttpRequest\",\n      },\n    })\n      .then((resp) => {\n        return resp.json();\n      })\n      .then((d) => {\n        console.log(\"ProductType\", d);\n        if (d.productType) {\n          this.setState({\n            productTypeName: d.productType.name,\n          });\n        }\n        console.log(\"pt\", d);\n      })\n      .catch((e) => {\n        throw e;\n      });\n  },\n\n  getSearchTerm: function (query) {\n    fetch(`${this.state.baseUrl}Shipments/destinationLookup?term=${query}`, {\n      headers: {\n        Accept: \"application/json\",\n      },\n    })\n      .then((resp) => resp.json())\n      .then((json) => {\n        console.log(json);\n        this.setState({\n          isTypeAheadLoading: false,\n          options: json,\n        });\n      });\n  },\n};\n","import React from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\n\nconst Spinner = (props) => {\n  const { loading } = props;\n  if (loading) {\n    return (\n      <Row>\n        <Col lg={12}>\n          <div className=\"text-center\">\n            <PulseLoader loading={loading} size={14} color={\"#ddd\"} />\n          </div>\n        </Col>\n      </Row>\n    );\n  }\n  return <></>;\n};\n\nexport default Spinner;\n","import React from \"react\";\n/* wrap in div if dev and nothing if production */\nconst Wrap = (props) => {\n  let renderThis = null;\n\n  if (process.env.NODE_ENV === \"development\") {\n    renderThis = <div className=\"container\">{props.children}</div>;\n  } else {\n    renderThis = <>{props.children}</>;\n  }\n  return renderThis;\n};\n\nexport default Wrap;\n","import React from \"react\";\n//import Alert from \"react-bootstrap/lib/Alert\";\nimport Alert from \"react-bootstrap/Alert\";\nimport \"./AlertMessage.css\";\nimport { CSSTransition } from \"react-transition-group\";\nconst AlertMessage = (props) => {\n  const { variant, strongText, normalText, onDismiss } = props;\n\n  return (\n    <CSSTransition\n      in={props.show}\n      timeout={300}\n      classNames=\"toggen\"\n      unmountOnExit\n    >\n      <Alert variant={variant} onClose={onDismiss} dismissible>\n        <strong>{strongText} </strong> {normalText}\n      </Alert>\n    </CSSTransition>\n  );\n};\n\nexport default AlertMessage;\n","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Badge from \"react-bootstrap/Badge\";\n\nexport default function CardOnShipment(props) {\n  const { selectedCount, children } = props;\n\n  return (\n    <Card>\n      <Card.Header as=\"h5\">\n        Currently On Shipment <Badge variant=\"primary\">{selectedCount}</Badge>\n      </Card.Header>\n      <Card.Body>{children}</Card.Body>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Popover from \"react-bootstrap/Popover\";\n\nconst popoverText = (\n  <>\n    <p>\n      This pallet doesn&apos;t have enough days product life left before it\n      expires to allow it to ship.\n    </p>\n  </>\n);\n\nconst CustomPopover = (props) => {\n  const { placement } = props;\n\n  return (\n    <Popover {...props} id={`popover-positioned-${placement}`}>\n      <Popover.Title>Low Dated Stock</Popover.Title>\n      <Popover.Content>{popoverText}</Popover.Content>\n    </Popover>\n  );\n};\nconst WrapCheckbox = (props) => {\n  const { disabled, children, childKey } = props;\n  if (disabled) {\n    return (\n      <OverlayTrigger\n        placement=\"bottom\"\n        trigger=\"click\"\n        rootClose={true}\n        overlay={CustomPopover}\n      >\n        <span key={childKey}>{children}</span>\n      </OverlayTrigger>\n    );\n  } else {\n    return children;\n  }\n};\n\nexport default WrapCheckbox;\n","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Badge from \"react-bootstrap/Badge\";\nimport Form from \"react-bootstrap/Form\";\nimport { faBan } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport WrapCheckbox from \"./WrapCheckbox\";\n\nexport default function CardAvailableItems(props) {\n  const {\n    labelCounts,\n    newProducts,\n    labelIds,\n    getLabelList,\n    toggleIsExpanded,\n    newIsExpanded,\n    labelLists,\n    addRemoveLabel,\n    newProductDescriptions,\n    buildLabelString,\n  } = props;\n\n  let classes = [\"FormCheck\", \"fixed\", \"pallet-list\"];\n  let cardContents = null;\n  if (newProducts) {\n    cardContents = newProducts.map((productId, idx) => {\n      return (\n        <div key={`wrap-${idx}`}>\n          <Card.Header\n            onClick={() => {\n              getLabelList(productId);\n              toggleIsExpanded(productId, idx);\n            }}\n            as=\"h5\"\n            className=\"toggen-header\"\n            key={`header-{idx}`}\n          >\n            {\" \"}\n            {newProductDescriptions[productId]}{\" \"}\n            {labelCounts[productId] && (\n              <Badge variant=\"primary\">{labelCounts[productId]}</Badge>\n            )}\n          </Card.Header>\n          {labelLists[productId] && newIsExpanded[productId] && (\n            <Card.Body className={newIsExpanded[productId]}>\n              {labelLists[productId].map((value, idx) => {\n                let icon = null;\n                let formCheckClasses = classes.slice();\n                const checked = labelIds.indexOf(value.id) > -1;\n                let style = {};\n                if (value.disabled) {\n                  formCheckClasses.push(\"bg-danger\");\n                  icon = (\n                    <>\n                      <FontAwesomeIcon icon={faBan} />{\" \"}\n                    </>\n                  );\n                  style = { pointerEvents: \"none\" };\n                }\n                let labelText = buildLabelString(value);\n\n                return (\n                  <WrapCheckbox\n                    key={value.pl_ref}\n                    childKey={value.pl_ref}\n                    disabled={value.disabled}\n                  >\n                    <Form.Check\n                      disabled={value.disabled}\n                      style={style}\n                      key={value.pl_ref}\n                      id={value.pl_ref}\n                    >\n                      <Form.Check.Input\n                        checked={checked}\n                        isInvalid={value.disabled}\n                        type={\"checkbox\"}\n                        onChange={(e) =>\n                          addRemoveLabel(e.target.checked, value.id)\n                        }\n                      />\n                      <Form.Check.Label>\n                        {icon} {labelText}\n                      </Form.Check.Label>\n                    </Form.Check>\n                  </WrapCheckbox>\n                );\n              })}\n            </Card.Body>\n          )}\n        </div>\n      );\n    });\n  }\n\n  return <Card key={`card-top-level`}>{cardContents}</Card>;\n}\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\n\nexport default function (props) {\n  const { click } = props;\n  return (\n    <Button\n      variant=\"primary\"\n      size=\"sm\"\n      className=\"my-btn\"\n      onClick={click}\n      type=\"submit\"\n    >\n      Submit\n    </Button>\n  );\n}\n","import React from \"react\";\nimport FormCheck from \"react-bootstrap/FormCheck\";\n\nexport default function (props) {\n  const { labelIds, getLabelObject, buildLabelString, addRemoveLabel } = props;\n  if (labelIds) {\n    return labelIds.map((id, idx) => {\n      const palletObject = getLabelObject(id);\n      return (\n        <FormCheck\n          key={palletObject.pl_ref}\n          id={`checkbox-{id}`}\n          checked\n          label={buildLabelString(palletObject)}\n          onChange={(e) => addRemoveLabel(e.target.checked, palletObject.id)}\n        />\n      );\n    });\n  }\n}\n","export default {\n  isExpanded: {},\n  newIsExpanded: {},\n  products: [],\n  productDescriptions: {},\n  shipmentTypeDisabled: false,\n  labelLists: {},\n  loading: false,\n  redirect: false,\n  labelCounts: {},\n  showAlert: false,\n  errors: {},\n  operationName: \"\",\n  shipment: {\n    operation: \"\",\n    id: \"\",\n    shipment_type: \"\",\n    shipped: false,\n    shipper: \"\",\n    destination: \"\",\n    product_type_id: \"\",\n    labelIds: [],\n  },\n  isTypeAheadLoading: false,\n  productType: 0,\n  productTypeName: \"\",\n  allPallets: [],\n  options: [],\n  productTypes: [],\n  baseUrl: \"\",\n  alertTextBold: \"Default Alert Bold\",\n  alertText: \"Default alert text\",\n  alertVariant: \"info\",\n};\n","export default {\n  setShipmentDetail: function (key, value) {\n    this.setState({\n      shipment: { ...this.state.shipment, [key]: value },\n    });\n  },\n\n  loadProductsAndDescriptions: function (pallets) {\n    let newProducts = [];\n    let newProductDescriptions = {};\n    pallets.forEach((pl) => {\n      if (newProducts.indexOf(pl.item_id) === -1) {\n        newProducts.push(pl.item_id);\n        newProductDescriptions[pl.item_id] = pl.code_desc;\n        this.updateSingleItemLabelCount(pallets, pl.item_id);\n      }\n    });\n    const newIsExpanded = newProducts.reduce((prev, curr, idx) => {\n      prev[curr] = false;\n      return prev;\n    }, {});\n\n    this.setState({\n      newProducts,\n      newProductDescriptions,\n      newIsExpanded,\n    });\n  },\n  /**\n   *\n   * @param {*} palletObject\n   */\n  updateCodeDescriptions: function (labelId) {\n    let {\n      newProducts,\n      newProductDescriptions,\n      allPallets,\n      newIsExpanded,\n    } = this.state;\n\n    const plObject = allPallets.filter((plObj) => {\n      return parseInt(plObj.id) === parseInt(labelId);\n    });\n\n    const { item_id: itemId } = plObject[0];\n\n    this.updateSingleItemLabelCount(allPallets, itemId);\n\n    if (newProducts.indexOf(itemId) === -1) {\n      this.setState({\n        newIsExpanded: {\n          ...newIsExpanded,\n          [itemId]: false,\n        },\n        newProducts: [...newProducts, itemId],\n        newProductDescriptions: {\n          ...newProductDescriptions,\n          [itemId]: \"A new description \" + itemId,\n        },\n      });\n    }\n  },\n\n  updateSingleItemLabelCount: function (productArray, itemId) {\n    const count = productArray.filter((value, index) => {\n      return value.item_id === itemId;\n    }).length;\n\n    let labelCounts = { ...this.state.labelCounts };\n\n    this.setState({\n      labelCounts: { ...labelCounts, [itemId]: count },\n    });\n  },\n\n  createCodeDescriptions: function createCodeDescriptions(productArray = []) {\n    let ctr = 0;\n    let labelCounts = {};\n\n    const codeDesc = productArray.reduce((accum, current) => {\n      const codeDesc = current.code_desc;\n      if (accum.indexOf(codeDesc) === -1) {\n        accum.push(codeDesc);\n        ctr = 1;\n      }\n\n      labelCounts[codeDesc] = ctr++;\n\n      return accum;\n    }, []);\n    this.setState({\n      labelCounts: { ...this.state.labelCounts, ...labelCounts },\n    });\n    return codeDesc;\n  },\n  getLabelList: function (productId) {\n    const allPallets = this.state.allPallets;\n\n    const labelList = allPallets.reduce((accum, current, idx) => {\n      if (current.item_id === productId) {\n        accum.push(current);\n      }\n      return accum;\n    }, []);\n\n    let currentLabelList = this.state.labelLists;\n    let newLabelList = { ...currentLabelList, [productId]: labelList };\n    this.setState({ labelLists: newLabelList });\n  },\n\n  toggleIsExpanded: function (productId, idx) {\n    let isExpanded = { ...this.state.newIsExpanded };\n\n    Object.keys(isExpanded).forEach((key) => {\n      if (parseInt(key) === parseInt(productId)) {\n        isExpanded[key] = !isExpanded[key];\n      } else {\n        isExpanded[key] = false;\n      }\n    });\n\n    this.setState({ newIsExpanded: isExpanded });\n  },\n\n  toggleAlert: function (txt, bold, variant) {\n    const newAlertState = !this.state.showAlert;\n    this.setState({\n      alertVariant: variant,\n      alertText: txt,\n      alertTextBold: bold,\n      showAlert: newAlertState,\n    });\n    if (newAlertState) {\n      setTimeout(() => {\n        this.setState({ showAlert: !newAlertState });\n      }, 4000);\n    }\n  },\n\n  toggleShipped: function () {\n    this.setState({\n      shipment: {\n        ...this.state.shipment,\n        shipped: !this.state.shipment.shipped,\n      },\n    });\n  },\n\n  addRemoveLabel: function (isAdd, labelId) {\n    let { shipment } = this.state;\n    let labelIds = [...shipment.labelIds];\n    console.log(labelId, isAdd);\n    this.updateCodeDescriptions(labelId);\n\n    if (isAdd && labelIds.indexOf(labelId) === -1) {\n      labelIds.push(labelId);\n    }\n    if (!isAdd) {\n      labelIds = labelIds.filter((value) => {\n        return value !== labelId;\n      });\n    }\n\n    this.setState({\n      shipment: { ...shipment, labelIds: labelIds },\n    });\n  },\n\n  parseRouterArgs: function () {\n    // gotta fix this it's ugggggly move it out of here\n    let { operation, productTypeOrId } = this.props.match.params;\n\n    return { operation, productTypeOrId };\n  },\n\n  getValidationState: function (fieldName) {\n    if (this.state.errors[fieldName] !== undefined) {\n      return true;\n    }\n    return false;\n  },\n\n  formatErrors: function (fieldName) {\n    let errors = [];\n    if (this.state.errors[fieldName]) {\n      let obj = this.state.errors[fieldName];\n\n      errors = Object.keys(obj).map((key) => {\n        return obj[key];\n      });\n    }\n\n    return errors.join(\", \");\n  },\n\n  getLabelObject: function (id) {\n    const { allPallets } = this.state;\n\n    const ret = allPallets.filter((current, idx) => {\n      return current.id === id;\n    });\n    return ret[0];\n  },\n  buildLabelString: function (palletObject) {\n    const { location, item, bb_date, pl_ref, qty, description } = palletObject;\n\n    const locationName = location.location;\n\n    const d = new Date(bb_date);\n\n    const stringValues = [\n      locationName,\n      item,\n      d.toLocaleDateString(),\n      pl_ref,\n      qty,\n      description,\n    ];\n    return stringValues.join(\", \");\n  },\n};\n","import React from \"react\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\nimport Form from \"react-bootstrap/Form\";\n\nexport default function (props) {\n  const { shipped, toggleShipped, getValidationState, shippedError } = props;\n  return (\n    <FormGroup>\n      <Form.Check id=\"shipped\">\n        <Form.Check.Input\n          type=\"checkbox\"\n          checked={shipped}\n          onChange={toggleShipped}\n          isValid={getValidationState(\"shipped\")}\n        />\n        <Form.Check.Label>Shipped</Form.Check.Label>\n        <Form.Control.Feedback>{shippedError}</Form.Control.Feedback>\n      </Form.Check>\n    </FormGroup>\n  );\n}\n","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\nimport FormLabel from \"react-bootstrap/FormLabel\";\nimport FormText from \"react-bootstrap/FormText\";\nimport { AsyncTypeahead } from \"react-bootstrap-typeahead\"; // ES2015\nimport Col from \"react-bootstrap/Col\";\n\nexport default function (props) {\n  const {\n    shipperError,\n    shipper,\n    getValidationState,\n    setShipmentDetail,\n    destinationError,\n    isTypeAheadLoading,\n    getSearchTerm,\n    errors,\n    shipment,\n    setState,\n    options,\n  } = props;\n  const { destination } = shipment;\n\n  return (\n    <Form.Row onSubmit={(e) => e.preventDefault()}>\n      <Col lg={3}>\n        <FormGroup controlId=\"shipper\">\n          <FormLabel>Shipment</FormLabel>{\" \"}\n          <FormControl\n            type=\"text\"\n            value={shipper}\n            isValid={getValidationState(\"shipper\")}\n            placeholder=\"Shipment\"\n            onChange={(e) => {\n              const { shipper, ...newState } = errors;\n              setState({\n                errors: {\n                  ...newState,\n                },\n              });\n\n              setShipmentDetail(e.target.id, e.target.value);\n            }}\n            required=\"required\"\n          />\n          <FormControl.Feedback />\n          <FormText>{shipperError}</FormText>\n        </FormGroup>\n      </Col>\n      <Col lg={3} key=\"row-col-2\">\n        <FormGroup controlId=\"destination\">\n          <FormLabel>Destination</FormLabel>\n          <AsyncTypeahead\n            placeholder=\"Destination\"\n            isLoading={isTypeAheadLoading}\n            id=\"destination\"\n            name=\"destination\"\n            isValid={getValidationState(\"destination\")}\n            selected={[destination]}\n            onChange={(selected) => {\n              if (selected.length > 0) {\n                let destination = selected[0].value;\n                setShipmentDetail(\"destination\", destination);\n              }\n            }}\n            onInputChange={(destination) => {\n              setShipmentDetail(\"destination\", destination);\n            }}\n            onSearch={(query) => {\n              setState({ isTypeAheadLoading: true });\n              getSearchTerm(query);\n            }}\n            labelKey=\"value\"\n            options={options}\n          />\n          <FormText>{destinationError}</FormText>\n        </FormGroup>\n      </Col>\n    </Form.Row>\n  );\n}\n","import React from \"react\";\n\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport async from \"../Utils/fetchFunctions\";\nimport Spinner from \"./Spinner\";\n\nimport { withRouter } from \"react-router\";\n\nimport Wrap from \"./Wrap\";\n\nimport AlertMessage from \"./AlertMessage\";\n\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\nimport \"./ShipApp.css\";\nimport CardOnShipment from \"./CardOnShipment\";\nimport CardAvailableItems from \"./CardAvailableItems\";\nimport ButtonSubmit from \"./ButtonSubmit\";\nimport CheckboxesOnShipments from \"./CheckboxesOnShipments\";\nimport defaultState from \"../Utils/defaultState\";\nimport funcs from \"../Utils/functions\";\nimport CheckboxShipped from \"./CheckboxShipped\";\nimport FormRow from \"./FormRow\";\n// import queryString from \"query-string\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      ...defaultState,\n      baseUrl: this.props.baseUrl,\n    };\n\n    // bind all function to \"this\"\n    Object.keys(funcs).forEach((value) => {\n      this[value] = funcs[value].bind(this);\n    });\n\n    Object.keys(async).forEach((value) => {\n      this[value] = async[value].bind(this);\n    });\n  }\n\n  componentDidMount() {\n    const { operation, productTypeOrId } = this.parseRouterArgs();\n    this.setState({\n      baseUrl: this.props.baseUrl,\n    });\n    this.fetchData(operation, productTypeOrId);\n  }\n\n  render() {\n    const {\n      newProducts,\n      newProductDescriptions,\n      labelLists,\n      showAlert,\n      labelCounts,\n      newIsExpanded,\n      shipment,\n      productTypeName,\n      loading,\n      baseUrl,\n      redirect,\n      operationName,\n      options,\n      alertText,\n      errors,\n      isTypeAheadLoading,\n      alertTextBold,\n      alertVariant,\n    } = this.state;\n\n    const shipperError = this.formatErrors(\"shipper\");\n    const shippedError = this.formatErrors(\"shipped\");\n    const destinationError = this.formatErrors(\"destination\");\n    const { labelIds, shipper, shipped } = shipment;\n    const selectedCount = labelIds.length;\n\n    if (redirect && process.env.NODE_ENV === \"production\") {\n      window.location = baseUrl + \"Shipments/\";\n    }\n\n    return (\n      <Wrap>\n        <Row key=\"row-1\">\n          <Col lg={12}>\n            <AlertMessage\n              strongText={alertTextBold}\n              normalText={alertText}\n              variant={alertVariant}\n              show={showAlert}\n              onDismiss={this.toggleAlert}\n            />\n            <h3>\n              {operationName} {productTypeName} Shipment\n            </h3>\n          </Col>\n        </Row>\n        <Row key=\"row-2\">\n          <Col lg={12} key=\"row-col-1\">\n            <FormRow\n              shipperError={shipperError}\n              shipper={shipper}\n              setState={(o) => this.setState(o)}\n              getSearchTerm={this.getSearchTerm}\n              getValidationState={this.getValidationState}\n              setShipmentDetail={this.setShipmentDetail}\n              destinationError={destinationError}\n              isTypeAheadLoading={isTypeAheadLoading}\n              shipment={shipment}\n              options={options}\n              errors={errors}\n            ></FormRow>\n          </Col>\n        </Row>\n        <Row key=\"row-3\">\n          <Col lg={6}>\n            <CheckboxShipped\n              shipped={shipped}\n              toggleShipped={this.toggleShipped}\n              getValidationState={this.getValidationState}\n              shippedError={shippedError}\n            />\n          </Col>\n          <Col lg={1} className=\"mb-3\">\n            <ButtonSubmit click={this.submitData} />\n          </Col>\n          <Col lg={5}>\n            <Spinner loading={loading} />\n          </Col>\n        </Row>\n        <Row key=\"row-4\">\n          <Col>\n            <div className=\"pre-scrollable\">\n              <div className=\"card-container\">\n                <CardAvailableItems\n                  labelLists={labelLists}\n                  newIsExpanded={newIsExpanded}\n                  labelCounts={labelCounts}\n                  newProducts={newProducts}\n                  labelIds={labelIds}\n                  getLabelList={this.getLabelList}\n                  toggleIsExpanded={this.toggleIsExpanded}\n                  addRemoveLabel={this.addRemoveLabel}\n                  newProductDescriptions={newProductDescriptions}\n                  buildLabelString={this.buildLabelString}\n                />\n              </div>\n            </div>\n          </Col>\n          <Col>\n            <CardOnShipment selectedCount={selectedCount}>\n              <CheckboxesOnShipments\n                getLabelObject={this.getLabelObject}\n                buildLabelString={this.buildLabelString}\n                addRemoveLabel={this.addRemoveLabel}\n                labelIds={labelIds}\n              />\n            </CardOnShipment>\n          </Col>\n        </Row>\n      </Wrap>\n    );\n  }\n}\n\nconst exported = withRouter(App);\n\nexport default exported;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App\";\nimport { Switch } from \"react-router\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nconst root = document.getElementById(\"root\");\n\nconst baseUrl = root.getAttribute(\"data-baseurl\");\n\nReactDOM.render(\n  <BrowserRouter>\n    <Switch>\n      <Route\n        path=\"/\"\n        exact\n        render={(props) => <App {...props} baseUrl={baseUrl} />}\n      />\n      <Route\n        path=\"/:operation(edit-shipment|add-shipment)/:productTypeOrId?\"\n        render={(props) => <App {...props} baseUrl={baseUrl} />}\n      />\n      <Route\n        path={`${baseUrl}shipments/process/:operation(edit-shipment|add-shipment)/:productTypeOrId?`}\n        render={(props) => <App {...props} baseUrl={baseUrl} />}\n      />\n    </Switch>\n  </BrowserRouter>,\n  root\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}