{"version":3,"sources":["Components/Spinner.js","Components/Wrap.js","Components/AlertMessage.js","Components/CardOnShipment.js","Components/WrapCheckbox.js","Redux/actions.js","Redux/creators.js","Utils/functions.js","Components/CheckboxesAvailable.js","Components/CardAvailableItems.js","Components/ButtonSubmit.js","Components/CheckboxesOnShipments.js","Utils/fetchFunctions.js","Components/CheckboxShipped.js","Components/FormRow.js","Components/App.js","Redux/reducers/shipment.js","Redux/reducers/alert.js","Redux/reducers/products.js","Redux/reducers/ui.js","Redux/reducers/rootReducer.js","Redux/store.js","Components/Root.js","index.js"],"names":["Spinner","props","loading","Row","Col","lg","className","size","color","Wrap","children","AlertMessage","onDismiss","content","alertVariant","alertTextBold","alertText","showAlert","CSSTransition","in","timeout","classNames","unmountOnExit","Alert","variant","onClose","dismissible","CardOnShipment","selectedCount","Card","Header","as","Badge","Body","popoverText","CustomPopover","placement","Popover","id","Title","Content","WrapCheckbox","disabled","childKey","OverlayTrigger","trigger","rootClose","overlay","key","setTypeAheadLoading","b","type","actions","data","setShipmentDetail","fieldName","fieldValue","setLabelIds","labelIds","addRemoveLabel","isAdd","labelId","dispatch","getState","shipment","funcs","updateCodeDescriptions","updateItemCounts","itemCount","toggleIsExpanded","productId","isExpanded","ui","newExpanded","getLabelList","allPallets","products","loadProductsAndDescriptions","pallets","productDescriptions","itemCounts","forEach","pl","indexOf","item_id","push","code_desc","updateSingleItemLabelCount","reduce","prev","curr","idx","itemCodeDesc","p","filter","plObj","parseInt","itemId","actionCreators","productArray","count","value","index","length","labelList","accum","current","Object","keys","concat","parseRouterArgs","operation","productTypeOrId","getValidationState","errors","undefined","formatErrors","fieldErrors","obj","map","join","getLabelObject","buildLabelString","palletObject","location","item","bb_date","pl_ref","qty","description","Date","toLocaleDateString","connect","labelLists","icon","checked","style","faBan","pointerEvents","labelText","Form","Check","Input","isInvalid","onChange","e","target","Label","state","labelCounts","bindActionCreators","cardContents","cardBody","onClick","submit","click","Button","s","FormCheck","label","fetchApi","fetchData","baseUrl","suffix","x","url","fetch","headers","Accept","then","resp","json","d","operationName","productTypeId","shipmentPallets","shipment_labels","pallet","fetchProductType","catch","console","log","submitData","shipper","shipped","destination","productType","postObject","product_type_id","urlArg","labels","cur","shipment_id","fetchOptions","method","mode","cache","credentials","window","csrfToken","redirect","body","JSON","stringify","response","errorObject","error","traverse","o","fn","i","apply","this","k","v","productTypeName","name","getSearchTerm","query","toggleShipped","shippedError","FormGroup","isValid","Control","Feedback","isTypeAheadLoading","options","setTypeaheadLoadingState","fetchAPI","submitOnEnter","onSubmit","preventDefault","controlId","FormLabel","FormControl","onKeyDown","event","placeholder","required","FormText","minLength","isLoading","selected","onInputChange","onSearch","labelKey","App","match","params","updateBaseUrl","toggleAlert","alert","ButtonSubmit","React","Component","wrapWithDispatch","withRouter","initialState","shipment_type","productTypes","shipmentApp","combineReducers","action","assign","composeEnhancers","createLogger","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleWare","thunkMiddleware","store","createStore","applyMiddleware","Root","path","exact","render","root","document","getElementById","getAttribute","ReactDOM"],"mappings":"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","file":"static/js/main.9eca8b2f.chunk.js","sourcesContent":["import React from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\n\nconst Spinner = (props) => {\n  const { loading } = props;\n  if (loading) {\n    return (\n      <Row>\n        <Col lg={12}>\n          <div className=\"text-center\">\n            <PulseLoader loading={loading} size={14} color={\"#ddd\"} />\n          </div>\n        </Col>\n      </Row>\n    );\n  }\n  return <></>;\n};\n\nexport default Spinner;\n","import React from \"react\";\n/* wrap in div if dev and nothing if production */\nconst Wrap = (props) => {\n  let renderThis = null;\n\n  if (process.env.NODE_ENV === \"development\") {\n    renderThis = <div className=\"container\">{props.children}</div>;\n  } else {\n    renderThis = <>{props.children}</>;\n  }\n  return renderThis;\n};\n\nexport default Wrap;\n","import React from \"react\";\n//import Alert from \"react-bootstrap/lib/Alert\";\nimport Alert from \"react-bootstrap/Alert\";\nimport \"./AlertMessage.css\";\nimport { CSSTransition } from \"react-transition-group\";\nconst AlertMessage = (props) => {\n  const { onDismiss, content } = props;\n  const { alertVariant, alertTextBold, alertText, showAlert } = content;\n\n  return (\n    <CSSTransition\n      in={showAlert}\n      timeout={300}\n      classNames=\"toggen\"\n      unmountOnExit\n    >\n      <Alert variant={alertVariant} onClose={onDismiss} dismissible>\n        <strong>{alertTextBold} </strong> {alertText}\n      </Alert>\n    </CSSTransition>\n  );\n};\n\nexport default AlertMessage;\n","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Badge from \"react-bootstrap/Badge\";\n\nexport default function CardOnShipment(props) {\n  const { selectedCount, children } = props;\n\n  return (\n    <Card>\n      <Card.Header as=\"h5\">\n        Currently On Shipment <Badge variant=\"primary\">{selectedCount}</Badge>\n      </Card.Header>\n      <Card.Body>{children}</Card.Body>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Popover from \"react-bootstrap/Popover\";\n\nconst popoverText = (\n  <>\n    <p>\n      This pallet doesn&apos;t have enough days product life left before it\n      expires to allow it to ship.\n    </p>\n  </>\n);\n\nconst CustomPopover = (props) => {\n  const { placement } = props;\n\n  return (\n    <Popover {...props} id={`popover-positioned-${placement}`}>\n      <Popover.Title>Low Dated Stock</Popover.Title>\n      <Popover.Content>{popoverText}</Popover.Content>\n    </Popover>\n  );\n};\nconst WrapCheckbox = (props) => {\n  const { disabled, children, childKey } = props;\n  if (disabled) {\n    return (\n      <OverlayTrigger\n        placement=\"bottom\"\n        trigger=\"click\"\n        rootClose={true}\n        overlay={CustomPopover}\n      >\n        <span key={childKey}>{children}</span>\n      </OverlayTrigger>\n    );\n  } else {\n    return children;\n  }\n};\n\nexport default WrapCheckbox;\n","export default {\n  ADD_ALL_PALLETS: \"ADD_ALL_PALLETS\",\n  ADD_OPERATION_NAME: \"ADD_OPERATION_NAME\",\n  ADD_OPERATION: \"ADD_OPERATION\",\n  ADD_PRODUCT_DESCRIPTIONS: \"ADD_PRODUCT_DESCRIPTIONS\",\n  ADD_PRODUCT_TYPE_ID: \"ADD_PRODUCT_TYPE_ID\",\n  ADD_PRODUCTS: \"ADD_PRODUCTS\",\n  HIDE_ALERT: \"HIDE_ALERT\",\n  LOAD_OPTIONS: \"LOAD_OPTIONS\",\n  SET_IS_EXPANDED: \"SET_IS_EXPANDED\",\n  SET_LABEL_IDS: \"SET_LABEL_IDS\",\n  SET_LABEL_LIST: \"SET_LABEL_LIST\",\n  SET_LOADING: \"SET_LOADING\",\n  SET_PRODUCT_DESCRIPTIONS: \"SET_PRODUCT_DESCRIPTIONS\",\n  SET_PRODUCT_TYPE_NAME: \"SET_PRODUCT_TYPE_NAME\",\n  SET_PRODUCTS: \"SET_PRODUCTS\",\n  SET_TYPEAHEAD_LOADING: \"SET_TYPEAHEAD_LOADING\",\n  SHOW_ALERT: \"SHOW_ALERT\",\n  TOGGLE_ALERT: \"TOGGLE_ALERT\",\n  UNSET_LOADING: \"UNSET_LOADING\",\n  UPDATE_BASE_URL: \"UPDATE_BASE_URL\",\n  SET_SHIPMENT_DETAIL: \"SET_SHIPMENT_DETAIL\",\n  TOGGLE_SHIPPED: \"TOGGLE_SHIPPED\",\n  UPDATE_IS_EXPANDED: \"UPDATE_IS_EXPANDED\",\n  UPDATE_ITEM_COUNTS: \"UPDATE_ITEM_COUNTS\",\n  UPDATE_PRODUCTS: \"UPDATE_PRODUCTS\",\n  UPDATE_PRODUCT_DESCRIPTIONS: \"UPDATE_PRODUCT_DESCRIPTIONS\",\n  UPDATE_CODE_DESCRIPTIONS: \"UPDATE_CODE_DESCRIPTIONS\",\n  UPDATE_UI: \"UPDATE_UI\",\n  SUBMIT_START: \"SUBMIT_START\",\n  UPDATE_ERRORS: \"UPDATE_ERRORS\",\n  ADD_SHIPMENT_FROM_FETCH: \"ADD_SHIPMENT_FROM_FETCH\",\n  FETCH_PRODUCT_TYPE_START: \"FETCH_PRODUCT_TYPE_START\",\n};\n","/* showAlert: false,\n alertTextBold: \"Default Alert Bold\",\n alertText: \"Default alert text\",\n alertVariant: \"info\", */\n\nimport actions from \"./actions\";\nimport funcs from \"../Utils/functions\";\n\nexport const showAlert = (alertTextBold, alertText, alertVariant) => {\n  return {\n    type: actions.SHOW_ALERT,\n    data: {\n      alertTextBold,\n      alertText,\n      alertVariant,\n    },\n  };\n};\n\nexport const toggleAlert = () => {\n  return {\n    type: actions.TOGGLE_ALERT,\n  };\n};\n\nexport const updateBaseUrl = (baseUrl) => {\n  return { type: actions.UPDATE_BASE_URL, data: baseUrl };\n};\n\nexport const setTypeAheadLoading = (b) => ({\n  type: actions.SET_TYPEAHEAD_LOADING,\n  data: b,\n});\n\nexport const setShipmentDetail = (fieldName, fieldValue) => ({\n  type: actions.SET_SHIPMENT_DETAIL,\n  data: {\n    fieldName: fieldName,\n    fieldValue: fieldValue,\n  },\n});\n\nexport const addOperationName = (operationName) => ({\n  type: actions.ADD_OPERATION_NAME,\n  data: operationName,\n});\n\nexport const addAllPallets = (allPallets) => ({\n  type: actions.ADD_ALL_PALLETS,\n  data: allPallets,\n});\n\nexport const addShipmentFromFetch = (shipment) => ({\n  type: actions.ADD_SHIPMENT_FROM_FETCH,\n  data: shipment,\n});\n\nexport const addProductTypeId = (productTypeId) => ({\n  type: actions.ADD_PRODUCT_TYPE_ID,\n  data: productTypeId,\n});\n\nexport const setLabelIds = (labelIds) => ({\n  type: actions.SET_LABEL_IDS,\n  data: labelIds,\n});\n\nexport const addRemoveLabel = (isAdd, labelId) => {\n  return function (dispatch, getState) {\n    let labelIds = getState().shipment.labelIds;\n\n    labelIds = funcs.addRemoveLabel(isAdd, labelId, labelIds);\n\n    dispatch(setLabelIds(labelIds));\n\n    dispatch(funcs.updateCodeDescriptions(labelId));\n  };\n};\n\nexport const updateCodeDescriptions = () => ({\n  type: actions.UPDATE_CODE_DESCRIPTIONS,\n});\nexport const updateItemCounts = (itemCount) => ({\n  type: actions.UPDATE_ITEM_COUNTS,\n  data: itemCount,\n});\n\nexport const setProducts = (products) => ({\n  type: actions.SET_PRODUCTS,\n  data: products,\n});\n\nexport const setProductTypeName = (productTypeName) => ({\n  type: actions.SET_PRODUCT_TYPE_NAME,\n  data: productTypeName,\n});\n\nexport const setProductDescriptions = (productDescriptions) => ({\n  type: actions.SET_PRODUCT_DESCRIPTIONS,\n  data: productDescriptions,\n});\n\nexport const setIsExpanded = (isExpanded) => ({\n  type: actions.SET_IS_EXPANDED,\n  data: isExpanded,\n});\n\nexport const toggleIsExpanded = (productId) => {\n  return function (dispatch, getState) {\n    const isExpanded = getState().ui.isExpanded;\n    const newExpanded = funcs.toggleIsExpanded(productId, isExpanded);\n    dispatch({\n      type: actions.SET_IS_EXPANDED,\n      data: newExpanded,\n    });\n  };\n};\n\nexport const updateIsExpanded = (isExpanded) => ({\n  type: actions.UPDATE_IS_EXPANDED,\n  data: isExpanded,\n});\n\nexport const setLoading = (b) => ({\n  type: actions.SET_LOADING,\n  data: b,\n});\n\nexport const submitStart = () => ({\n  type: actions.SUBMIT_START,\n});\n\nexport const updateErrors = (obj) => ({\n  type: actions.UPDATE_ERRORS,\n  data: obj,\n});\nexport const updateUI = (obj) => ({\n  type: actions.UPDATE_UI,\n  data: obj,\n});\n\nexport const loadOptions = (options) => ({\n  type: actions.LOAD_OPTIONS,\n  data: options,\n});\n\nexport const startFetchTypeAhead = () => ({ type: \"START_FETCH_TYPEAHEAD\" });\n\nexport const fetchProductTypeStart = () => ({\n  type: actions.FETCH_PRODUCT_TYPE_START,\n});\n\nexport const updateProducts = (itemId) => ({\n  type: actions.UPDATE_PRODUCTS,\n  data: itemId,\n});\n\nexport const updateProductDescriptions = (itemCodeDesc) => ({\n  type: actions.UPDATE_PRODUCT_DESCRIPTIONS,\n  data: itemCodeDesc,\n});\n\nexport const getLabelList = (productId) => {\n  return function (dispatch, getState) {\n    const allPallets = getState().products.allPallets;\n    dispatch({\n      type: actions.SET_LABEL_LIST,\n      data: funcs.getLabelList(productId, allPallets),\n    });\n  };\n};\n","import * as actionCreators from \"../Redux/creators\";\n\nexport const funcs = {\n  loadProductsAndDescriptions: function (pallets) {\n    let products = [];\n    let productDescriptions = {};\n    let itemCounts = {};\n    pallets.forEach((pl) => {\n      if (products.indexOf(pl.item_id) === -1) {\n        products.push(pl.item_id);\n        productDescriptions[pl.item_id] = pl.code_desc;\n        itemCounts = {\n          ...itemCounts,\n          ...funcs.updateSingleItemLabelCount(pallets, pl.item_id),\n        };\n      }\n    });\n    const isExpanded = products.reduce((prev, curr, idx) => {\n      prev[curr] = false;\n      return prev;\n    }, {});\n\n    return { products, productDescriptions, isExpanded, itemCounts };\n  },\n  /**\n   *\n   * @param {*} palletObject\n   */\n  updateCodeDescriptions: function (labelId) {\n    return function (dispatch, getState) {\n      dispatch(actionCreators.updateCodeDescriptions());\n      let { products: p } = getState();\n\n      const { products, allPallets } = p;\n\n      const plObject = allPallets.filter((plObj) => {\n        return parseInt(plObj.id) === parseInt(labelId);\n      });\n\n      const { item_id: itemId, code_desc } = plObject[0];\n\n      dispatch(\n        actionCreators.updateItemCounts(\n          funcs.updateSingleItemLabelCount(allPallets, itemId)\n        )\n      );\n\n      if (products.indexOf(itemId) === -1) {\n        dispatch(actionCreators.updateIsExpanded({ [itemId]: false }));\n        dispatch(actionCreators.updateProducts(itemId));\n        dispatch(\n          actionCreators.updateProductDescriptions({ [itemId]: code_desc })\n        );\n      }\n    };\n  },\n\n  updateSingleItemLabelCount: function (productArray, itemId) {\n    const count = productArray.filter((value, index) => {\n      return value.item_id === itemId;\n    }).length;\n\n    return { [itemId]: count };\n  },\n  getLabelList: function (productId, allPallets) {\n    const labelList = allPallets.reduce((accum, current, idx) => {\n      if (current.item_id === productId) {\n        accum.push(current);\n      }\n      return accum;\n    }, []);\n\n    return { [productId]: labelList };\n  },\n\n  toggleIsExpanded: function (productId, isExpanded) {\n    Object.keys(isExpanded).forEach((key) => {\n      if (parseInt(key) === parseInt(productId)) {\n        isExpanded[key] = !isExpanded[key];\n      } else {\n        isExpanded[key] = false;\n      }\n    });\n\n    return isExpanded;\n  },\n\n  /* toggleAlert: function (txt, bold, variant) {\n    const newAlertState = !this.state.showAlert;\n    this.setState({\n      alertVariant: variant,\n      alertText: txt,\n      alertTextBold: bold,\n      showAlert: newAlertState,\n    });\n    if (newAlertState) {\n      setTimeout(() => {\n        this.setState({ showAlert: !newAlertState });\n      }, 4000);\n    }\n  }, */\n  addRemoveLabel: function (isAdd, labelId, labelIds) {\n    if (isAdd && labelIds.indexOf(labelId) === -1) {\n      labelIds = labelIds.concat(labelId);\n    }\n    if (!isAdd) {\n      labelIds = labelIds.filter((value) => {\n        return value !== labelId;\n      });\n    }\n\n    return labelIds;\n  },\n\n  parseRouterArgs: function (props) {\n    // gotta fix this it's ugggggly move it out of here\n    let { operation, productTypeOrId } = props;\n\n    return { operation, productTypeOrId };\n  },\n\n  getValidationState: function (fieldName, errors) {\n    if (errors[fieldName] !== undefined) {\n      return true;\n    }\n    return false;\n  },\n\n  formatErrors: function (fieldName, fieldErrors) {\n    let errors = [];\n    if (fieldErrors[fieldName]) {\n      let obj = fieldErrors[fieldName];\n\n      errors = Object.keys(obj).map((key) => {\n        return obj[key];\n      });\n    }\n\n    return errors.join(\", \");\n  },\n\n  getLabelObject: function (id, allPallets) {\n    const ret = allPallets.filter((current, idx) => {\n      return current.id === id;\n    });\n    return ret[0];\n  },\n  buildLabelString: function (palletObject) {\n    const { location, item, bb_date, pl_ref, qty, description } = palletObject;\n\n    const locationName = location.location;\n\n    const d = new Date(bb_date);\n\n    const stringValues = [\n      locationName,\n      item,\n      d.toLocaleDateString(),\n      pl_ref,\n      qty,\n      description,\n    ];\n    return stringValues.join(\", \");\n  },\n};\n\nexport default funcs;\n","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport { faBan } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport WrapCheckbox from \"./WrapCheckbox\";\nimport { connect } from \"react-redux\";\nimport funcs from \"../Utils/functions\";\nimport * as actionCreators from \"../Redux/creators\";\n\nconst CheckboxesAvailable = function (props) {\n  const { labelLists, productId, labelIds, addRemoveLabel } = props;\n\n  return labelLists[productId].map((value, idx) => {\n    let icon = null;\n\n    const checked = labelIds.indexOf(value.id) > -1;\n    let style = {};\n    if (value.disabled) {\n      icon = <FontAwesomeIcon icon={faBan} />;\n      style = { pointerEvents: \"none\" };\n    }\n    let labelText = funcs.buildLabelString(value);\n\n    return (\n      <WrapCheckbox\n        key={value.pl_ref}\n        childKey={value.pl_ref}\n        disabled={value.disabled}\n      >\n        <Form.Check\n          disabled={value.disabled}\n          style={style}\n          key={value.pl_ref}\n          id={value.pl_ref}\n        >\n          <Form.Check.Input\n            checked={checked}\n            isInvalid={value.disabled}\n            type={\"checkbox\"}\n            onChange={(e) => addRemoveLabel(e.target.checked, value.id)}\n          />\n          <Form.Check.Label>\n            {icon} {labelText}\n          </Form.Check.Label>\n        </Form.Check>\n      </WrapCheckbox>\n    );\n  });\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addRemoveLabel: (isAdd, labelId) => {\n      dispatch(actionCreators.addRemoveLabel(isAdd, labelId));\n    },\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(CheckboxesAvailable);\n","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Badge from \"react-bootstrap/Badge\";\nimport CheckboxesAvailable from \"./CheckboxesAvailable\";\nimport { connect } from \"react-redux\";\nimport * as actionCreators from \"../Redux/creators\";\nimport { bindActionCreators } from \"redux\";\n\nconst CardAvailableItems = function (props) {\n  const {\n    labelCounts,\n    products,\n    labelIds,\n    getLabelList,\n    toggleIsExpanded,\n    isExpanded,\n    labelLists,\n    productDescriptions,\n  } = props;\n\n  let cardContents = null;\n\n  if (products) {\n    cardContents = products.map((productId, idx) => {\n      let cardBody = null;\n      if (labelLists[productId] && isExpanded[productId]) {\n        cardBody = (\n          <Card.Body className={isExpanded[productId]}>\n            <CheckboxesAvailable\n              labelLists={labelLists}\n              labelIds={labelIds}\n              productId={productId}\n            />\n          </Card.Body>\n        );\n      }\n\n      return (\n        <div key={`wrap-${idx}`}>\n          <Card.Header\n            onClick={() => {\n              getLabelList(productId);\n              toggleIsExpanded(productId);\n            }}\n            as=\"h5\"\n            className=\"toggen-header\"\n            key={`header-{idx}`}\n          >\n            {\" \"}\n            {productDescriptions[productId]}{\" \"}\n            {labelCounts[productId] && (\n              <Badge variant=\"primary\">{labelCounts[productId]}</Badge>\n            )}\n          </Card.Header>\n          {cardBody}\n        </div>\n      );\n    });\n  }\n\n  return <Card key={`card-top-level`}>{cardContents}</Card>;\n};\n\nconst mapStateToProps = (state) => {\n  const { products: p, ui } = state;\n  return {\n    isExpanded: ui.isExpanded,\n    products: p.products,\n    allPallets: p.allPallets,\n    labelLists: p.labelLists,\n    labelCounts: p.labelCounts,\n    productDescriptions: p.productDescriptions,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      getLabelList: actionCreators.getLabelList,\n      toggleIsExpanded: actionCreators.toggleIsExpanded,\n    },\n    dispatch\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CardAvailableItems);\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\n\nexport default function (props) {\n  const { click: submit } = props;\n  return (\n    <Button\n      variant=\"primary\"\n      size=\"sm\"\n      className=\"my-btn\"\n      onClick={() => {\n        submit();\n      }}\n      type=\"submit\"\n    >\n      Submit\n    </Button>\n  );\n}\n","import React from \"react\";\nimport FormCheck from \"react-bootstrap/FormCheck\";\nimport { connect } from \"react-redux\";\nimport funcs from \"../Utils/functions\";\nimport * as actionCreators from \"../Redux/creators\";\n\nconst CheckboxesOnShipments = function (props) {\n  const { labelIds, allPallets, addRemoveLabel } = props;\n\n  if (labelIds) {\n    return labelIds.map((id) => {\n      const palletObject = funcs.getLabelObject(id, allPallets);\n      return (\n        <FormCheck\n          key={palletObject.pl_ref}\n          id={`checkbox-{id}`}\n          checked\n          label={funcs.buildLabelString(palletObject)}\n          onChange={(e) => addRemoveLabel(e.target.checked, palletObject.id)}\n        />\n      );\n    });\n  }\n  return null;\n};\n\nconst mapStateToProps = (state) => {\n  const { shipment: s, products: p } = state;\n  return {\n    labelIds: s.labelIds,\n    allPallets: p.allPallets,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addRemoveLabel: (isAdd, labelId, labelIds) => {\n      dispatch(actionCreators.addRemoveLabel(isAdd, labelId));\n    },\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CheckboxesOnShipments);\n","import actions from \"../Redux/actions\";\nimport funcs from \"../Utils/functions\";\nimport * as actionCreators from \"../Redux/creators\";\n\nvar traverse = function (o, fn) {\n  for (var i in o) {\n    fn.apply(this, [i, o[i]]);\n    if (o[i] !== null && typeof o[i] == \"object\") {\n      traverse(o[i], fn);\n    }\n  }\n};\n\nexport const fetchApi = {\n  fetchData: function (operation, productTypeOrId, baseUrl) {\n    return function (dispatch) {\n      dispatch({\n        type: actions.SET_LOADING,\n      });\n      const suffix = [operation, productTypeOrId].filter((x) => x);\n\n      const url = `${baseUrl}Shipments/` + suffix.join(\"/\");\n\n      return fetch(url, {\n        headers: {\n          Accept: \"application/json\",\n          \"X-Requested-With\": \"XMLHttpRequest\",\n        },\n      })\n        .then((resp) => {\n          return resp.json();\n        })\n        .then((d) => {\n          let allPallets = [];\n          let operationName = \"\";\n          let productTypeId = productTypeOrId;\n          dispatch({\n            type: actions.ADD_OPERATION,\n            data: operation,\n          });\n          switch (operation) {\n            case \"add-shipment\":\n              operationName = \"Add\";\n              allPallets = d[\"shipment_labels\"];\n              dispatch({\n                type: actions.ADD_OPERATION_NAME,\n                data: operationName,\n              });\n\n              dispatch({\n                type: actions.ADD_PRODUCT_TYPE_ID,\n                data: productTypeId,\n              });\n              dispatch({\n                type: actions.ADD_ALL_PALLETS,\n                data: allPallets,\n              });\n\n              break;\n            case \"edit-shipment\":\n              operationName = \"Edit\";\n              const shipmentPallets = d[\"shipment\"][\"pallets\"];\n              allPallets = shipmentPallets.concat(d.shipment_labels);\n              dispatch(actionCreators.addOperationName(operationName));\n\n              dispatch(actionCreators.addAllPallets(allPallets));\n\n              const labelIds = shipmentPallets.map((pallet) => {\n                return pallet.id;\n              });\n              productTypeId = d[\"shipment\"][\"product_type_id\"];\n              dispatch(actionCreators.addProductTypeId(productTypeId));\n              dispatch(actionCreators.addShipmentFromFetch(d.shipment));\n\n              dispatch(actionCreators.setLabelIds(labelIds));\n\n              break;\n            default:\n              break;\n          }\n\n          dispatch(fetchApi.fetchProductType(productTypeId, baseUrl));\n\n          const {\n            products,\n            productDescriptions,\n            isExpanded,\n            itemCounts,\n          } = funcs.loadProductsAndDescriptions(allPallets);\n\n          dispatch(actionCreators.updateItemCounts(itemCounts));\n\n          dispatch(actionCreators.setProducts(products));\n\n          dispatch(actionCreators.setProductDescriptions(productDescriptions));\n\n          dispatch(actionCreators.setIsExpanded(isExpanded));\n\n          dispatch(actionCreators.setLoading(false));\n        })\n        .catch((e) => console.log(e));\n    };\n  },\n\n  submitData: function () {\n    return function (dispatch, getState) {\n      dispatch({\n        type: actions.UPDATE_UI,\n        data: {\n          errors: {},\n          loading: true,\n        },\n      });\n\n      const state = getState();\n      const { products: p, ui, shipment: s } = state;\n\n      const { operation, shipper, shipped, id, destination, labelIds } = s;\n      const { baseUrl } = ui;\n      const { productType } = p;\n\n      let postObject = {\n        shipper: shipper,\n        destination: destination,\n        shipped: shipped,\n        product_type_id: productType,\n        pallets: labelIds,\n      };\n\n      let urlArg = \"\";\n      switch (operation) {\n        case \"add-shipment\":\n          urlArg = productType;\n          break;\n        case \"edit-shipment\":\n          urlArg = id;\n          postObject.id = id;\n          const labels = labelIds.map((cur) => {\n            return { shipment_id: id, id: cur };\n          });\n          postObject = { ...postObject, pallets: labels };\n\n          break;\n        default:\n          console.log(\"it broken\");\n      }\n\n      const parts = [operation, urlArg].filter((x) => x);\n\n      const url = baseUrl + \"Shipments/\" + parts.join(\"/\");\n\n      let fetchOptions = {\n        method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n        mode: \"cors\", // no-cors, cors, *same-origin\n        cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n        credentials: \"same-origin\", // include, *same-origin, omit\n        headers: {\n          \"X-CSRF-Token\": window.csrfToken,\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n          \"X-Requested-With\": \"XMLHttpRequest\",\n        },\n        redirect: \"error\",\n        body: JSON.stringify(postObject),\n      };\n\n      dispatch(actionCreators.submitStart());\n\n      return fetch(url, fetchOptions)\n        .then((response) => response.json())\n        .then((d) => {\n          let redirect = true;\n\n          let errorObject = d.error || {};\n\n          if (Object.keys(errorObject).length > 0) {\n            // eslint-disable-next-line array-callback-return\n\n            if (errorObject.pallets) {\n              errorObject = errorObject.pallets;\n              // de nest d.error.pallets\n              traverse(errorObject, function (k, v) {\n                if (k === \"shipped\") {\n                  errorObject = { [k]: v };\n                }\n              });\n            }\n            Object.keys(errorObject).forEach((fieldName) => {\n              dispatch(\n                actionCreators.updateErrors({\n                  [fieldName]: errorObject[fieldName],\n                })\n              );\n            });\n\n            redirect = false;\n          }\n          dispatch(\n            actionCreators.updateUI({\n              loading: false,\n              redirect: redirect,\n            })\n          );\n        });\n    };\n  },\n\n  fetchProductType: function (productType, baseUrl) {\n    return function (dispatch) {\n      const url = `${baseUrl}ProductTypes/view/${productType}`;\n\n      if (!productType) return;\n      dispatch(actionCreators.fetchProductTypeStart());\n      return fetch(url, {\n        headers: {\n          Accept: \"application/json\",\n          \"X-Requested-With\": \"XMLHttpRequest\",\n        },\n      })\n        .then((resp) => {\n          return resp.json();\n        })\n        .then((d) => {\n          if (d.productType) {\n            dispatch(actionCreators.setProductTypeName(d.productType.name));\n          }\n        })\n        .catch((e) => {\n          throw e;\n        });\n    };\n  },\n\n  getSearchTerm: function (query) {\n    return function (dispatch, getState) {\n      dispatch(actionCreators.setTypeAheadLoading(true));\n      dispatch(actionCreators.startFetchTypeAhead());\n      const baseUrl = getState().ui.baseUrl;\n\n      return fetch(`${baseUrl}Shipments/destinationLookup?term=${query}`, {\n        headers: {\n          Accept: \"application/json\",\n        },\n      })\n        .then((resp) => resp.json())\n        .then((json) => {\n          dispatch(actionCreators.setTypeAheadLoading(false));\n          dispatch(actionCreators.loadOptions(json));\n        });\n    };\n  },\n};\n\nexport default fetchApi;\n","import React from \"react\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\nimport Form from \"react-bootstrap/Form\";\nimport { connect } from \"react-redux\";\nimport actions from \"../Redux/actions\";\n\nconst CheckboxShipped = function (props) {\n  const {\n    toggleShipped,\n    getValidationState,\n    shippedError,\n    shipped,\n    errors,\n  } = props;\n  return (\n    <FormGroup>\n      <Form.Check id=\"shipped\">\n        <Form.Check.Input\n          type=\"checkbox\"\n          checked={shipped}\n          onChange={toggleShipped}\n          isValid={getValidationState(\"shipped\", errors)}\n        />\n        <Form.Check.Label>Shipped</Form.Check.Label>\n        <Form.Control.Feedback>{shippedError}</Form.Control.Feedback>\n      </Form.Check>\n    </FormGroup>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { shipment: s, ui } = state;\n  return {\n    shipped: s.shipped,\n    errors: ui.errors,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    toggleShipped: () => {\n      dispatch({ type: actions.TOGGLE_SHIPPED });\n    },\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckboxShipped);\n","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\nimport FormLabel from \"react-bootstrap/FormLabel\";\nimport FormText from \"react-bootstrap/FormText\";\nimport { AsyncTypeahead } from \"react-bootstrap-typeahead\"; // ES2015\nimport Col from \"react-bootstrap/Col\";\nimport { connect } from \"react-redux\";\nimport funcs from \"../Utils/functions\";\nimport fetchAPI from \"../Utils/fetchFunctions\";\nimport { bindActionCreators } from \"redux\";\nimport * as actionCreators from \"../Redux/creators\";\n\nconst FormRow = function (props) {\n  const {\n    formatErrors,\n    setShipmentDetail,\n    isTypeAheadLoading,\n    getSearchTerm,\n    errors,\n    options,\n    destination,\n    submitOnEnter,\n    shipper,\n  } = props;\n\n  return (\n    <Form.Row onSubmit={(e) => e.preventDefault()}>\n      <Col lg={3}>\n        <FormGroup controlId=\"shipper\">\n          <FormLabel>Shipment</FormLabel>{\" \"}\n          <FormControl\n            type=\"text\"\n            value={shipper}\n            onKeyDown={(event) => {\n              if (event.key === \"Enter\") {\n                submitOnEnter();\n              }\n            }}\n            isValid={funcs.getValidationState(\"shipper\", errors)}\n            placeholder=\"Shipment\"\n            onChange={(e) => {\n              /*   const { shipper, ...newState } = errors;\n              setState({\n                errors: {\n                  ...newState,\n                },\n              }); */\n\n              setShipmentDetail(e.target.id, e.target.value);\n            }}\n            required=\"required\"\n          />\n          <FormControl.Feedback />\n          <FormText>{formatErrors(\"shipper\", errors)}</FormText>\n        </FormGroup>\n      </Col>\n      <Col lg={3} key=\"row-col-2\">\n        <FormGroup controlId=\"destination\">\n          <FormLabel>Destination</FormLabel>\n          <AsyncTypeahead\n            minLength={1}\n            placeholder=\"Destination\"\n            isLoading={isTypeAheadLoading}\n            id=\"destination\"\n            isValid={funcs.getValidationState(\"destination\", errors)}\n            selected={[destination]}\n            onChange={(selected) => {\n              if (selected.length > 0) {\n                let destination = selected[0].value;\n                setShipmentDetail(\"destination\", destination);\n              }\n            }}\n            onInputChange={(destination) => {\n              setShipmentDetail(\"destination\", destination);\n            }}\n            onSearch={(query) => {\n              getSearchTerm(query);\n            }}\n            labelKey=\"value\"\n            options={options}\n            onKeyDown={(event) => {\n              if (event.key === \"Enter\") {\n                submitOnEnter();\n              }\n            }}\n          />\n          <FormText>{formatErrors(\"destination\", errors)}</FormText>\n        </FormGroup>\n      </Col>\n    </Form.Row>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { ui, shipment: s } = state;\n\n  return {\n    isTypeAheadLoading: ui.isTypeAheadLoading,\n    baseUrl: ui.baseUrl,\n    errors: ui.errors,\n    options: ui.options,\n    shipper: s.shipper,\n    destination: s.destination,\n    shipped: s.shipped,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      setTypeaheadLoadingState: actionCreators.setTypeAheadLoading,\n      getSearchTerm: fetchAPI.getSearchTerm,\n      setShipmentDetail: actionCreators.setShipmentDetail,\n      submitOnEnter: fetchAPI.submitData,\n    },\n    dispatch\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormRow);\n","import React from \"react\";\n\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Spinner from \"./Spinner\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport Wrap from \"./Wrap\";\nimport AlertMessage from \"./AlertMessage\";\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\nimport \"./ShipApp.css\";\nimport CardOnShipment from \"./CardOnShipment\";\nimport CardAvailableItems from \"./CardAvailableItems\";\nimport ButtonSubmit from \"./ButtonSubmit\";\nimport CheckboxesOnShipments from \"./CheckboxesOnShipments\";\nimport fetchApi from \"../Utils/fetchFunctions\";\nimport funcs from \"../Utils/functions\";\nimport CheckboxShipped from \"./CheckboxShipped\";\nimport FormRow from \"./FormRow\";\nimport * as actionCreators from \"../Redux/creators\";\nimport { bindActionCreators } from \"redux\";\n// import queryString from \"query-string\";\n\nclass App extends React.Component {\n  componentDidMount() {\n    const { operation, productTypeOrId } = funcs.parseRouterArgs(\n      this.props.match.params\n    );\n    const { baseUrl, fetchData, updateBaseUrl } = this.props;\n\n    updateBaseUrl(baseUrl);\n\n    fetchData(operation, productTypeOrId, baseUrl);\n  }\n\n  render() {\n    const {\n      products,\n      productDescriptions,\n      labelLists,\n      showAlert,\n      labelCounts,\n      toggleAlert,\n      isExpanded,\n      productTypeName,\n      loading,\n      baseUrl,\n      redirect,\n      operationName,\n      options,\n      alert,\n      errors,\n      submitData,\n      isTypeAheadLoading,\n\n      labelIds,\n    } = this.props;\n\n    if (redirect && process.env.NODE_ENV === \"production\") {\n      window.location = baseUrl + \"Shipments/\";\n    }\n\n    return (\n      <Wrap>\n        <Row key=\"row-1\">\n          <Col lg={12}>\n            <AlertMessage content={alert} onDismiss={toggleAlert} />\n            <h3>\n              {operationName} {productTypeName} Shipment\n            </h3>\n          </Col>\n        </Row>\n        <Row key=\"row-2\">\n          <Col lg={12} key=\"row-col-1\">\n            <FormRow\n              options={options}\n              getValidationState={funcs.getValidationState}\n              isTypeAheadLoading={isTypeAheadLoading}\n              formatErrors={funcs.formatErrors}\n            ></FormRow>\n          </Col>\n        </Row>\n        <Row key=\"row-3\">\n          <Col lg={6}>\n            <CheckboxShipped\n              toggleShipped={this.toggleShipped}\n              getValidationState={funcs.getValidationState}\n              shippedError={funcs.formatErrors(\"shipped\", errors)}\n            />\n          </Col>\n          <Col lg={1} className=\"mb-3\">\n            <ButtonSubmit click={submitData} showAlert={showAlert} />\n          </Col>\n          <Col lg={5}>\n            <Spinner loading={loading} />\n          </Col>\n        </Row>\n        <Row key=\"row-4\">\n          <Col>\n            <div className=\"pre-scrollable\">\n              <div className=\"card-container\">\n                <CardAvailableItems\n                  labelLists={labelLists}\n                  isExpanded={isExpanded}\n                  labelCounts={labelCounts}\n                  products={products}\n                  labelIds={labelIds}\n                  productDescriptions={productDescriptions}\n                />\n              </div>\n            </div>\n          </Col>\n          <Col>\n            <CardOnShipment selectedCount={labelIds.length}>\n              <CheckboxesOnShipments count={labelIds.length} />\n            </CardOnShipment>\n          </Col>\n        </Row>\n      </Wrap>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { shipment: s, ui, products: p, alert } = state;\n  return {\n    alert,\n    labelIds: s.labelIds,\n    labelCounts: p.labelCounts,\n    errors: ui.errors,\n    products: p.products,\n    productDescriptions: p.productDescriptions,\n    labelLists: p.labelLists,\n    isExpanded: ui.isExpanded,\n    productTypeName: p.productTypeName,\n    loading: ui.loading,\n    options: ui.options,\n    redirect: ui.redirect,\n    operationName: ui.operationName,\n    isTypeAheadLoading: ui.isTypeAheadLoading,\n  };\n};\n\nconst wrapWithDispatch = {\n  submitData: fetchApi.submitData,\n  fetchData: fetchApi.fetchData,\n  toggleAlert: actionCreators.toggleAlert,\n  showAlert: actionCreators.showAlert,\n  updateBaseUrl: actionCreators.updateBaseUrl,\n};\n\n/* const mapDispatchToProps = (dispatch) => {\n  return {\n    dispatch,\n    fetchData: (operation, productTypeOrId, baseUrl) => {\n      dispatch(fetchApi.fetchData(operation, productTypeOrId, baseUrl));\n    },\n    submitData: () => {\n      dispatch(fetchApi.submitData());\n    },\n    toggleAlert: () => {\n      dispatch(actionCreators.toggleAlert());\n    },\n    showAlertFunc: () => {\n      dispatch(actionCreators.showAlert(\"Bold Text\", \"Normal Text\", \"warning\"));\n    },\n  };\n};\n */\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(wrapWithDispatch, dispatch);\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(App));\n","import actions from \"../actions\";\n\nlet initialState = {\n  operation: \"\",\n  id: \"\",\n  shipment_type: \"\",\n  shipped: false,\n  shipper: \"\",\n  destination: \"\",\n  product_type_id: \"\",\n  labelIds: [],\n};\n\nexport function shipment(state = initialState, action) {\n  switch (action.type) {\n    case actions.ADD_OPERATION:\n      return {\n        ...state,\n        operation: action.data,\n      };\n    case actions.SET_LABEL_IDS:\n      return {\n        ...state,\n        labelIds: action.data,\n      };\n\n    case actions.ADD_SHIPMENT_FROM_FETCH: {\n      return {\n        ...state,\n        ...action.data,\n      };\n    }\n    case actions.SET_SHIPMENT_DETAIL:\n      const { fieldName, fieldValue } = action.data;\n      return Object.assign({}, state, {\n        [fieldName]: fieldValue,\n      });\n    case actions.TOGGLE_SHIPPED: {\n      return {\n        ...state,\n        shipped: !state.shipped,\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import actions from \"../actions\";\n\nlet initialState = {\n  showAlert: false,\n  alertTextBold: \"Default Alert Bold\",\n  alertText: \"Default alert text\",\n  alertVariant: \"info\",\n};\n\nexport function alert(state = initialState, action) {\n  switch (action.type) {\n    case actions.TOGGLE_ALERT:\n      return {\n        ...state,\n        showAlert: !state.showAlert,\n      };\n    case actions.SHOW_ALERT:\n      return {\n        ...state,\n        showAlert: true,\n        ...action.data,\n      };\n    case actions.HIDE_ALERT:\n      return {\n        ...state,\n        showAlert: false,\n      };\n    default:\n      return state;\n  }\n}\n","import actions from \"../actions\";\n\nconst initialState = {\n  products: [],\n  productDescriptions: {},\n  labelLists: {},\n  labelCounts: {},\n  productType: 0,\n  productTypeName: \"\",\n  allPallets: [],\n  productTypes: [],\n};\n\nexport function products(state = initialState, action) {\n  switch (action.type) {\n    case actions.SET_LABEL_LIST: {\n      return {\n        ...state,\n        labelLists: {\n          ...state.labelLists,\n          ...action.data,\n        },\n      };\n    }\n    case actions.ADD_PRODUCT_TYPE_ID: {\n      return {\n        ...state,\n        productType: action.data,\n      };\n    }\n    case actions.SET_PRODUCTS: {\n      return {\n        ...state,\n        products: action.data,\n      };\n    }\n    case actions.SET_PRODUCT_TYPE_NAME: {\n      return {\n        ...state,\n        productTypeName: action.data,\n      };\n    }\n    case actions.SET_PRODUCT_DESCRIPTIONS: {\n      return {\n        ...state,\n        productDescriptions: action.data,\n      };\n    }\n    case actions.UPDATE_PRODUCT_DESCRIPTIONS: {\n      return {\n        ...state,\n        products: {\n          ...state.products,\n          ...action.data,\n        },\n      };\n    }\n    case actions.UPDATE_ITEM_COUNTS: {\n      return {\n        ...state,\n        labelCounts: {\n          ...state.labelCounts,\n          ...action.data,\n        },\n      };\n    }\n\n    case actions.ADD_ALL_PALLETS:\n      return {\n        ...state,\n        allPallets: action.data,\n      };\n    default:\n      return state;\n  }\n}\n","import actions from \"../actions\";\n\nconst initialState = {\n  isExpanded: {},\n  options: [],\n  redirect: false,\n  loading: false,\n  errors: {},\n  operationName: \"\",\n  isTypeAheadLoading: false,\n  baseUrl: \"\",\n};\n\nexport function ui(state = initialState, action) {\n  switch (action.type) {\n    case actions.SET_IS_EXPANDED: {\n      return {\n        ...state,\n        isExpanded: action.data,\n      };\n    }\n    case actions.UPDATE_UI: {\n      return {\n        ...state,\n        ...action.data,\n      };\n    }\n    case actions.UPDATE_ERRORS: {\n      return {\n        ...state,\n        errors: {\n          ...state.errors,\n          ...action.data,\n        },\n      };\n    }\n    case actions.UPDATE_IS_EXPANDED: {\n      return {\n        ...state,\n        isExpanded: {\n          ...state.isExpanded,\n          ...action.data,\n        },\n      };\n    }\n    case actions.SET_TYPEAHEAD_LOADING: {\n      return {\n        ...state,\n        isTypeAheadLoading: action.data,\n      };\n    }\n    case actions.LOAD_OPTIONS: {\n      return {\n        ...state,\n        options: action.data,\n      };\n    }\n    case actions.UPDATE_BASE_URL:\n      return {\n        ...state,\n        baseUrl: action.data,\n      };\n\n    case actions.SET_LOADING:\n      return {\n        ...state,\n        loading: action.data,\n      };\n    case actions.TOGGLE_ALERT:\n      return {\n        ...state,\n        showAlert: !state.showAlert,\n      };\n\n    case actions.ADD_OPERATION_NAME:\n      return {\n        ...state,\n        operationName: action.data,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { shipment } from \"./shipment\";\nimport { alert } from \"./alert\";\nimport { products } from \"./products\";\nimport { ui } from \"./ui\";\n\nconst shipmentApp = combineReducers({\n  shipment,\n  alert,\n  products,\n  ui,\n});\n\nexport default shipmentApp;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport shipmentApp from \"./reducers/rootReducer\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\n\nconst loggerMiddleware = createLogger();\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nlet middleWare = [thunkMiddleware];\n\nif (process.env.NODE_ENV !== \"production\") {\n  middleWare.push(loggerMiddleware);\n}\n\nexport let store = createStore(\n  shipmentApp,\n  composeEnhancers(applyMiddleware(...middleWare))\n);\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport { Switch } from \"react-router\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { store } from \"../Redux/store\";\n\nexport const Root = (props) => {\n  const { baseUrl } = props;\n  return (\n    <Provider store={store}>\n      <Router>\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            render={(props) => <App {...props} baseUrl={baseUrl} />}\n          />\n          <Route\n            path=\"/:operation(edit-shipment|add-shipment)/:productTypeOrId?\"\n            render={(props) => <App {...props} baseUrl={baseUrl} />}\n          />\n          <Route\n            path={`${baseUrl}shipments/process/:operation(edit-shipment|add-shipment)/:productTypeOrId?`}\n            render={(props) => <App {...props} baseUrl={baseUrl} />}\n          />\n        </Switch>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default Root;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Root from \"./Components/Root\";\n\nconst root = document.getElementById(\"root\");\n\nconst baseUrl = root.getAttribute(\"data-baseurl\");\n\nReactDOM.render(<Root baseUrl={baseUrl} />, root);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}