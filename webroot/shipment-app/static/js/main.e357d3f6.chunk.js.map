{"version":3,"sources":["Redux/actions.js","Redux/shipment.js","Redux/alert.js","Redux/products.js","Redux/ui.js","Redux/reducers.js","Components/Spinner.js","Components/Wrap.js","Components/AlertMessage.js","Components/CardOnShipment.js","Components/WrapCheckbox.js","Utils/functions.js","Components/CheckboxesAvailable.js","Components/CardAvailableItems.js","Components/ButtonSubmit.js","Components/CheckboxesOnShipments.js","Utils/fetchFunctions.js","Components/CheckboxShipped.js","Components/FormRow.js","Redux/creators.js","Components/App.js","index.js"],"names":["initialState","operation","id","shipment_type","shipped","shipper","destination","product_type_id","labelIds","showAlert","alertTextBold","alertText","alertVariant","products","productDescriptions","labelLists","labelCounts","productType","productTypeName","allPallets","productTypes","isExpanded","options","redirect","loading","errors","operationName","isTypeAheadLoading","baseUrl","shipmentApp","combineReducers","shipment","state","action","type","actions","data","fieldName","fieldValue","Object","assign","alert","ui","Spinner","props","Row","Col","lg","className","size","color","Wrap","children","AlertMessage","variant","strongText","normalText","onDismiss","CSSTransition","in","show","timeout","classNames","unmountOnExit","Alert","onClose","dismissible","CardOnShipment","selectedCount","Card","Header","as","Badge","Body","popoverText","CustomPopover","placement","Popover","Title","Content","WrapCheckbox","disabled","childKey","OverlayTrigger","trigger","rootClose","overlay","key","funcs","loadProductsAndDescriptions","pallets","itemCounts","forEach","pl","indexOf","item_id","push","code_desc","updateSingleItemLabelCount","reduce","prev","curr","idx","updateCodeDescriptions","labelId","dispatch","getState","p","filter","plObj","parseInt","itemId","productArray","count","value","index","length","createCodeDescriptions","ctr","codeDesc","accum","current","this","setState","getLabelList","productId","labelList","toggleIsExpanded","keys","toggleAlert","txt","bold","newAlertState","setTimeout","toggleShipped","addRemoveLabel","isAdd","parseRouterArgs","productTypeOrId","getValidationState","undefined","formatErrors","fieldErrors","obj","map","join","getLabelObject","buildLabelString","palletObject","location","item","bb_date","pl_ref","qty","description","Date","toLocaleDateString","connect","icon","checked","style","faBan","pointerEvents","labelText","Form","Check","Input","isInvalid","onChange","e","target","Label","cardContents","cardBody","onClick","click","Button","s","FormCheck","label","fetchApi","fetchData","suffix","x","url","fetch","headers","Accept","then","resp","json","d","productTypeId","shipmentPallets","concat","shipment_labels","pallet","fetchProductType","catch","console","log","submitData","postObject","urlArg","labels","cur","shipment_id","fetchOptions","method","mode","cache","credentials","window","csrfToken","body","JSON","stringify","response","errorObject","error","traverse","o","fn","i","apply","k","v","name","getSearchTerm","query","shippedError","FormGroup","isValid","Control","Feedback","setTypeaheadLoadingState","b","fetchAPI","setShipmentDetail","onSubmit","preventDefault","controlId","FormLabel","FormControl","placeholder","required","FormText","minLength","isLoading","selected","onInputChange","onSearch","labelKey","App","match","params","ButtonSubmit","showAlertFunc","React","Component","withRouter","root","document","getElementById","getAttribute","composeEnhancers","createLogger","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleWare","thunkMiddleware","store","createStore","applyMiddleware","ReactDOM","render","path","exact"],"mappings":"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","file":"static/js/main.e357d3f6.chunk.js","sourcesContent":["export default {\n  ADD_ALL_PALLETS: \"ADD_ALL_PALLETS\",\n  ADD_OPERATION_NAME: \"ADD_OPERATION_NAME\",\n  ADD_OPERATION: \"ADD_OPERATION\",\n  ADD_PRODUCT_DESCRIPTIONS: \"ADD_PRODUCT_DESCRIPTIONS\",\n  ADD_PRODUCT_TYPE_ID: \"ADD_PRODUCT_TYPE_ID\",\n  ADD_PRODUCTS: \"ADD_PRODUCTS\",\n  HIDE_ALERT: \"HIDE_ALERT\",\n  LOAD_OPTIONS: \"LOAD_OPTIONS\",\n  SET_IS_EXPANDED: \"SET_IS_EXPANDED\",\n  SET_LABEL_IDS: \"SET_LABEL_IDS\",\n  SET_LABEL_LIST: \"SET_LABEL_LIST\",\n  SET_LOADING: \"SET_LOADING\",\n  SET_PRODUCT_DESCRIPTIONS: \"SET_PRODUCT_DESCRIPTIONS\",\n  SET_PRODUCT_TYPE_NAME: \"SET_PRODUCT_TYPE_NAME\",\n  SET_PRODUCTS: \"SET_PRODUCTS\",\n  SET_TYPEAHEAD_LOADING: \"SET_TYPEAHEAD_LOADING\",\n  SHOW_ALERT: \"SHOW_ALERT\",\n  TOGGLE_ALERT: \"TOGGLE_ALERT\",\n  UNSET_LOADING: \"UNSET_LOADING\",\n  UPDATE_BASE_URL: \"UPDATE_BASE_URL\",\n  SET_SHIPMENT_DETAIL: \"SET_SHIPMENT_DETAIL\",\n  TOGGLE_SHIPPED: \"TOGGLE_SHIPPED\",\n  UPDATE_IS_EXPANDED: \"UPDATE_IS_EXPANDED\",\n  UPDATE_ITEM_COUNTS: \"UPDATE_ITEM_COUNTS\",\n  UPDATE_PRODUCTS: \"UPDATE_PRODUCTS\",\n  UPDATE_PRODUCT_DESCRIPTIONS: \"UPDATE_PRODUCT_DESCRIPTIONS\",\n  UPDATE_CODE_DESCRIPTIONS: \"UPDATE_CODE_DESCRIPTIONS\",\n  UPDATE_UI: \"UPDATE_UI\",\n  SUBMIT_START: \"SUBMIT_START\",\n  UPDATE_ERRORS: \"UPDATE_ERRORS\",\n  ADD_SHIPMENT_FROM_FETCH: \"ADD_SHIPMENT_FROM_FETCH\",\n};\n","import actions from \"./actions\";\n\nlet initialState = {\n  operation: \"\",\n  id: \"\",\n  shipment_type: \"\",\n  shipped: false,\n  shipper: \"\",\n  destination: \"\",\n  product_type_id: \"\",\n  labelIds: [],\n};\n\nexport function shipment(state = initialState, action) {\n  switch (action.type) {\n    case actions.ADD_OPERATION:\n      return {\n        ...state,\n        operation: action.data,\n      };\n    case actions.SET_LABEL_IDS:\n      return {\n        ...state,\n        labelIds: action.data,\n      };\n\n    case actions.ADD_SHIPMENT_FROM_FETCH: {\n      return {\n        ...state,\n        ...action.data,\n      };\n    }\n    case actions.SET_SHIPMENT_DETAIL:\n      const { fieldName, fieldValue } = action.data;\n      return Object.assign({}, state, {\n        [fieldName]: fieldValue,\n      });\n    case actions.TOGGLE_SHIPPED: {\n      return {\n        ...state,\n        shipped: !state.shipped,\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import actions from \"./actions\";\n\nlet initialState = {\n  showAlert: false,\n  alertTextBold: \"Default Alert Bold\",\n  alertText: \"Default alert text\",\n  alertVariant: \"info\",\n};\n\nexport function alert(state = initialState, action) {\n  switch (action.type) {\n    case actions.SHOW_ALERT:\n      return {\n        ...state,\n        showAlert: true,\n        ...action.data,\n      };\n    case actions.HIDE_ALERT:\n      return {\n        ...state,\n        showAlert: false,\n      };\n    default:\n      return state;\n  }\n}\n","import actions from \"./actions\";\n\nconst initialState = {\n  products: [],\n  productDescriptions: {},\n  labelLists: {},\n  labelCounts: {},\n  productType: 0,\n  productTypeName: \"\",\n  allPallets: [],\n  productTypes: [],\n};\n\nexport function products(state = initialState, action) {\n  switch (action.type) {\n    case actions.SET_LABEL_LIST: {\n      return {\n        ...state,\n        labelLists: {\n          ...state.labelLists,\n          ...action.data,\n        },\n      };\n    }\n    case actions.ADD_PRODUCT_TYPE_ID: {\n      return {\n        ...state,\n        productType: action.data,\n      };\n    }\n    case actions.SET_PRODUCTS: {\n      return {\n        ...state,\n        products: action.data,\n      };\n    }\n    case actions.SET_PRODUCT_TYPE_NAME: {\n      return {\n        ...state,\n        productTypeName: action.data,\n      };\n    }\n    case actions.SET_PRODUCT_DESCRIPTIONS: {\n      return {\n        ...state,\n        productDescriptions: action.data,\n      };\n    }\n    case actions.UPDATE_PRODUCT_DESCRIPTIONS: {\n      return {\n        ...state,\n        products: {\n          ...state.products,\n          ...action.data,\n        },\n      };\n    }\n    case actions.UPDATE_ITEM_COUNTS: {\n      return {\n        ...state,\n        labelCounts: {\n          ...state.labelCounts,\n          ...action.data,\n        },\n      };\n    }\n\n    case actions.ADD_ALL_PALLETS:\n      return {\n        ...state,\n        allPallets: action.data,\n      };\n    default:\n      return state;\n  }\n}\n","import actions from \"./actions\";\n\nconst initialState = {\n  isExpanded: {},\n  options: [],\n  redirect: false,\n  loading: false,\n  errors: {},\n  operationName: \"\",\n  isTypeAheadLoading: false,\n  baseUrl: \"\",\n};\n\nexport function ui(state = initialState, action) {\n  switch (action.type) {\n    case actions.SET_IS_EXPANDED: {\n      return {\n        ...state,\n        isExpanded: action.data,\n      };\n    }\n    case actions.UPDATE_UI: {\n      return {\n        ...state,\n        ...action.data,\n      };\n    }\n    case actions.UPDATE_ERRORS: {\n      return {\n        ...state,\n        errors: {\n          ...state.errors,\n          ...action.data,\n        },\n      };\n    }\n    case actions.UPDATE_IS_EXPANDED: {\n      return {\n        ...state,\n        isExpanded: {\n          ...state.isExpanded,\n          ...action.data,\n        },\n      };\n    }\n    case actions.SET_TYPEAHEAD_LOADING: {\n      return {\n        ...state,\n        isTypeAheadLoading: action.data,\n      };\n    }\n    case actions.LOAD_OPTIONS: {\n      return {\n        ...state,\n        options: action.data,\n      };\n    }\n    case actions.UPDATE_BASE_URL:\n      return {\n        ...state,\n        baseUrl: action.data,\n      };\n\n    case actions.SET_LOADING:\n      return {\n        ...state,\n        loading: action.data,\n      };\n    case actions.TOGGLE_ALERT:\n      return {\n        ...state,\n        showAlert: !state.showAlert,\n      };\n    case actions.SHOW_ALERT: {\n      return {\n        ...state,\n        showAlert: true,\n        ...action.data,\n      };\n    }\n    case actions.ADD_OPERATION_NAME:\n      return {\n        ...state,\n        operationName: action.data,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { shipment } from \"./shipment\";\nimport { alert } from \"./alert\";\nimport { products } from \"./products\";\nimport { ui } from \"./ui\";\n\nconst shipmentApp = combineReducers({\n  shipment,\n  alert,\n  products,\n  ui,\n});\n\nexport default shipmentApp;\n","import React from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\n\nconst Spinner = (props) => {\n  const { loading } = props;\n  if (loading) {\n    return (\n      <Row>\n        <Col lg={12}>\n          <div className=\"text-center\">\n            <PulseLoader loading={loading} size={14} color={\"#ddd\"} />\n          </div>\n        </Col>\n      </Row>\n    );\n  }\n  return <></>;\n};\n\nexport default Spinner;\n","import React from \"react\";\n/* wrap in div if dev and nothing if production */\nconst Wrap = (props) => {\n  let renderThis = null;\n\n  if (process.env.NODE_ENV === \"development\") {\n    renderThis = <div className=\"container\">{props.children}</div>;\n  } else {\n    renderThis = <>{props.children}</>;\n  }\n  return renderThis;\n};\n\nexport default Wrap;\n","import React from \"react\";\n//import Alert from \"react-bootstrap/lib/Alert\";\nimport Alert from \"react-bootstrap/Alert\";\nimport \"./AlertMessage.css\";\nimport { CSSTransition } from \"react-transition-group\";\nconst AlertMessage = (props) => {\n  const { variant, strongText, normalText, onDismiss } = props;\n\n  return (\n    <CSSTransition\n      in={props.show}\n      timeout={300}\n      classNames=\"toggen\"\n      unmountOnExit\n    >\n      <Alert variant={variant} onClose={onDismiss} dismissible>\n        <strong>{strongText} </strong> {normalText}\n      </Alert>\n    </CSSTransition>\n  );\n};\n\nexport default AlertMessage;\n","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Badge from \"react-bootstrap/Badge\";\n\nexport default function CardOnShipment(props) {\n  const { selectedCount, children } = props;\n\n  return (\n    <Card>\n      <Card.Header as=\"h5\">\n        Currently On Shipment <Badge variant=\"primary\">{selectedCount}</Badge>\n      </Card.Header>\n      <Card.Body>{children}</Card.Body>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Popover from \"react-bootstrap/Popover\";\n\nconst popoverText = (\n  <>\n    <p>\n      This pallet doesn&apos;t have enough days product life left before it\n      expires to allow it to ship.\n    </p>\n  </>\n);\n\nconst CustomPopover = (props) => {\n  const { placement } = props;\n\n  return (\n    <Popover {...props} id={`popover-positioned-${placement}`}>\n      <Popover.Title>Low Dated Stock</Popover.Title>\n      <Popover.Content>{popoverText}</Popover.Content>\n    </Popover>\n  );\n};\nconst WrapCheckbox = (props) => {\n  const { disabled, children, childKey } = props;\n  if (disabled) {\n    return (\n      <OverlayTrigger\n        placement=\"bottom\"\n        trigger=\"click\"\n        rootClose={true}\n        overlay={CustomPopover}\n      >\n        <span key={childKey}>{children}</span>\n      </OverlayTrigger>\n    );\n  } else {\n    return children;\n  }\n};\n\nexport default WrapCheckbox;\n","import actions from \"../Redux/actions\";\n\nexport const funcs = {\n  loadProductsAndDescriptions: function (pallets) {\n    let products = [];\n    let productDescriptions = {};\n    let itemCounts = {};\n    pallets.forEach((pl) => {\n      if (products.indexOf(pl.item_id) === -1) {\n        products.push(pl.item_id);\n        productDescriptions[pl.item_id] = pl.code_desc;\n        itemCounts = {\n          ...itemCounts,\n          ...funcs.updateSingleItemLabelCount(pallets, pl.item_id),\n        };\n      }\n    });\n    const isExpanded = products.reduce((prev, curr, idx) => {\n      prev[curr] = false;\n      return prev;\n    }, {});\n\n    return { products, productDescriptions, isExpanded, itemCounts };\n  },\n  /**\n   *\n   * @param {*} palletObject\n   */\n  updateCodeDescriptions: function (labelId) {\n    return function (dispatch, getState) {\n      dispatch({ type: actions.UPDATE_CODE_DESCRIPTIONS });\n      let { products: p } = getState();\n\n      const { products, allPallets } = p;\n\n      const plObject = allPallets.filter((plObj) => {\n        return parseInt(plObj.id) === parseInt(labelId);\n      });\n\n      const { item_id: itemId, code_desc } = plObject[0];\n\n      dispatch({\n        type: actions.UPDATE_ITEM_COUNTS,\n        data: funcs.updateSingleItemLabelCount(allPallets, itemId),\n      });\n\n      if (products.indexOf(itemId) === -1) {\n        dispatch({\n          type: actions.UPDATE_IS_EXPANDED,\n          data: { [itemId]: false },\n        });\n        dispatch({\n          type: actions.UPDATE_PRODUCTS,\n          data: itemId,\n        });\n        dispatch({\n          type: actions.UPDATE_PRODUCT_DESCRIPTIONS,\n          data: { [itemId]: code_desc },\n        });\n      }\n    };\n  },\n\n  updateSingleItemLabelCount: function (productArray, itemId) {\n    const count = productArray.filter((value, index) => {\n      return value.item_id === itemId;\n    }).length;\n\n    return { [itemId]: count };\n  },\n\n  createCodeDescriptions: function createCodeDescriptions(productArray = []) {\n    let ctr = 0;\n    let labelCounts = {};\n\n    const codeDesc = productArray.reduce((accum, current) => {\n      const codeDesc = current.code_desc;\n      if (accum.indexOf(codeDesc) === -1) {\n        accum.push(codeDesc);\n        ctr = 1;\n      }\n\n      labelCounts[codeDesc] = ctr++;\n\n      return accum;\n    }, []);\n    this.setState({\n      labelCounts: { ...this.state.labelCounts, ...labelCounts },\n    });\n    return codeDesc;\n  },\n  getLabelList: function (productId, allPallets) {\n    const labelList = allPallets.reduce((accum, current, idx) => {\n      if (current.item_id === productId) {\n        accum.push(current);\n      }\n      return accum;\n    }, []);\n\n    return { [productId]: labelList };\n  },\n\n  toggleIsExpanded: function (productId, isExpanded) {\n    Object.keys(isExpanded).forEach((key) => {\n      if (parseInt(key) === parseInt(productId)) {\n        isExpanded[key] = !isExpanded[key];\n      } else {\n        isExpanded[key] = false;\n      }\n    });\n\n    return isExpanded;\n  },\n\n  toggleAlert: function (txt, bold, variant) {\n    const newAlertState = !this.state.showAlert;\n    this.setState({\n      alertVariant: variant,\n      alertText: txt,\n      alertTextBold: bold,\n      showAlert: newAlertState,\n    });\n    if (newAlertState) {\n      setTimeout(() => {\n        this.setState({ showAlert: !newAlertState });\n      }, 4000);\n    }\n  },\n\n  toggleShipped: function () {\n    this.setState({\n      shipment: {\n        ...this.state.shipment,\n        shipped: !this.state.shipment.shipped,\n      },\n    });\n  },\n\n  addRemoveLabel: function (isAdd, labelId, labelIds) {\n    //this.updateCodeDescriptions(labelId);\n\n    if (isAdd && labelIds.indexOf(labelId) === -1) {\n      labelIds.push(labelId);\n    }\n    if (!isAdd) {\n      labelIds = labelIds.filter((value) => {\n        return value !== labelId;\n      });\n    }\n\n    return labelIds;\n  },\n\n  parseRouterArgs: function (props) {\n    // gotta fix this it's ugggggly move it out of here\n    let { operation, productTypeOrId } = props;\n\n    return { operation, productTypeOrId };\n  },\n\n  getValidationState: function (fieldName, errors) {\n    if (errors[fieldName] !== undefined) {\n      return true;\n    }\n    return false;\n  },\n\n  formatErrors: function (fieldName, fieldErrors) {\n    let errors = [];\n    if (fieldErrors[fieldName]) {\n      let obj = fieldErrors[fieldName];\n\n      errors = Object.keys(obj).map((key) => {\n        return obj[key];\n      });\n    }\n\n    return errors.join(\", \");\n  },\n\n  getLabelObject: function (id, allPallets) {\n    const ret = allPallets.filter((current, idx) => {\n      return current.id === id;\n    });\n    return ret[0];\n  },\n  buildLabelString: function (palletObject) {\n    const { location, item, bb_date, pl_ref, qty, description } = palletObject;\n\n    const locationName = location.location;\n\n    const d = new Date(bb_date);\n\n    const stringValues = [\n      locationName,\n      item,\n      d.toLocaleDateString(),\n      pl_ref,\n      qty,\n      description,\n    ];\n    return stringValues.join(\", \");\n  },\n};\n\nexport default funcs;\n","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport { faBan } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport WrapCheckbox from \"./WrapCheckbox\";\nimport { connect } from \"react-redux\";\nimport actions from \"../Redux/actions\";\nimport funcs from \"../Utils/functions\";\n\nconst CheckboxesAvailable = function (props) {\n  const {\n    labelLists,\n    productId,\n    labelIds,\n\n    addRemoveLabel,\n  } = props;\n\n  return labelLists[productId].map((value, idx) => {\n    let icon = null;\n\n    const checked = labelIds.indexOf(value.id) > -1;\n    let style = {};\n    if (value.disabled) {\n      icon = <FontAwesomeIcon icon={faBan} />;\n      style = { pointerEvents: \"none\" };\n    }\n    let labelText = funcs.buildLabelString(value);\n\n    return (\n      <WrapCheckbox\n        key={value.pl_ref}\n        childKey={value.pl_ref}\n        disabled={value.disabled}\n      >\n        <Form.Check\n          disabled={value.disabled}\n          style={style}\n          key={value.pl_ref}\n          id={value.pl_ref}\n        >\n          <Form.Check.Input\n            checked={checked}\n            isInvalid={value.disabled}\n            type={\"checkbox\"}\n            onChange={(e) =>\n              addRemoveLabel(e.target.checked, value.id, labelIds)\n            }\n          />\n          <Form.Check.Label>\n            {icon} {labelText}\n          </Form.Check.Label>\n        </Form.Check>\n      </WrapCheckbox>\n    );\n  });\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addRemoveLabel: (isAdd, labelId, labelIds) => {\n      dispatch({\n        type: actions.SET_LABEL_IDS,\n        data: funcs.addRemoveLabel(isAdd, labelId, labelIds),\n      });\n      //updateCodeDescriptions\n      dispatch(funcs.updateCodeDescriptions(labelId));\n    },\n  };\n};\n\nexport default connect(\n  (state) => ({ ...state }),\n  mapDispatchToProps\n)(CheckboxesAvailable);\n","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Badge from \"react-bootstrap/Badge\";\nimport CheckboxesAvailable from \"./CheckboxesAvailable\";\nimport { connect } from \"react-redux\";\nimport funcs from \"../Utils/functions\";\nimport actions from \"../Redux/actions\";\n\nconst CardAvailableItems = function (props) {\n  const {\n    labelCounts,\n    products,\n    labelIds,\n    getLabelList,\n    toggleIsExpanded,\n    isExpanded,\n    labelLists,\n    productDescriptions,\n\n    allPallets,\n  } = props;\n\n  let cardContents = null;\n\n  if (products) {\n    cardContents = products.map((productId, idx) => {\n      let cardBody = null;\n      if (labelLists[productId] && isExpanded[productId]) {\n        cardBody = (\n          <Card.Body className={isExpanded[productId]}>\n            <CheckboxesAvailable\n              labelLists={labelLists}\n              labelIds={labelIds}\n              productId={productId}\n            />\n          </Card.Body>\n        );\n      }\n\n      return (\n        <div key={`wrap-${idx}`}>\n          <Card.Header\n            onClick={() => {\n              getLabelList(productId, allPallets);\n              toggleIsExpanded(productId, isExpanded);\n            }}\n            as=\"h5\"\n            className=\"toggen-header\"\n            key={`header-{idx}`}\n          >\n            {\" \"}\n            {productDescriptions[productId]}{\" \"}\n            {labelCounts[productId] && (\n              <Badge variant=\"primary\">{labelCounts[productId]}</Badge>\n            )}\n          </Card.Header>\n          {cardBody}\n        </div>\n      );\n    });\n  }\n\n  return <Card key={`card-top-level`}>{cardContents}</Card>;\n};\n\nconst mapStateToProps = (state) => {\n  const { products: p, ui } = state;\n  return {\n    isExpanded: ui.isExpanded,\n    products: p.products,\n    allPallets: p.allPallets,\n    labelLists: p.labelLists,\n    labelCounts: p.labelCounts,\n    productDescriptions: p.productDescriptions,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getLabelList: (productId, allPallets) =>\n      dispatch({\n        type: actions.SET_LABEL_LIST,\n        data: funcs.getLabelList(productId, allPallets),\n      }),\n    toggleIsExpanded: (productId, isExpanded) => {\n      dispatch({\n        type: actions.SET_IS_EXPANDED,\n        data: funcs.toggleIsExpanded(productId, isExpanded),\n      });\n    },\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CardAvailableItems);\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\n\nexport default function (props) {\n  const { click, showAlert } = props;\n  return (\n    <Button\n      variant=\"primary\"\n      size=\"sm\"\n      className=\"my-btn\"\n      onClick={() => {\n        click();\n        showAlert();\n      }}\n      type=\"submit\"\n    >\n      Submit\n    </Button>\n  );\n}\n","import React from \"react\";\nimport FormCheck from \"react-bootstrap/FormCheck\";\nimport { connect } from \"react-redux\";\nimport actions from \"../Redux/actions\";\nimport funcs from \"../Utils/functions\";\n\nconst CheckboxesOnShipments = function (props) {\n  const { labelIds, allPallets, addRemoveLabel } = props;\n\n  if (labelIds) {\n    return labelIds.map((id) => {\n      const palletObject = funcs.getLabelObject(id, allPallets);\n      return (\n        <FormCheck\n          key={palletObject.pl_ref}\n          id={`checkbox-{id}`}\n          checked\n          label={funcs.buildLabelString(palletObject)}\n          onChange={(e) =>\n            addRemoveLabel(e.target.checked, palletObject.id, labelIds)\n          }\n        />\n      );\n    });\n  }\n  return null;\n};\n\nconst mapStateToProps = (state) => {\n  const { shipment: s, products: p } = state;\n  return {\n    labelIds: s.labelIds,\n    allPallets: p.allPallets,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addRemoveLabel: (isAdd, labelId, labelIds) => {\n      dispatch({\n        type: actions.SET_LABEL_IDS,\n        data: funcs.addRemoveLabel(isAdd, labelId, labelIds),\n      });\n\n      //updateCodeDescriptions\n      dispatch(funcs.updateCodeDescriptions(labelId));\n    },\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CheckboxesOnShipments);\n","import actions from \"../Redux/actions\";\nimport funcs from \"../Utils/functions\";\n\nvar traverse = function (o, fn) {\n  for (var i in o) {\n    fn.apply(this, [i, o[i]]);\n    if (o[i] !== null && typeof o[i] == \"object\") {\n      traverse(o[i], fn);\n    }\n  }\n};\n\nexport const fetchApi = {\n  fetchData: function (operation, productTypeOrId, baseUrl) {\n    return function (dispatch) {\n      dispatch({\n        type: actions.SET_LOADING,\n      });\n      const suffix = [operation, productTypeOrId].filter((x) => x);\n\n      const url = `${baseUrl}Shipments/` + suffix.join(\"/\");\n\n      return fetch(url, {\n        headers: {\n          Accept: \"application/json\",\n          \"X-Requested-With\": \"XMLHttpRequest\",\n        },\n      })\n        .then((resp) => {\n          return resp.json();\n        })\n        .then((d) => {\n          let allPallets = [];\n          let operationName = \"\";\n          let productTypeId = productTypeOrId;\n          dispatch({\n            type: actions.ADD_OPERATION,\n            data: operation,\n          });\n          switch (operation) {\n            case \"add-shipment\":\n              operationName = \"Add\";\n              allPallets = d[\"shipment_labels\"];\n              dispatch({\n                type: actions.ADD_OPERATION_NAME,\n                data: operationName,\n              });\n\n              dispatch({\n                type: actions.ADD_PRODUCT_TYPE_ID,\n                data: productTypeId,\n              });\n              dispatch({\n                type: actions.ADD_ALL_PALLETS,\n                data: allPallets,\n              });\n\n              break;\n            case \"edit-shipment\":\n              operationName = \"Edit\";\n              const shipmentPallets = d[\"shipment\"][\"pallets\"];\n              allPallets = shipmentPallets.concat(d.shipment_labels);\n              dispatch({\n                type: actions.ADD_OPERATION_NAME,\n                data: operationName,\n              });\n\n              dispatch({\n                type: actions.ADD_ALL_PALLETS,\n                data: allPallets,\n              });\n\n              const labelIds = shipmentPallets.map((pallet) => {\n                return pallet.id;\n              });\n              productTypeId = d[\"shipment\"][\"product_type_id\"];\n              dispatch({\n                type: actions.ADD_PRODUCT_TYPE_ID,\n                data: productTypeId,\n              });\n              dispatch({\n                type: actions.ADD_SHIPMENT_FROM_FETCH,\n                data: d.shipment,\n              });\n\n              dispatch({\n                type: actions.SET_LABEL_IDS,\n                data: labelIds,\n              });\n\n              break;\n            default:\n              break;\n          }\n\n          dispatch(fetchApi.fetchProductType(productTypeId, baseUrl));\n\n          const {\n            products,\n            productDescriptions,\n            isExpanded,\n            itemCounts,\n          } = funcs.loadProductsAndDescriptions(allPallets);\n\n          dispatch({\n            type: actions.UPDATE_ITEM_COUNTS,\n            data: itemCounts,\n          });\n\n          dispatch({\n            type: actions.SET_PRODUCTS,\n            data: products,\n          });\n          dispatch({\n            type: actions.SET_PRODUCT_DESCRIPTIONS,\n            data: productDescriptions,\n          });\n\n          dispatch({\n            type: actions.SET_IS_EXPANDED,\n            data: isExpanded,\n          });\n\n          dispatch({\n            type: actions.SET_LOADING,\n            data: false,\n          });\n        })\n        .catch((e) => console.log(e));\n    };\n  },\n\n  submitData: function () {\n    return function (dispatch, getState) {\n      dispatch({\n        type: actions.UPDATE_UI,\n        data: {\n          errors: {},\n          loading: true,\n        },\n      });\n\n      const state = getState();\n      const { products: p, ui, shipment: s } = state;\n\n      const { operation, shipper, shipped, id, destination, labelIds } = s;\n      const { baseUrl } = ui;\n      const { productType } = p;\n\n      let postObject = {\n        shipper: shipper,\n        destination: destination,\n        shipped: shipped,\n        product_type_id: productType,\n        pallets: labelIds,\n      };\n\n      let urlArg = \"\";\n      switch (operation) {\n        case \"add-shipment\":\n          urlArg = productType;\n          break;\n        case \"edit-shipment\":\n          urlArg = id;\n          postObject.id = id;\n          const labels = labelIds.map((cur) => {\n            return { shipment_id: id, id: cur };\n          });\n          postObject = { ...postObject, pallets: labels };\n\n          break;\n        default:\n          console.log(\"it broken\");\n      }\n\n      const parts = [operation, urlArg].filter((x) => x);\n\n      const url = baseUrl + \"Shipments/\" + parts.join(\"/\");\n\n      let fetchOptions = {\n        method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n        mode: \"cors\", // no-cors, cors, *same-origin\n        cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n        credentials: \"same-origin\", // include, *same-origin, omit\n        headers: {\n          \"X-CSRF-Token\": window.csrfToken,\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n          \"X-Requested-With\": \"XMLHttpRequest\",\n        },\n        redirect: \"error\",\n        body: JSON.stringify(postObject),\n      };\n\n      dispatch({\n        type: actions.SUBMIT_START,\n      });\n\n      return fetch(url, fetchOptions)\n        .then((response) => response.json())\n        .then((d) => {\n          let redirect = true;\n\n          let errorObject = d.error || {};\n\n          if (Object.keys(errorObject).length > 0) {\n            // eslint-disable-next-line array-callback-return\n\n            if (errorObject.pallets) {\n              errorObject = errorObject.pallets;\n              // de nest d.error.pallets\n              traverse(errorObject, function (k, v) {\n                if (k === \"shipped\") {\n                  errorObject = { [k]: v };\n                }\n              });\n            }\n            Object.keys(errorObject).forEach((fieldName) => {\n              dispatch({\n                type: actions.UPDATE_ERRORS,\n                data: { [fieldName]: errorObject[fieldName] },\n              });\n            });\n\n            redirect = false;\n          }\n          dispatch({\n            type: actions.UPDATE_UI,\n            data: {\n              loading: false,\n              redirect: redirect,\n            },\n          });\n        });\n    };\n  },\n\n  fetchProductType: function (productType, baseUrl) {\n    return function (dispatch) {\n      const url = `${baseUrl}ProductTypes/view/${productType}`;\n\n      if (!productType) return;\n      dispatch({ type: \"FETCH_PRODUCT_START\" });\n      return fetch(url, {\n        headers: {\n          Accept: \"application/json\",\n          \"X-Requested-With\": \"XMLHttpRequest\",\n        },\n      })\n        .then((resp) => {\n          return resp.json();\n        })\n        .then((d) => {\n          if (d.productType) {\n            dispatch({\n              type: actions.SET_PRODUCT_TYPE_NAME,\n              data: d.productType.name,\n            });\n          }\n        })\n        .catch((e) => {\n          throw e;\n        });\n    };\n  },\n\n  getSearchTerm: function (query) {\n    return function (dispatch, getState) {\n      dispatch({\n        type: actions.SET_TYPEAHEAD_LOADING,\n        data: true,\n      });\n      dispatch({ type: \"START_FETCH_TYPEAHEAD\" });\n      const baseUrl = getState().ui.baseUrl;\n\n      return fetch(`${baseUrl}Shipments/destinationLookup?term=${query}`, {\n        headers: {\n          Accept: \"application/json\",\n        },\n      })\n        .then((resp) => resp.json())\n        .then((json) => {\n          dispatch({\n            type: actions.SET_TYPEAHEAD_LOADING,\n            data: false,\n          });\n          dispatch({\n            type: actions.LOAD_OPTIONS,\n            data: json,\n          });\n        });\n    };\n  },\n};\n\nexport default fetchApi;\n","import React from \"react\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\nimport Form from \"react-bootstrap/Form\";\nimport { connect } from \"react-redux\";\nimport actions from \"../Redux/actions\";\n\nconst CheckboxShipped = function (props) {\n  const {\n    toggleShipped,\n    getValidationState,\n    shippedError,\n    shipped,\n    errors,\n  } = props;\n  return (\n    <FormGroup>\n      <Form.Check id=\"shipped\">\n        <Form.Check.Input\n          type=\"checkbox\"\n          checked={shipped}\n          onChange={toggleShipped}\n          isValid={getValidationState(\"shipped\", errors)}\n        />\n        <Form.Check.Label>Shipped</Form.Check.Label>\n        <Form.Control.Feedback>{shippedError}</Form.Control.Feedback>\n      </Form.Check>\n    </FormGroup>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { shipment: s, ui } = state;\n  return {\n    shipped: s.shipped,\n    errors: ui.errors,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    toggleShipped: () => {\n      dispatch({ type: actions.TOGGLE_SHIPPED });\n    },\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckboxShipped);\n","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\nimport FormLabel from \"react-bootstrap/FormLabel\";\nimport FormText from \"react-bootstrap/FormText\";\nimport { AsyncTypeahead } from \"react-bootstrap-typeahead\"; // ES2015\nimport Col from \"react-bootstrap/Col\";\nimport { connect } from \"react-redux\";\nimport actions from \"../Redux/actions\";\nimport funcs from \"../Utils/functions\";\nimport fetchAPI from \"../Utils/fetchFunctions\";\n\nconst FormRow = function (props) {\n  const {\n    formatErrors,\n    setShipmentDetail,\n    isTypeAheadLoading,\n    getSearchTerm,\n    errors,\n    options,\n    destination,\n    shipper,\n  } = props;\n\n  return (\n    <Form.Row onSubmit={(e) => e.preventDefault()}>\n      <Col lg={3}>\n        <FormGroup controlId=\"shipper\">\n          <FormLabel>Shipment</FormLabel>{\" \"}\n          <FormControl\n            type=\"text\"\n            value={shipper}\n            isValid={funcs.getValidationState(\"shipper\", errors)}\n            placeholder=\"Shipment\"\n            onChange={(e) => {\n              /*   const { shipper, ...newState } = errors;\n              setState({\n                errors: {\n                  ...newState,\n                },\n              }); */\n\n              setShipmentDetail(e.target.id, e.target.value);\n            }}\n            required=\"required\"\n          />\n          <FormControl.Feedback />\n          <FormText>{formatErrors(\"shipper\", errors)}</FormText>\n        </FormGroup>\n      </Col>\n      <Col lg={3} key=\"row-col-2\">\n        <FormGroup controlId=\"destination\">\n          <FormLabel>Destination</FormLabel>\n          <AsyncTypeahead\n            minLength={1}\n            placeholder=\"Destination\"\n            isLoading={isTypeAheadLoading}\n            id=\"destination\"\n            isValid={funcs.getValidationState(\"destination\", errors)}\n            selected={[destination]}\n            onChange={(selected) => {\n              if (selected.length > 0) {\n                let destination = selected[0].value;\n                setShipmentDetail(\"destination\", destination);\n              }\n            }}\n            onInputChange={(destination) => {\n              setShipmentDetail(\"destination\", destination);\n            }}\n            onSearch={(query) => {\n              getSearchTerm(query);\n            }}\n            labelKey=\"value\"\n            options={options}\n          />\n          <FormText>{formatErrors(\"destination\", errors)}</FormText>\n        </FormGroup>\n      </Col>\n    </Form.Row>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { ui, shipment: s } = state;\n\n  return {\n    isTypeAheadLoading: ui.isTypeAheadLoading,\n    baseUrl: ui.baseUrl,\n    errors: ui.errors,\n    options: ui.options,\n    shipper: s.shipper,\n    destination: s.destination,\n    shipped: s.shipped,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setTypeaheadLoadingState: (b) => {\n      dispatch({\n        type: actions.SET_TYPEAHEAD_LOADING,\n        data: b,\n      });\n    },\n    getSearchTerm: (query) => {\n      dispatch(fetchAPI.getSearchTerm(query));\n    },\n    setShipmentDetail: (fieldName, fieldValue) => {\n      dispatch({\n        type: actions.SET_SHIPMENT_DETAIL,\n        data: {\n          fieldName: fieldName,\n          fieldValue: fieldValue,\n        },\n      });\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormRow);\n","/* showAlert: false,\n alertTextBold: \"Default Alert Bold\",\n alertText: \"Default alert text\",\n alertVariant: \"info\", */\n\nimport actions from \"./actions\";\n\nexport const showAlert = (alertTextBold, alertText, alertVariant) => {\n  return {\n    type: actions.SHOW_ALERT,\n    data: {\n      alertTextBold,\n      alertText,\n      alertVariant,\n    },\n  };\n};\n","import React from \"react\";\n\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\n\nimport Spinner from \"./Spinner\";\nimport { connect } from \"react-redux\";\n\nimport { withRouter } from \"react-router\";\n\nimport Wrap from \"./Wrap\";\n\nimport AlertMessage from \"./AlertMessage\";\n\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\nimport \"./ShipApp.css\";\nimport CardOnShipment from \"./CardOnShipment\";\nimport CardAvailableItems from \"./CardAvailableItems\";\nimport ButtonSubmit from \"./ButtonSubmit\";\nimport CheckboxesOnShipments from \"./CheckboxesOnShipments\";\nimport fetchApi from \"../Utils/fetchFunctions\";\nimport funcs from \"../Utils/functions\";\nimport CheckboxShipped from \"./CheckboxShipped\";\nimport FormRow from \"./FormRow\";\nimport actions from \"../Redux/actions\";\nimport { showAlert as showAlertFunc } from \"../Redux/creators\";\n// import queryString from \"query-string\";\n\nclass App extends React.Component {\n  /* updateState(newState) {\n    this.setState(newState);\n  } */\n\n  componentDidMount() {\n    const { operation, productTypeOrId } = funcs.parseRouterArgs(\n      this.props.match.params\n    );\n    const { baseUrl, dispatch, fetchData } = this.props;\n\n    dispatch({ type: actions.UPDATE_BASE_URL, data: baseUrl });\n    fetchData(operation, productTypeOrId, baseUrl);\n  }\n\n  render() {\n    const {\n      products,\n      productDescriptions,\n      labelLists,\n      showAlert,\n      labelCounts,\n      isExpanded,\n      productTypeName,\n      loading,\n      baseUrl,\n      redirect,\n      operationName,\n      options,\n      alertText,\n      errors,\n      submitData,\n      isTypeAheadLoading,\n      alertTextBold,\n      alertVariant,\n      labelIds,\n    } = this.props;\n\n    if (redirect && process.env.NODE_ENV === \"production\") {\n      window.location = baseUrl + \"Shipments/\";\n    }\n\n    return (\n      <Wrap>\n        <Row key=\"row-1\">\n          <Col lg={12}>\n            <AlertMessage\n              strongText={alertTextBold}\n              normalText={alertText}\n              variant={alertVariant}\n              show={showAlert}\n              onDismiss={this.toggleAlert}\n            />\n            <h3>\n              {operationName} {productTypeName} Shipment\n            </h3>\n          </Col>\n        </Row>\n        <Row key=\"row-2\">\n          <Col lg={12} key=\"row-col-1\">\n            <FormRow\n              options={options}\n              setState={(o) => this.setState(o)}\n              getValidationState={funcs.getValidationState}\n              isTypeAheadLoading={isTypeAheadLoading}\n              formatErrors={funcs.formatErrors}\n            ></FormRow>\n          </Col>\n        </Row>\n        <Row key=\"row-3\">\n          <Col lg={6}>\n            <CheckboxShipped\n              toggleShipped={this.toggleShipped}\n              getValidationState={funcs.getValidationState}\n              shippedError={funcs.formatErrors(\"shipped\", errors)}\n            />\n          </Col>\n          <Col lg={1} className=\"mb-3\">\n            <ButtonSubmit click={submitData} showAlert={showAlertFunc} />\n          </Col>\n          <Col lg={5}>\n            <Spinner loading={loading} />\n          </Col>\n        </Row>\n        <Row key=\"row-4\">\n          <Col>\n            <div className=\"pre-scrollable\">\n              <div className=\"card-container\">\n                <CardAvailableItems\n                  labelLists={labelLists}\n                  isExpanded={isExpanded}\n                  labelCounts={labelCounts}\n                  products={products}\n                  labelIds={labelIds}\n                  productDescriptions={productDescriptions}\n                />\n              </div>\n            </div>\n          </Col>\n          <Col>\n            <CardOnShipment selectedCount={labelIds.length}>\n              <CheckboxesOnShipments count={labelIds.length} />\n            </CardOnShipment>\n          </Col>\n        </Row>\n      </Wrap>\n    );\n  }\n}\n\n/* const mapDispatchToProps = (dispatch) => {\n    return {\n        fetchData: (operation, producTypeOrId)=\n    }\n} */\n\nconst mapStateToProps = (state) => {\n  const { shipment: s, ui, products: p } = state;\n  return {\n    labelIds: s.labelIds,\n    labelCounts: p.labelCounts,\n    errors: ui.errors,\n    products: p.products,\n    productDescriptions: p.productDescriptions,\n    labelLists: p.labelLists,\n    showAlert: ui.showAlert,\n    isExpanded: ui.isExpanded,\n    productTypeName: p.productTypeName,\n    loading: ui.loading,\n    options: ui.options,\n    redirect: ui.redirect,\n    operationName: ui.operationName,\n    isTypeAheadLoading: ui.isTypeAheadLoading,\n    alertTextBold: ui.alertTextBold,\n    alertText: ui.alertText,\n    alertVariant: ui.alertVariant,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    dispatch,\n    fetchData: (operation, productTypeOrId, baseUrl) => {\n      dispatch(fetchApi.fetchData(operation, productTypeOrId, baseUrl));\n    },\n    submitData: () => {\n      dispatch(fetchApi.submitData());\n    },\n    showAlertFunc: () => {\n      dispatch(showAlertFunc(\"Bold\", \"Text\", \"danger\"));\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(App));\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport shipmentApp from \"./Redux/reducers\";\nimport thunkMiddleware from \"redux-thunk\";\nimport \"./index.css\";\nimport App from \"./Components/App\";\nimport { Switch } from \"react-router\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { createLogger } from \"redux-logger\";\nconst root = document.getElementById(\"root\");\n\nconst baseUrl = root.getAttribute(\"data-baseurl\");\n\nconst loggerMiddleware = createLogger();\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nlet middleWare = [thunkMiddleware];\n\nif (process.env.NODE_ENV !== \"production\") {\n  middleWare.push(loggerMiddleware);\n}\n\nlet store = createStore(\n  shipmentApp,\n  composeEnhancers(applyMiddleware(...middleWare))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <Switch>\n        <Route\n          path=\"/\"\n          exact\n          render={(props) => <App {...props} baseUrl={baseUrl} />}\n        />\n        <Route\n          path=\"/:operation(edit-shipment|add-shipment)/:productTypeOrId?\"\n          render={(props) => <App {...props} baseUrl={baseUrl} />}\n        />\n        <Route\n          path={`${baseUrl}shipments/process/:operation(edit-shipment|add-shipment)/:productTypeOrId?`}\n          render={(props) => <App {...props} baseUrl={baseUrl} />}\n        />\n      </Switch>\n    </Router>\n  </Provider>,\n  root\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}