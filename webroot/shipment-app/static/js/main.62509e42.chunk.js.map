{"version":3,"sources":["Components/Spinner.js","Components/Wrap.js","Components/AlertMessage.js","Components/CardOnShipment.js","Components/WrapCheckbox.js","Redux/actions.js","Utils/functions.js","Redux/creators.js","Components/CheckboxesAvailable.js","Components/CardAvailableItems.js","Components/ButtonSubmit.js","Components/CheckboxesOnShipments.js","Utils/fetchFunctions.js","Components/CheckboxShipped.js","Components/FormRow.js","Components/App.js","Redux/reducers/shipment.js","Redux/reducers/alert.js","Redux/reducers/products.js","Redux/reducers/ui.js","Redux/reducers/rootReducer.js","Redux/store.js","Components/Root.js","index.js"],"names":["Spinner","props","loading","Row","Col","lg","className","size","color","Wrap","children","AlertMessage","onDismiss","content","alertVariant","alertTextBold","alertText","showAlert","CSSTransition","in","timeout","classNames","unmountOnExit","Alert","variant","onClose","dismissible","CardOnShipment","selectedCount","Card","Header","as","Badge","Body","popoverText","CustomPopover","placement","Popover","id","Title","Content","WrapCheckbox","disabled","childKey","OverlayTrigger","trigger","rootClose","overlay","key","funcs","loadProductsAndDescriptions","pallets","products","productDescriptions","itemCounts","forEach","pl","indexOf","item_id","push","code_desc","updateSingleItemLabelCount","isExpanded","reduce","prev","curr","idx","updateCodeDescriptions","labelId","dispatch","getState","type","actions","p","allPallets","filter","plObj","parseInt","itemId","data","productArray","count","value","index","length","getLabelList","productId","labelList","accum","current","toggleIsExpanded","Object","keys","toggleAlert","txt","bold","newAlertState","this","state","setState","setTimeout","addRemoveLabel","isAdd","labelIds","parseRouterArgs","operation","productTypeOrId","getValidationState","fieldName","errors","undefined","formatErrors","fieldErrors","obj","map","join","getLabelObject","buildLabelString","palletObject","location","item","bb_date","pl_ref","qty","description","Date","toLocaleDateString","setTypeAheadLoading","b","setShipmentDetail","fieldValue","setLabelIds","shipment","connect","actionCreators","labelLists","icon","checked","style","faBan","pointerEvents","labelText","Form","Check","Input","isInvalid","onChange","e","target","Label","ui","labelCounts","cardContents","cardBody","onClick","submit","click","Button","s","FormCheck","label","fetchApi","fetchData","baseUrl","suffix","x","url","fetch","headers","Accept","then","resp","json","d","operationName","productTypeId","shipmentPallets","concat","shipment_labels","pallet","fetchProductType","catch","console","log","submitData","shipper","shipped","destination","productType","postObject","product_type_id","urlArg","labels","cur","shipment_id","fetchOptions","method","mode","cache","credentials","window","csrfToken","redirect","body","JSON","stringify","response","errorObject","error","traverse","o","fn","i","apply","k","v","name","getSearchTerm","query","toggleShipped","shippedError","FormGroup","isValid","Control","Feedback","isTypeAheadLoading","options","bindActionCreators","setTypeaheadLoadingState","fetchAPI","submitOnEnter","onSubmit","preventDefault","controlId","FormLabel","FormControl","onKeyDown","event","placeholder","required","FormText","minLength","isLoading","selected","onInputChange","onSearch","labelKey","App","match","params","updateBaseUrl","productTypeName","alert","ButtonSubmit","React","Component","wrapWithDispatch","withRouter","initialState","shipment_type","productTypes","shipmentApp","combineReducers","action","assign","composeEnhancers","createLogger","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleWare","thunkMiddleware","store","createStore","applyMiddleware","Root","path","exact","render","root","document","getElementById","getAttribute","ReactDOM"],"mappings":"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","file":"static/js/main.62509e42.chunk.js","sourcesContent":["import React from \"react\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport PulseLoader from \"react-spinners/PulseLoader\";\n\nconst Spinner = (props) => {\n  const { loading } = props;\n  if (loading) {\n    return (\n      <Row>\n        <Col lg={12}>\n          <div className=\"text-center\">\n            <PulseLoader loading={loading} size={14} color={\"#ddd\"} />\n          </div>\n        </Col>\n      </Row>\n    );\n  }\n  return <></>;\n};\n\nexport default Spinner;\n","import React from \"react\";\n/* wrap in div if dev and nothing if production */\nconst Wrap = (props) => {\n  let renderThis = null;\n\n  if (process.env.NODE_ENV === \"development\") {\n    renderThis = <div className=\"container\">{props.children}</div>;\n  } else {\n    renderThis = <>{props.children}</>;\n  }\n  return renderThis;\n};\n\nexport default Wrap;\n","import React from \"react\";\n//import Alert from \"react-bootstrap/lib/Alert\";\nimport Alert from \"react-bootstrap/Alert\";\nimport \"./AlertMessage.css\";\nimport { CSSTransition } from \"react-transition-group\";\nconst AlertMessage = (props) => {\n  const { onDismiss, content } = props;\n  const { alertVariant, alertTextBold, alertText, showAlert } = content;\n\n  return (\n    <CSSTransition\n      in={showAlert}\n      timeout={300}\n      classNames=\"toggen\"\n      unmountOnExit\n    >\n      <Alert variant={alertVariant} onClose={onDismiss} dismissible>\n        <strong>{alertTextBold} </strong> {alertText}\n      </Alert>\n    </CSSTransition>\n  );\n};\n\nexport default AlertMessage;\n","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Badge from \"react-bootstrap/Badge\";\n\nexport default function CardOnShipment(props) {\n  const { selectedCount, children } = props;\n\n  return (\n    <Card>\n      <Card.Header as=\"h5\">\n        Currently On Shipment <Badge variant=\"primary\">{selectedCount}</Badge>\n      </Card.Header>\n      <Card.Body>{children}</Card.Body>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport OverlayTrigger from \"react-bootstrap/OverlayTrigger\";\nimport Popover from \"react-bootstrap/Popover\";\n\nconst popoverText = (\n  <>\n    <p>\n      This pallet doesn&apos;t have enough days product life left before it\n      expires to allow it to ship.\n    </p>\n  </>\n);\n\nconst CustomPopover = (props) => {\n  const { placement } = props;\n\n  return (\n    <Popover {...props} id={`popover-positioned-${placement}`}>\n      <Popover.Title>Low Dated Stock</Popover.Title>\n      <Popover.Content>{popoverText}</Popover.Content>\n    </Popover>\n  );\n};\nconst WrapCheckbox = (props) => {\n  const { disabled, children, childKey } = props;\n  if (disabled) {\n    return (\n      <OverlayTrigger\n        placement=\"bottom\"\n        trigger=\"click\"\n        rootClose={true}\n        overlay={CustomPopover}\n      >\n        <span key={childKey}>{children}</span>\n      </OverlayTrigger>\n    );\n  } else {\n    return children;\n  }\n};\n\nexport default WrapCheckbox;\n","export default {\n  ADD_ALL_PALLETS: \"ADD_ALL_PALLETS\",\n  ADD_OPERATION_NAME: \"ADD_OPERATION_NAME\",\n  ADD_OPERATION: \"ADD_OPERATION\",\n  ADD_PRODUCT_DESCRIPTIONS: \"ADD_PRODUCT_DESCRIPTIONS\",\n  ADD_PRODUCT_TYPE_ID: \"ADD_PRODUCT_TYPE_ID\",\n  ADD_PRODUCTS: \"ADD_PRODUCTS\",\n  HIDE_ALERT: \"HIDE_ALERT\",\n  LOAD_OPTIONS: \"LOAD_OPTIONS\",\n  SET_IS_EXPANDED: \"SET_IS_EXPANDED\",\n  SET_LABEL_IDS: \"SET_LABEL_IDS\",\n  SET_LABEL_LIST: \"SET_LABEL_LIST\",\n  SET_LOADING: \"SET_LOADING\",\n  SET_PRODUCT_DESCRIPTIONS: \"SET_PRODUCT_DESCRIPTIONS\",\n  SET_PRODUCT_TYPE_NAME: \"SET_PRODUCT_TYPE_NAME\",\n  SET_PRODUCTS: \"SET_PRODUCTS\",\n  SET_TYPEAHEAD_LOADING: \"SET_TYPEAHEAD_LOADING\",\n  SHOW_ALERT: \"SHOW_ALERT\",\n  TOGGLE_ALERT: \"TOGGLE_ALERT\",\n  UNSET_LOADING: \"UNSET_LOADING\",\n  UPDATE_BASE_URL: \"UPDATE_BASE_URL\",\n  SET_SHIPMENT_DETAIL: \"SET_SHIPMENT_DETAIL\",\n  TOGGLE_SHIPPED: \"TOGGLE_SHIPPED\",\n  UPDATE_IS_EXPANDED: \"UPDATE_IS_EXPANDED\",\n  UPDATE_ITEM_COUNTS: \"UPDATE_ITEM_COUNTS\",\n  UPDATE_PRODUCTS: \"UPDATE_PRODUCTS\",\n  UPDATE_PRODUCT_DESCRIPTIONS: \"UPDATE_PRODUCT_DESCRIPTIONS\",\n  UPDATE_CODE_DESCRIPTIONS: \"UPDATE_CODE_DESCRIPTIONS\",\n  UPDATE_UI: \"UPDATE_UI\",\n  SUBMIT_START: \"SUBMIT_START\",\n  UPDATE_ERRORS: \"UPDATE_ERRORS\",\n  ADD_SHIPMENT_FROM_FETCH: \"ADD_SHIPMENT_FROM_FETCH\",\n};\n","import actions from \"../Redux/actions\";\n\nexport const funcs = {\n  loadProductsAndDescriptions: function (pallets) {\n    let products = [];\n    let productDescriptions = {};\n    let itemCounts = {};\n    pallets.forEach((pl) => {\n      if (products.indexOf(pl.item_id) === -1) {\n        products.push(pl.item_id);\n        productDescriptions[pl.item_id] = pl.code_desc;\n        itemCounts = {\n          ...itemCounts,\n          ...funcs.updateSingleItemLabelCount(pallets, pl.item_id),\n        };\n      }\n    });\n    const isExpanded = products.reduce((prev, curr, idx) => {\n      prev[curr] = false;\n      return prev;\n    }, {});\n\n    return { products, productDescriptions, isExpanded, itemCounts };\n  },\n  /**\n   *\n   * @param {*} palletObject\n   */\n  updateCodeDescriptions: function (labelId) {\n    return function (dispatch, getState) {\n      dispatch({ type: actions.UPDATE_CODE_DESCRIPTIONS });\n      let { products: p } = getState();\n\n      const { products, allPallets } = p;\n\n      const plObject = allPallets.filter((plObj) => {\n        return parseInt(plObj.id) === parseInt(labelId);\n      });\n\n      const { item_id: itemId, code_desc } = plObject[0];\n\n      dispatch({\n        type: actions.UPDATE_ITEM_COUNTS,\n        data: funcs.updateSingleItemLabelCount(allPallets, itemId),\n      });\n\n      if (products.indexOf(itemId) === -1) {\n        dispatch({\n          type: actions.UPDATE_IS_EXPANDED,\n          data: { [itemId]: false },\n        });\n        dispatch({\n          type: actions.UPDATE_PRODUCTS,\n          data: itemId,\n        });\n        dispatch({\n          type: actions.UPDATE_PRODUCT_DESCRIPTIONS,\n          data: { [itemId]: code_desc },\n        });\n      }\n    };\n  },\n\n  updateSingleItemLabelCount: function (productArray, itemId) {\n    const count = productArray.filter((value, index) => {\n      return value.item_id === itemId;\n    }).length;\n\n    return { [itemId]: count };\n  },\n  getLabelList: function (productId, allPallets) {\n    const labelList = allPallets.reduce((accum, current, idx) => {\n      if (current.item_id === productId) {\n        accum.push(current);\n      }\n      return accum;\n    }, []);\n\n    return { [productId]: labelList };\n  },\n\n  toggleIsExpanded: function (productId, isExpanded) {\n    Object.keys(isExpanded).forEach((key) => {\n      if (parseInt(key) === parseInt(productId)) {\n        isExpanded[key] = !isExpanded[key];\n      } else {\n        isExpanded[key] = false;\n      }\n    });\n\n    return isExpanded;\n  },\n\n  toggleAlert: function (txt, bold, variant) {\n    const newAlertState = !this.state.showAlert;\n    this.setState({\n      alertVariant: variant,\n      alertText: txt,\n      alertTextBold: bold,\n      showAlert: newAlertState,\n    });\n    if (newAlertState) {\n      setTimeout(() => {\n        this.setState({ showAlert: !newAlertState });\n      }, 4000);\n    }\n  },\n  addRemoveLabel: function (isAdd, labelId, labelIds) {\n    if (isAdd && labelIds.indexOf(labelId) === -1) {\n      labelIds.push(labelId);\n    }\n    if (!isAdd) {\n      labelIds = labelIds.filter((value) => {\n        return value !== labelId;\n      });\n    }\n\n    return labelIds;\n  },\n\n  parseRouterArgs: function (props) {\n    // gotta fix this it's ugggggly move it out of here\n    let { operation, productTypeOrId } = props;\n\n    return { operation, productTypeOrId };\n  },\n\n  getValidationState: function (fieldName, errors) {\n    if (errors[fieldName] !== undefined) {\n      return true;\n    }\n    return false;\n  },\n\n  formatErrors: function (fieldName, fieldErrors) {\n    let errors = [];\n    if (fieldErrors[fieldName]) {\n      let obj = fieldErrors[fieldName];\n\n      errors = Object.keys(obj).map((key) => {\n        return obj[key];\n      });\n    }\n\n    return errors.join(\", \");\n  },\n\n  getLabelObject: function (id, allPallets) {\n    const ret = allPallets.filter((current, idx) => {\n      return current.id === id;\n    });\n    return ret[0];\n  },\n  buildLabelString: function (palletObject) {\n    const { location, item, bb_date, pl_ref, qty, description } = palletObject;\n\n    const locationName = location.location;\n\n    const d = new Date(bb_date);\n\n    const stringValues = [\n      locationName,\n      item,\n      d.toLocaleDateString(),\n      pl_ref,\n      qty,\n      description,\n    ];\n    return stringValues.join(\", \");\n  },\n};\n\nexport default funcs;\n","/* showAlert: false,\n alertTextBold: \"Default Alert Bold\",\n alertText: \"Default alert text\",\n alertVariant: \"info\", */\n\nimport actions from \"./actions\";\nimport funcs from \"../Utils/functions\";\n\nexport const showAlert = (alertTextBold, alertText, alertVariant) => {\n  return {\n    type: actions.SHOW_ALERT,\n    data: {\n      alertTextBold,\n      alertText,\n      alertVariant,\n    },\n  };\n};\n\nexport const toggleAlert = () => {\n  return {\n    type: actions.TOGGLE_ALERT,\n  };\n};\n\nexport const updateBaseUrl = (baseUrl) => {\n  return { type: actions.UPDATE_BASE_URL, data: baseUrl };\n};\n\nexport const setTypeAheadLoading = (b) => ({\n  type: actions.SET_TYPEAHEAD_LOADING,\n  data: b,\n});\n\nexport const setShipmentDetail = (fieldName, fieldValue) => ({\n  type: actions.SET_SHIPMENT_DETAIL,\n  data: {\n    fieldName: fieldName,\n    fieldValue: fieldValue,\n  },\n});\n\nexport const addOperationName = (operationName) => ({\n  type: actions.ADD_OPERATION_NAME,\n  data: operationName,\n});\n\nexport const addAllPallets = (allPallets) => ({\n  type: actions.ADD_ALL_PALLETS,\n  data: allPallets,\n});\n\nexport const addShipmentFromFetch = (shipment) => ({\n  type: actions.ADD_SHIPMENT_FROM_FETCH,\n  data: shipment,\n});\n\nexport const addProductTypeId = (productTypeId) => ({\n  type: actions.ADD_PRODUCT_TYPE_ID,\n  data: productTypeId,\n});\n\nexport const setLabelIds = (labelIds) => ({\n  type: actions.SET_LABEL_IDS,\n  data: labelIds,\n});\n\nexport const addRemoveLabel = (isAdd, labelId) => {\n  return function (dispatch, getState) {\n    let labelIds = getState().shipment.labelIds;\n\n    labelIds = funcs.addRemoveLabel(isAdd, labelId, labelIds);\n\n    dispatch(setLabelIds(labelIds));\n\n    dispatch(funcs.updateCodeDescriptions(labelId));\n  };\n};\n","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport { faBan } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport WrapCheckbox from \"./WrapCheckbox\";\nimport { connect } from \"react-redux\";\nimport funcs from \"../Utils/functions\";\nimport * as actionCreators from \"../Redux/creators\";\n\nconst CheckboxesAvailable = function (props) {\n  const { labelLists, productId, labelIds, addRemoveLabel } = props;\n\n  return labelLists[productId].map((value, idx) => {\n    let icon = null;\n\n    const checked = labelIds.indexOf(value.id) > -1;\n    let style = {};\n    if (value.disabled) {\n      icon = <FontAwesomeIcon icon={faBan} />;\n      style = { pointerEvents: \"none\" };\n    }\n    let labelText = funcs.buildLabelString(value);\n\n    return (\n      <WrapCheckbox\n        key={value.pl_ref}\n        childKey={value.pl_ref}\n        disabled={value.disabled}\n      >\n        <Form.Check\n          disabled={value.disabled}\n          style={style}\n          key={value.pl_ref}\n          id={value.pl_ref}\n        >\n          <Form.Check.Input\n            checked={checked}\n            isInvalid={value.disabled}\n            type={\"checkbox\"}\n            onChange={(e) => addRemoveLabel(e.target.checked, value.id)}\n          />\n          <Form.Check.Label>\n            {icon} {labelText}\n          </Form.Check.Label>\n        </Form.Check>\n      </WrapCheckbox>\n    );\n  });\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addRemoveLabel: (isAdd, labelId) => {\n      dispatch(actionCreators.addRemoveLabel(isAdd, labelId));\n    },\n  };\n};\n\nexport default connect(\n  (state) => ({ ...state }),\n  mapDispatchToProps\n)(CheckboxesAvailable);\n","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Badge from \"react-bootstrap/Badge\";\nimport CheckboxesAvailable from \"./CheckboxesAvailable\";\nimport { connect } from \"react-redux\";\nimport funcs from \"../Utils/functions\";\nimport actions from \"../Redux/actions\";\n\nconst CardAvailableItems = function (props) {\n  const {\n    labelCounts,\n    products,\n    labelIds,\n    getLabelList,\n    toggleIsExpanded,\n    isExpanded,\n    labelLists,\n    productDescriptions,\n\n    allPallets,\n  } = props;\n\n  let cardContents = null;\n\n  if (products) {\n    cardContents = products.map((productId, idx) => {\n      let cardBody = null;\n      if (labelLists[productId] && isExpanded[productId]) {\n        cardBody = (\n          <Card.Body className={isExpanded[productId]}>\n            <CheckboxesAvailable\n              labelLists={labelLists}\n              labelIds={labelIds}\n              productId={productId}\n            />\n          </Card.Body>\n        );\n      }\n\n      return (\n        <div key={`wrap-${idx}`}>\n          <Card.Header\n            onClick={() => {\n              getLabelList(productId, allPallets);\n              toggleIsExpanded(productId, isExpanded);\n            }}\n            as=\"h5\"\n            className=\"toggen-header\"\n            key={`header-{idx}`}\n          >\n            {\" \"}\n            {productDescriptions[productId]}{\" \"}\n            {labelCounts[productId] && (\n              <Badge variant=\"primary\">{labelCounts[productId]}</Badge>\n            )}\n          </Card.Header>\n          {cardBody}\n        </div>\n      );\n    });\n  }\n\n  return <Card key={`card-top-level`}>{cardContents}</Card>;\n};\n\nconst mapStateToProps = (state) => {\n  const { products: p, ui } = state;\n  return {\n    isExpanded: ui.isExpanded,\n    products: p.products,\n    allPallets: p.allPallets,\n    labelLists: p.labelLists,\n    labelCounts: p.labelCounts,\n    productDescriptions: p.productDescriptions,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    getLabelList: (productId, allPallets) =>\n      dispatch({\n        type: actions.SET_LABEL_LIST,\n        data: funcs.getLabelList(productId, allPallets),\n      }),\n    toggleIsExpanded: (productId, isExpanded) => {\n      dispatch({\n        type: actions.SET_IS_EXPANDED,\n        data: funcs.toggleIsExpanded(productId, isExpanded),\n      });\n    },\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CardAvailableItems);\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\n\nexport default function (props) {\n  const { click: submit } = props;\n  return (\n    <Button\n      variant=\"primary\"\n      size=\"sm\"\n      className=\"my-btn\"\n      onClick={() => {\n        submit();\n      }}\n      type=\"submit\"\n    >\n      Submit\n    </Button>\n  );\n}\n","import React from \"react\";\nimport FormCheck from \"react-bootstrap/FormCheck\";\nimport { connect } from \"react-redux\";\nimport funcs from \"../Utils/functions\";\nimport * as actionCreators from \"../Redux/creators\";\n\nconst CheckboxesOnShipments = function (props) {\n  const { labelIds, allPallets, addRemoveLabel } = props;\n\n  if (labelIds) {\n    return labelIds.map((id) => {\n      const palletObject = funcs.getLabelObject(id, allPallets);\n      return (\n        <FormCheck\n          key={palletObject.pl_ref}\n          id={`checkbox-{id}`}\n          checked\n          label={funcs.buildLabelString(palletObject)}\n          onChange={(e) => addRemoveLabel(e.target.checked, palletObject.id)}\n        />\n      );\n    });\n  }\n  return null;\n};\n\nconst mapStateToProps = (state) => {\n  const { shipment: s, products: p } = state;\n  return {\n    labelIds: s.labelIds,\n    allPallets: p.allPallets,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    addRemoveLabel: (isAdd, labelId, labelIds) => {\n      dispatch(actionCreators.addRemoveLabel(isAdd, labelId));\n    },\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CheckboxesOnShipments);\n","import actions from \"../Redux/actions\";\nimport funcs from \"../Utils/functions\";\nimport * as actionCreators from \"../Redux/creators\";\n\nvar traverse = function (o, fn) {\n  for (var i in o) {\n    fn.apply(this, [i, o[i]]);\n    if (o[i] !== null && typeof o[i] == \"object\") {\n      traverse(o[i], fn);\n    }\n  }\n};\n\nexport const fetchApi = {\n  fetchData: function (operation, productTypeOrId, baseUrl) {\n    return function (dispatch) {\n      dispatch({\n        type: actions.SET_LOADING,\n      });\n      const suffix = [operation, productTypeOrId].filter((x) => x);\n\n      const url = `${baseUrl}Shipments/` + suffix.join(\"/\");\n\n      return fetch(url, {\n        headers: {\n          Accept: \"application/json\",\n          \"X-Requested-With\": \"XMLHttpRequest\",\n        },\n      })\n        .then((resp) => {\n          return resp.json();\n        })\n        .then((d) => {\n          let allPallets = [];\n          let operationName = \"\";\n          let productTypeId = productTypeOrId;\n          dispatch({\n            type: actions.ADD_OPERATION,\n            data: operation,\n          });\n          switch (operation) {\n            case \"add-shipment\":\n              operationName = \"Add\";\n              allPallets = d[\"shipment_labels\"];\n              dispatch({\n                type: actions.ADD_OPERATION_NAME,\n                data: operationName,\n              });\n\n              dispatch({\n                type: actions.ADD_PRODUCT_TYPE_ID,\n                data: productTypeId,\n              });\n              dispatch({\n                type: actions.ADD_ALL_PALLETS,\n                data: allPallets,\n              });\n\n              break;\n            case \"edit-shipment\":\n              operationName = \"Edit\";\n              const shipmentPallets = d[\"shipment\"][\"pallets\"];\n              allPallets = shipmentPallets.concat(d.shipment_labels);\n              dispatch(actionCreators.addOperationName(operationName));\n\n              dispatch(actionCreators.addAllPallets(allPallets));\n\n              const labelIds = shipmentPallets.map((pallet) => {\n                return pallet.id;\n              });\n              productTypeId = d[\"shipment\"][\"product_type_id\"];\n              dispatch(actionCreators.addProductTypeId(productTypeId));\n              dispatch(actionCreators.addShipmentFromFetch(d.shipment));\n\n              dispatch(actionCreators.setLabelIds(labelIds));\n\n              break;\n            default:\n              break;\n          }\n\n          dispatch(fetchApi.fetchProductType(productTypeId, baseUrl));\n\n          const {\n            products,\n            productDescriptions,\n            isExpanded,\n            itemCounts,\n          } = funcs.loadProductsAndDescriptions(allPallets);\n\n          dispatch({\n            type: actions.UPDATE_ITEM_COUNTS,\n            data: itemCounts,\n          });\n\n          dispatch({\n            type: actions.SET_PRODUCTS,\n            data: products,\n          });\n          dispatch({\n            type: actions.SET_PRODUCT_DESCRIPTIONS,\n            data: productDescriptions,\n          });\n\n          dispatch({\n            type: actions.SET_IS_EXPANDED,\n            data: isExpanded,\n          });\n\n          dispatch({\n            type: actions.SET_LOADING,\n            data: false,\n          });\n        })\n        .catch((e) => console.log(e));\n    };\n  },\n\n  submitData: function () {\n    return function (dispatch, getState) {\n      dispatch({\n        type: actions.UPDATE_UI,\n        data: {\n          errors: {},\n          loading: true,\n        },\n      });\n\n      const state = getState();\n      const { products: p, ui, shipment: s } = state;\n\n      const { operation, shipper, shipped, id, destination, labelIds } = s;\n      const { baseUrl } = ui;\n      const { productType } = p;\n\n      let postObject = {\n        shipper: shipper,\n        destination: destination,\n        shipped: shipped,\n        product_type_id: productType,\n        pallets: labelIds,\n      };\n\n      let urlArg = \"\";\n      switch (operation) {\n        case \"add-shipment\":\n          urlArg = productType;\n          break;\n        case \"edit-shipment\":\n          urlArg = id;\n          postObject.id = id;\n          const labels = labelIds.map((cur) => {\n            return { shipment_id: id, id: cur };\n          });\n          postObject = { ...postObject, pallets: labels };\n\n          break;\n        default:\n          console.log(\"it broken\");\n      }\n\n      const parts = [operation, urlArg].filter((x) => x);\n\n      const url = baseUrl + \"Shipments/\" + parts.join(\"/\");\n\n      let fetchOptions = {\n        method: \"POST\", // *GET, POST, PUT, DELETE, etc.\n        mode: \"cors\", // no-cors, cors, *same-origin\n        cache: \"no-cache\", // *default, no-cache, reload, force-cache, only-if-cached\n        credentials: \"same-origin\", // include, *same-origin, omit\n        headers: {\n          \"X-CSRF-Token\": window.csrfToken,\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n          \"X-Requested-With\": \"XMLHttpRequest\",\n        },\n        redirect: \"error\",\n        body: JSON.stringify(postObject),\n      };\n\n      dispatch({\n        type: actions.SUBMIT_START,\n      });\n\n      return fetch(url, fetchOptions)\n        .then((response) => response.json())\n        .then((d) => {\n          let redirect = true;\n\n          let errorObject = d.error || {};\n\n          if (Object.keys(errorObject).length > 0) {\n            // eslint-disable-next-line array-callback-return\n\n            if (errorObject.pallets) {\n              errorObject = errorObject.pallets;\n              // de nest d.error.pallets\n              traverse(errorObject, function (k, v) {\n                if (k === \"shipped\") {\n                  errorObject = { [k]: v };\n                }\n              });\n            }\n            Object.keys(errorObject).forEach((fieldName) => {\n              dispatch({\n                type: actions.UPDATE_ERRORS,\n                data: { [fieldName]: errorObject[fieldName] },\n              });\n            });\n\n            redirect = false;\n          }\n          dispatch({\n            type: actions.UPDATE_UI,\n            data: {\n              loading: false,\n              redirect: redirect,\n            },\n          });\n        });\n    };\n  },\n\n  fetchProductType: function (productType, baseUrl) {\n    return function (dispatch) {\n      const url = `${baseUrl}ProductTypes/view/${productType}`;\n\n      if (!productType) return;\n      dispatch({ type: \"FETCH_PRODUCT_START\" });\n      return fetch(url, {\n        headers: {\n          Accept: \"application/json\",\n          \"X-Requested-With\": \"XMLHttpRequest\",\n        },\n      })\n        .then((resp) => {\n          return resp.json();\n        })\n        .then((d) => {\n          if (d.productType) {\n            dispatch({\n              type: actions.SET_PRODUCT_TYPE_NAME,\n              data: d.productType.name,\n            });\n          }\n        })\n        .catch((e) => {\n          throw e;\n        });\n    };\n  },\n\n  getSearchTerm: function (query) {\n    return function (dispatch, getState) {\n      dispatch({\n        type: actions.SET_TYPEAHEAD_LOADING,\n        data: true,\n      });\n      dispatch({ type: \"START_FETCH_TYPEAHEAD\" });\n      const baseUrl = getState().ui.baseUrl;\n\n      return fetch(`${baseUrl}Shipments/destinationLookup?term=${query}`, {\n        headers: {\n          Accept: \"application/json\",\n        },\n      })\n        .then((resp) => resp.json())\n        .then((json) => {\n          dispatch({\n            type: actions.SET_TYPEAHEAD_LOADING,\n            data: false,\n          });\n          dispatch({\n            type: actions.LOAD_OPTIONS,\n            data: json,\n          });\n        });\n    };\n  },\n};\n\nexport default fetchApi;\n","import React from \"react\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\nimport Form from \"react-bootstrap/Form\";\nimport { connect } from \"react-redux\";\nimport actions from \"../Redux/actions\";\n\nconst CheckboxShipped = function (props) {\n  const {\n    toggleShipped,\n    getValidationState,\n    shippedError,\n    shipped,\n    errors,\n  } = props;\n  return (\n    <FormGroup>\n      <Form.Check id=\"shipped\">\n        <Form.Check.Input\n          type=\"checkbox\"\n          checked={shipped}\n          onChange={toggleShipped}\n          isValid={getValidationState(\"shipped\", errors)}\n        />\n        <Form.Check.Label>Shipped</Form.Check.Label>\n        <Form.Control.Feedback>{shippedError}</Form.Control.Feedback>\n      </Form.Check>\n    </FormGroup>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { shipment: s, ui } = state;\n  return {\n    shipped: s.shipped,\n    errors: ui.errors,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    toggleShipped: () => {\n      dispatch({ type: actions.TOGGLE_SHIPPED });\n    },\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckboxShipped);\n","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport FormGroup from \"react-bootstrap/FormGroup\";\nimport FormLabel from \"react-bootstrap/FormLabel\";\nimport FormText from \"react-bootstrap/FormText\";\nimport { AsyncTypeahead } from \"react-bootstrap-typeahead\"; // ES2015\nimport Col from \"react-bootstrap/Col\";\nimport { connect } from \"react-redux\";\nimport funcs from \"../Utils/functions\";\nimport fetchAPI from \"../Utils/fetchFunctions\";\nimport { bindActionCreators } from \"redux\";\nimport * as actionCreators from \"../Redux/creators\";\n\nconst FormRow = function (props) {\n  const {\n    formatErrors,\n    setShipmentDetail,\n    isTypeAheadLoading,\n    getSearchTerm,\n    errors,\n    options,\n    destination,\n    submitOnEnter,\n    shipper,\n  } = props;\n\n  return (\n    <Form.Row onSubmit={(e) => e.preventDefault()}>\n      <Col lg={3}>\n        <FormGroup controlId=\"shipper\">\n          <FormLabel>Shipment</FormLabel>{\" \"}\n          <FormControl\n            type=\"text\"\n            value={shipper}\n            onKeyDown={(event) => {\n              if (event.key === \"Enter\") {\n                submitOnEnter();\n              }\n            }}\n            isValid={funcs.getValidationState(\"shipper\", errors)}\n            placeholder=\"Shipment\"\n            onChange={(e) => {\n              /*   const { shipper, ...newState } = errors;\n              setState({\n                errors: {\n                  ...newState,\n                },\n              }); */\n\n              setShipmentDetail(e.target.id, e.target.value);\n            }}\n            required=\"required\"\n          />\n          <FormControl.Feedback />\n          <FormText>{formatErrors(\"shipper\", errors)}</FormText>\n        </FormGroup>\n      </Col>\n      <Col lg={3} key=\"row-col-2\">\n        <FormGroup controlId=\"destination\">\n          <FormLabel>Destination</FormLabel>\n          <AsyncTypeahead\n            minLength={1}\n            placeholder=\"Destination\"\n            isLoading={isTypeAheadLoading}\n            id=\"destination\"\n            isValid={funcs.getValidationState(\"destination\", errors)}\n            selected={[destination]}\n            onChange={(selected) => {\n              if (selected.length > 0) {\n                let destination = selected[0].value;\n                setShipmentDetail(\"destination\", destination);\n              }\n            }}\n            onInputChange={(destination) => {\n              setShipmentDetail(\"destination\", destination);\n            }}\n            onSearch={(query) => {\n              getSearchTerm(query);\n            }}\n            labelKey=\"value\"\n            options={options}\n            onKeyDown={(event) => {\n              if (event.key === \"Enter\") {\n                submitOnEnter();\n              }\n            }}\n          />\n          <FormText>{formatErrors(\"destination\", errors)}</FormText>\n        </FormGroup>\n      </Col>\n    </Form.Row>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { ui, shipment: s } = state;\n\n  return {\n    isTypeAheadLoading: ui.isTypeAheadLoading,\n    baseUrl: ui.baseUrl,\n    errors: ui.errors,\n    options: ui.options,\n    shipper: s.shipper,\n    destination: s.destination,\n    shipped: s.shipped,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(\n    {\n      setTypeaheadLoadingState: actionCreators.setTypeAheadLoading,\n      getSearchTerm: fetchAPI.getSearchTerm,\n      setShipmentDetail: actionCreators.setShipmentDetail,\n      submitOnEnter: fetchAPI.submitData,\n    },\n    dispatch\n  );\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormRow);\n","import React from \"react\";\n\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Spinner from \"./Spinner\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport Wrap from \"./Wrap\";\nimport AlertMessage from \"./AlertMessage\";\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\nimport \"./ShipApp.css\";\nimport CardOnShipment from \"./CardOnShipment\";\nimport CardAvailableItems from \"./CardAvailableItems\";\nimport ButtonSubmit from \"./ButtonSubmit\";\nimport CheckboxesOnShipments from \"./CheckboxesOnShipments\";\nimport fetchApi from \"../Utils/fetchFunctions\";\nimport funcs from \"../Utils/functions\";\nimport CheckboxShipped from \"./CheckboxShipped\";\nimport FormRow from \"./FormRow\";\nimport * as actionCreators from \"../Redux/creators\";\nimport { bindActionCreators } from \"redux\";\n// import queryString from \"query-string\";\n\nclass App extends React.Component {\n  componentDidMount() {\n    const { operation, productTypeOrId } = funcs.parseRouterArgs(\n      this.props.match.params\n    );\n    const { baseUrl, fetchData, updateBaseUrl } = this.props;\n\n    updateBaseUrl(baseUrl);\n\n    fetchData(operation, productTypeOrId, baseUrl);\n  }\n\n  render() {\n    const {\n      products,\n      productDescriptions,\n      labelLists,\n      showAlert,\n      labelCounts,\n      toggleAlert,\n      isExpanded,\n      productTypeName,\n      loading,\n      baseUrl,\n      redirect,\n      operationName,\n      options,\n      alert,\n      errors,\n      submitData,\n      isTypeAheadLoading,\n\n      labelIds,\n    } = this.props;\n\n    if (redirect && process.env.NODE_ENV === \"production\") {\n      window.location = baseUrl + \"Shipments/\";\n    }\n\n    return (\n      <Wrap>\n        <Row key=\"row-1\">\n          <Col lg={12}>\n            <AlertMessage content={alert} onDismiss={toggleAlert} />\n            <h3>\n              {operationName} {productTypeName} Shipment\n            </h3>\n          </Col>\n        </Row>\n        <Row key=\"row-2\">\n          <Col lg={12} key=\"row-col-1\">\n            <FormRow\n              options={options}\n              getValidationState={funcs.getValidationState}\n              isTypeAheadLoading={isTypeAheadLoading}\n              formatErrors={funcs.formatErrors}\n            ></FormRow>\n          </Col>\n        </Row>\n        <Row key=\"row-3\">\n          <Col lg={6}>\n            <CheckboxShipped\n              toggleShipped={this.toggleShipped}\n              getValidationState={funcs.getValidationState}\n              shippedError={funcs.formatErrors(\"shipped\", errors)}\n            />\n          </Col>\n          <Col lg={1} className=\"mb-3\">\n            <ButtonSubmit click={submitData} showAlert={showAlert} />\n          </Col>\n          <Col lg={5}>\n            <Spinner loading={loading} />\n          </Col>\n        </Row>\n        <Row key=\"row-4\">\n          <Col>\n            <div className=\"pre-scrollable\">\n              <div className=\"card-container\">\n                <CardAvailableItems\n                  labelLists={labelLists}\n                  isExpanded={isExpanded}\n                  labelCounts={labelCounts}\n                  products={products}\n                  labelIds={labelIds}\n                  productDescriptions={productDescriptions}\n                />\n              </div>\n            </div>\n          </Col>\n          <Col>\n            <CardOnShipment selectedCount={labelIds.length}>\n              <CheckboxesOnShipments count={labelIds.length} />\n            </CardOnShipment>\n          </Col>\n        </Row>\n      </Wrap>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { shipment: s, ui, products: p, alert } = state;\n  return {\n    alert,\n    labelIds: s.labelIds,\n    labelCounts: p.labelCounts,\n    errors: ui.errors,\n    products: p.products,\n    productDescriptions: p.productDescriptions,\n    labelLists: p.labelLists,\n    isExpanded: ui.isExpanded,\n    productTypeName: p.productTypeName,\n    loading: ui.loading,\n    options: ui.options,\n    redirect: ui.redirect,\n    operationName: ui.operationName,\n    isTypeAheadLoading: ui.isTypeAheadLoading,\n  };\n};\n\nconst wrapWithDispatch = {\n  submitData: fetchApi.submitData,\n  fetchData: fetchApi.fetchData,\n  toggleAlert: actionCreators.toggleAlert,\n  showAlert: actionCreators.showAlert,\n  updateBaseUrl: actionCreators.updateBaseUrl,\n};\n\n/* const mapDispatchToProps = (dispatch) => {\n  return {\n    dispatch,\n    fetchData: (operation, productTypeOrId, baseUrl) => {\n      dispatch(fetchApi.fetchData(operation, productTypeOrId, baseUrl));\n    },\n    submitData: () => {\n      dispatch(fetchApi.submitData());\n    },\n    toggleAlert: () => {\n      dispatch(actionCreators.toggleAlert());\n    },\n    showAlertFunc: () => {\n      dispatch(actionCreators.showAlert(\"Bold Text\", \"Normal Text\", \"warning\"));\n    },\n  };\n};\n */\n\nconst mapDispatchToProps = (dispatch) => {\n  return bindActionCreators(wrapWithDispatch, dispatch);\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(App));\n","import actions from \"../actions\";\n\nlet initialState = {\n  operation: \"\",\n  id: \"\",\n  shipment_type: \"\",\n  shipped: false,\n  shipper: \"\",\n  destination: \"\",\n  product_type_id: \"\",\n  labelIds: [],\n};\n\nexport function shipment(state = initialState, action) {\n  switch (action.type) {\n    case actions.ADD_OPERATION:\n      return {\n        ...state,\n        operation: action.data,\n      };\n    case actions.SET_LABEL_IDS:\n      return {\n        ...state,\n        labelIds: action.data,\n      };\n\n    case actions.ADD_SHIPMENT_FROM_FETCH: {\n      return {\n        ...state,\n        ...action.data,\n      };\n    }\n    case actions.SET_SHIPMENT_DETAIL:\n      const { fieldName, fieldValue } = action.data;\n      return Object.assign({}, state, {\n        [fieldName]: fieldValue,\n      });\n    case actions.TOGGLE_SHIPPED: {\n      return {\n        ...state,\n        shipped: !state.shipped,\n      };\n    }\n    default:\n      return state;\n  }\n}\n","import actions from \"../actions\";\n\nlet initialState = {\n  showAlert: false,\n  alertTextBold: \"Default Alert Bold\",\n  alertText: \"Default alert text\",\n  alertVariant: \"info\",\n};\n\nexport function alert(state = initialState, action) {\n  switch (action.type) {\n    case actions.TOGGLE_ALERT:\n      return {\n        ...state,\n        showAlert: !state.showAlert,\n      };\n    case actions.SHOW_ALERT:\n      return {\n        ...state,\n        showAlert: true,\n        ...action.data,\n      };\n    case actions.HIDE_ALERT:\n      return {\n        ...state,\n        showAlert: false,\n      };\n    default:\n      return state;\n  }\n}\n","import actions from \"../actions\";\n\nconst initialState = {\n  products: [],\n  productDescriptions: {},\n  labelLists: {},\n  labelCounts: {},\n  productType: 0,\n  productTypeName: \"\",\n  allPallets: [],\n  productTypes: [],\n};\n\nexport function products(state = initialState, action) {\n  switch (action.type) {\n    case actions.SET_LABEL_LIST: {\n      return {\n        ...state,\n        labelLists: {\n          ...state.labelLists,\n          ...action.data,\n        },\n      };\n    }\n    case actions.ADD_PRODUCT_TYPE_ID: {\n      return {\n        ...state,\n        productType: action.data,\n      };\n    }\n    case actions.SET_PRODUCTS: {\n      return {\n        ...state,\n        products: action.data,\n      };\n    }\n    case actions.SET_PRODUCT_TYPE_NAME: {\n      return {\n        ...state,\n        productTypeName: action.data,\n      };\n    }\n    case actions.SET_PRODUCT_DESCRIPTIONS: {\n      return {\n        ...state,\n        productDescriptions: action.data,\n      };\n    }\n    case actions.UPDATE_PRODUCT_DESCRIPTIONS: {\n      return {\n        ...state,\n        products: {\n          ...state.products,\n          ...action.data,\n        },\n      };\n    }\n    case actions.UPDATE_ITEM_COUNTS: {\n      return {\n        ...state,\n        labelCounts: {\n          ...state.labelCounts,\n          ...action.data,\n        },\n      };\n    }\n\n    case actions.ADD_ALL_PALLETS:\n      return {\n        ...state,\n        allPallets: action.data,\n      };\n    default:\n      return state;\n  }\n}\n","import actions from \"../actions\";\n\nconst initialState = {\n  isExpanded: {},\n  options: [],\n  redirect: false,\n  loading: false,\n  errors: {},\n  operationName: \"\",\n  isTypeAheadLoading: false,\n  baseUrl: \"\",\n};\n\nexport function ui(state = initialState, action) {\n  switch (action.type) {\n    case actions.SET_IS_EXPANDED: {\n      return {\n        ...state,\n        isExpanded: action.data,\n      };\n    }\n    case actions.UPDATE_UI: {\n      return {\n        ...state,\n        ...action.data,\n      };\n    }\n    case actions.UPDATE_ERRORS: {\n      return {\n        ...state,\n        errors: {\n          ...state.errors,\n          ...action.data,\n        },\n      };\n    }\n    case actions.UPDATE_IS_EXPANDED: {\n      return {\n        ...state,\n        isExpanded: {\n          ...state.isExpanded,\n          ...action.data,\n        },\n      };\n    }\n    case actions.SET_TYPEAHEAD_LOADING: {\n      return {\n        ...state,\n        isTypeAheadLoading: action.data,\n      };\n    }\n    case actions.LOAD_OPTIONS: {\n      return {\n        ...state,\n        options: action.data,\n      };\n    }\n    case actions.UPDATE_BASE_URL:\n      return {\n        ...state,\n        baseUrl: action.data,\n      };\n\n    case actions.SET_LOADING:\n      return {\n        ...state,\n        loading: action.data,\n      };\n    case actions.TOGGLE_ALERT:\n      return {\n        ...state,\n        showAlert: !state.showAlert,\n      };\n\n    case actions.ADD_OPERATION_NAME:\n      return {\n        ...state,\n        operationName: action.data,\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport { shipment } from \"./shipment\";\nimport { alert } from \"./alert\";\nimport { products } from \"./products\";\nimport { ui } from \"./ui\";\n\nconst shipmentApp = combineReducers({\n  shipment,\n  alert,\n  products,\n  ui,\n});\n\nexport default shipmentApp;\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport shipmentApp from \"./reducers/rootReducer\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\n\nconst loggerMiddleware = createLogger();\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nlet middleWare = [thunkMiddleware];\n\nif (process.env.NODE_ENV !== \"production\") {\n  middleWare.push(loggerMiddleware);\n}\n\nexport let store = createStore(\n  shipmentApp,\n  composeEnhancers(applyMiddleware(...middleWare))\n);\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport { Switch } from \"react-router\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { store } from \"../Redux/store\";\n\nexport const Root = (props) => {\n  const { baseUrl } = props;\n  return (\n    <Provider store={store}>\n      <Router>\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            render={(props) => <App {...props} baseUrl={baseUrl} />}\n          />\n          <Route\n            path=\"/:operation(edit-shipment|add-shipment)/:productTypeOrId?\"\n            render={(props) => <App {...props} baseUrl={baseUrl} />}\n          />\n          <Route\n            path={`${baseUrl}shipments/process/:operation(edit-shipment|add-shipment)/:productTypeOrId?`}\n            render={(props) => <App {...props} baseUrl={baseUrl} />}\n          />\n        </Switch>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default Root;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Root from \"./Components/Root\";\n\nconst root = document.getElementById(\"root\");\n\nconst baseUrl = root.getAttribute(\"data-baseurl\");\n\nReactDOM.render(<Root baseUrl={baseUrl} />, root);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}